USE [pcInventory]
GO
/****** Object:  Table [dbo].[StandAlonePCs]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[StandAlonePCs](
	[RowID] [int] IDENTITY(1,1) NOT NULL,
	[Computer_Name_ECN] [nvarchar](255) NULL,
	[Department] [nvarchar](255) NULL,
	[Location_Building_and_Room] [nvarchar](255) NULL,
	[OS] [nvarchar](255) NULL,
	[Acquisition_Date] [datetime] NULL,
	[Reason] [nvarchar](255) NULL,
	[Enclave] [nvarchar](255) NULL,
	[POAM] [nvarchar](255) NULL,
	[POC] [nvarchar](255) NULL,
	[Item_Type] [nvarchar](255) NULL,
	[Path] [nvarchar](255) NULL,
 CONSTRAINT [PK_StandAlonePCs] PRIMARY KEY CLUSTERED 
(
	[RowID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Standalone]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Standalone](
	[Name] [varchar](50) NOT NULL,
	[Department] [varchar](50) NULL,
	[Room] [varchar](50) NULL,
	[Purpose] [varchar](255) NULL,
 CONSTRAINT [PK_Standalone] PRIMARY KEY CLUSTERED 
(
	[Name] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SSIS Configurations]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SSIS Configurations](
	[ConfigurationFilter] [nvarchar](255) NOT NULL,
	[ConfiguredValue] [nvarchar](255) NULL,
	[PackagePath] [nvarchar](255) NOT NULL,
	[ConfiguredValueType] [nvarchar](20) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[YourHRAllPermissionsTbl]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[YourHRAllPermissionsTbl](
	[UserName] [nvarchar](150) NULL,
	[Status] [nvarchar](50) NULL,
	[Admin] [nvarchar](5) NULL,
	[RowID] [int] IDENTITY(1,1) NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[YourHRAllPCTbl]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[YourHRAllPCTbl](
	[AcqDate] [datetime] NULL,
	[ECN5] [nvarchar](250) NULL,
	[Nomenclature] [nvarchar](250) NULL,
	[MfrSerialNo] [nvarchar](250) NULL,
	[NameplateModel] [nvarchar](250) NULL,
	[Manufacturer] [nvarchar](250) NULL,
	[CustomerID] [nvarchar](250) NULL,
	[CustodianName] [nvarchar](250) NULL,
	[CustomerName] [nvarchar](250) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[YourHR_HitCounter]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[YourHR_HitCounter](
	[ADAccount] [nvarchar](150) NULL,
	[PageURL] [nvarchar](250) NULL,
	[DateTime] [datetime] NULL,
	[Event] [nvarchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[spUpdateDate]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 7/2/2009
-- Description:	Dynamic SP to grab last update date
-- =============================================
CREATE PROCEDURE [dbo].[spUpdateDate] 
	-- Add the parameters for the stored procedure here
	@updateType int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	EXEC ('SELECT TOP (1) updateDate FROM updateDate WHERE updateType = 1 ORDER by updateDate Desc')
END
GO
/****** Object:  StoredProcedure [dbo].[spSCCM]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 7/2/2009
-- Description:	Dynamic SP to grab DMLSS Data
-- =============================================
CREATE PROCEDURE [dbo].[spSCCM]
	-- Add the parameters for the stored procedure here
	@sql varchar(MAX),
	@compare varchar (1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	EXEC ('
		SELECT SMSComputer.Name, SMSComputer.Name5, SMSComputer.UserName, SMSComputer.Manufacturer, SMSComputer.Model, SMSComputer.Domain, SMSOperating_System.Caption, DMLSS.CustodianName, DMLSS.CustomerName  
		FROM SMSComputer LEFT OUTER JOIN 
				SMSOperating_System ON SMSComputer.MachineID = SMSOperating_System.MachineID LEFT OUTER JOIN 
				DMLSS ON SMSComputer.Name5 = DMLSS.Ecn5 ' + @compare + ' ' + @sql + '')
END
GO
/****** Object:  StoredProcedure [dbo].[spSave3161TempData]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: June 1, 2010
-- Description:	Save all data in 3161 temp tables
-- to permanent tables and delete temp tables
-- =============================================
CREATE PROCEDURE [dbo].[spSave3161TempData]
		@instanceID VARCHAR(50), @suffix VARCHAR(40)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	--SET IDENTITY_INSERT Form3161Instances ON
	DECLARE @SQL VARCHAR(600);
	
	SET @SQL = 'INSERT INTO Form3161Instances '
	SET @SQL = @SQL + '(CreatedDate, Issue, TurnIn, RequestNo, VoucherNo, SendTo, DateRequired, DODAAC, Priority, FundingData, EndItemID, RequestFrom, '
	SET @SQL = @SQL + 'ManufacturerName, Model, MfrSerialNo, InstancePageCount, InstanceStatus, GrandTotal, SheetTotal, RecSupplyActionBy, IssueSupplyActionDate, '
	SET @SQL = @SQL + 'RecSupplyActionDate, IssueSupplyActionBy, QtyColumnBy, QtyColumnDate) '
	SET @SQL = @SQL + 'SELECT CreatedDate, Issue, TurnIn, RequestNo, VoucherNo, SendTo, DateRequired, DODAAC, Priority, FundingData, EndItemID, RequestFrom, '
	SET @SQL = @SQL + 'ManufacturerName, Model, MfrSerialNo, InstancePageCount, InstanceStatus, GrandTotal, SheetTotal, RecSupplyActionBy, IssueSupplyActionDate, '
	SET @SQL = @SQL + 'RecSupplyActionDate, IssueSupplyActionBy, QtyColumnBy, QtyColumnDate '
	SET @SQL = @SQL + 'FROM TEMP_Form3161Instances_' + @suffix + ' '
	SET @SQL = @SQL + 'WHERE instanceId = ' + @instanceId
	EXEC (@SQL)
	
	--SET IDENTITY_INSERT Form3161Instances OFF
	
	SET @SQL = 'INSERT INTO Form3161Items '
	SET @SQL = @SQL + '(Ecn, Nomenclature, ItemNoA, StockNo, ItemDescription, UnitOfIssue, Quantity, SupplyAction, Code, UnitPrice, TotalCost, PostedBy, PostedDate, '
	SET @SQL = @SQL + 'ItemStatus, pageOfPages, pageCount) '
	SET @SQL = @SQL + 'SELECT      Ecn, Nomenclature, ItemNoA, StockNo, ItemDescription, UnitOfIssue, Quantity, SupplyAction, Code, UnitPrice, TotalCost, PostedBy, PostedDate, '
	SET @SQL = @SQL + 'ItemStatus, pageOfPages, pageCount '
	SET @SQL = @SQL + 'FROM TEMP_Form3161Items_' + @suffix + ' '
	SET @SQL = @SQL + 'WHERE instanceID = ' + @instanceId + ' '
	EXEC (@SQL)

	SET @SQL = 'DELETE FROM [dbo].[TEMP_Form3161Instances_' + @suffix + '] WHERE instanceID = ' + @instanceId + ' ';
	EXEC (@SQL);
	SET @SQL = 'DELETE FROM [dbo].[TEMP_Form3161Items_' + @suffix + '] WHERE instanceID = ' + @instanceId + ' ';
	EXEC (@SQL);
END
GO
/****** Object:  StoredProcedure [dbo].[spSave2062TempData]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: June 1, 2010
-- Description:	Save all data in 2062 temp tables
-- to permanent tables and delete temp tables
-- =============================================
CREATE PROCEDURE [dbo].[spSave2062TempData]
		@instanceID VARCHAR(50), @suffix VARCHAR(40)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	--SET IDENTITY_INSERT Form2062Instances ON
	DECLARE @SQL VARCHAR(600);
	
	SET @SQL = 'INSERT INTO Form2062Instances '
	SET @SQL = @SQL + '(InstancePageCount, InstanceStatus, Quantity, PublicationDate, PublicationNo, EndItemDescription, EndItemStockNo, '
	SET @SQL = @SQL + 'HandReceiptNo, ToWho, FromWho, CreatedDate) '
	SET @SQL = @SQL + 'SELECT InstancePageCount, InstanceStatus, Quantity, PublicationDate, PublicationNo, EndItemDescription, EndItemStockNo, '
	SET @SQL = @SQL + 'HandReceiptNo, ToWho, FromWho, CreatedDate '
	SET @SQL = @SQL + 'FROM TEMP_Form2062Instances_' + @suffix + ' '
	SET @SQL = @SQL + 'WHERE instanceId = ' + @instanceId;
	
	EXEC (@SQL)
	--SET IDENTITY_INSERT Form2062Instances OFF

	
	SET @SQL = 'INSERT INTO Form2062Items '
	SET @SQL = @SQL + '(stockNo, itemDescription, cColumn, ui, sec, qtyAuth, qtyA, qtyB, qtyC, qtyD, qtyE, qtyF, ItemStatus, pageCount, pageOfPages) '
	SET @SQL = @SQL + 'SELECT stockNo, itemDescription, cColumn, ui, sec, qtyAuth, qtyA, qtyB, qtyC, qtyD, qtyE, qtyF, ItemStatus, pageCount, pageOfPages '
	SET @SQL = @SQL + 'FROM TEMP_Form2062Items_' + @suffix + ' '
	SET @SQL = @SQL + 'WHERE instanceID = ' + @instanceId;
	
	EXEC (@SQL)
	
	SET @SQL = 'DELETE FROM [dbo].[TEMP_Form2062Instances_' + @suffix + '] WHERE instanceID = ' + @instanceID + ' ';
	EXEC (@SQL);
	SET @SQL = 'DELETE FROM [dbo].[TEMP_Form2062Items_' + @suffix + '] WHERE instanceID = ' + @instanceID + ' ';
	EXEC (@SQL);
END
GO
/****** Object:  StoredProcedure [dbo].[spSMSPEntry]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: September 1, 2009
-- Description:	Stored Proc to grab data for IAVS SMS Program data
-- =============================================
CREATE PROCEDURE [dbo].[spSMSPEntry] 
	-- Add the parameters for the stored procedure here
	@criteria varchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT Publisher, DisplayName, Version, CONVERT(VARCHAR(32),InstallDate,113) AS InstallDate, CONVERT(VARCHAR(11),SMSProgram.TimeKey,112) AS TimeKey 
	FROM SMSProgram 
		LEFT JOIN SMSComputer on SMSProgram.MachineID = SMSComputer.MachineID 
	WHERE SMSComputer.Name = ' + QuoteName(@criteria, '''') + ' ORDER BY Publisher, DisplayName, Version'
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spSMSEntry]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 21, 2009
-- Description:	Stored Proc to grab data for SMS entry
-- =============================================
CREATE PROCEDURE [dbo].[spSMSEntry] 
	-- Add the parameters for the stored procedure here
	@criteria varchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT Description, Domain, InstanceKey, MachineID, Manufacturer,Model, Name, NumberOfProcessors, Roles, Status, SystemType, UserName, CONVERT(VARCHAR(11),TimeKey,113) AS TimeKey 
	FROM SMSComputer 
	WHERE Name = ' + QuoteName(@criteria, '''') + ''
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spSMSDEntry2]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 21, 2009
-- Description:	Stored Proc to grab data for DMLSS entry
-- =============================================
CREATE PROCEDURE [dbo].[spSMSDEntry2] 
	-- Add the parameters for the stored procedure here
	@criteria varchar(255),
	@criteria2 varchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT Ecn, MfrSerialNo, NameplateModel,MedicalEquipmentMeAcqCostQty,CONVERT(VARCHAR(11),AcqDate,113) AS AcqDate,ItemID,Nomenclature,LifeExp, DMLSS.Manufacturer AS DMLSSManufacturer,CommonModel,EquipmentLocation, Ownership, MaintAct,MtfOrgNm,CustomerId, CustomerName, CustodianName, MfrSerialNo 
	FROM DMLSS JOIN SMSComputer ON DMLSS.ECN5 = SMSComputer.Name5 
	WHERE Ecn5 = ' + QuoteName(@criteria, '''') + ' AND LEFT(SMSComputer.Name, 8) IN (SELECT FacilityID from lcFacility WHERE FacilityName = ''Eisenhower'')'
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spSMSDEntry]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 21, 2009
-- Description:	Stored Proc to grab data for DMLSS entry
-- =============================================
CREATE PROCEDURE [dbo].[spSMSDEntry] 
	-- Add the parameters for the stored procedure here
	@criteria varchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT Ecn, MfrSerialNo, NameplateModel,MedicalEquipmentMeAcqCostQty,CONVERT(VARCHAR(11),AcqDate,113) AS AcqDate,ItemID,Nomenclature,LifeExp, Manufacturer AS DMLSSManufacturer,CommonModel,EquipmentLocation, Ownership, MaintAct,MtfOrgNm,CustomerId, CustomerName, CustodianName, MfrSerialNo 
	FROM DMLSS 
	WHERE Ecn5 = ' + QuoteName(@criteria, '''') + ''
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spSDMLSSEntry]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 21, 2009
-- Description:	Stored Proc to grab data for DMLSS entry
-- =============================================
CREATE PROCEDURE [dbo].[spSDMLSSEntry] 
	-- Add the parameters for the stored procedure here
	@criteria varchar(1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT Description, Domain, InstanceKey, MachineID, Manufacturer,Model, Name, NumberOfProcessors, Roles, Status, SystemType, UserName, CONVERT(VARCHAR(11),TimeKey,113) AS TimeKey 
	FROM SMSComputer 
	WHERE Name5 = ' + QuoteName(@criteria, '''') + ''
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spStoreUserTempData]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: August 10, 2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spStoreUserTempData] 
		@username VARCHAR(50),
		@suffix VARCHAR(50),
		@userGuid VARCHAR(50),
		@timeIn DATETIME,
		@timeOut DATETIME = NULL
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @SQL VARCHAR(MAX);
  DECLARE @tablename VARCHAR(90);
  
  SET @tablename = 'tmpUser_' + @suffix;
  
	IF EXISTS (SELECT NULL FROM .INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @tablename)  
		BEGIN
			SET @SQL = 'DROP TABLE ' + @tablename;
			EXEC (@SQL);
  END
	
	SET @SQL = 'CREATE TABLE ' + @tablename + ' (UserName VARCHAR(50), Suffix VARCHAR(50), UserGUID VARCHAR(50), TimeIn DATETIME, TimeOut DATETIME)';
	EXEC (@SQL)
	
	SET @SQL = 'INSERT INTO ' + @tablename; 
	SET @SQL = @SQL + ' (UserName, Suffix, UserGUID, TimeIn, TimeOut) ';
	SET @SQL = @SQL + 'VALUES (''' + @username + ''', ''' + @suffix + ''', ''' + @userGuid
	SET @SQL = @SQL + ''', ''' + CAST(@timeIn AS VARCHAR)

	IF @timeOut IS NULL
		SET @timeOut = GETDATE();

	SET @SQL = @SQL + ''', ''' + CAST(@timeOut AS VARCHAR) + ''')';
	print @SQL
	EXEC (@SQL)
END
GO
/****** Object:  StoredProcedure [dbo].[spTempTablesExist]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 7-22-2010
-- Description:	Only return 1 if BOTH exist
-- =============================================
CREATE PROCEDURE [dbo].[spTempTablesExist]
		(@formVersion NVARCHAR(100), @suffix NVARCHAR(40))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    DECLARE @tbl NVARCHAR(90);
	DECLARE @t1 INT;
	DECLARE @t2 INT;
	DECLARE @ret INT;
	
    SET @ret = 0;
	
	SET @tbl = 'TEMP_Form' + @formVersion + 'Instances_' + @suffix;
	IF EXISTS (SELECT NULL FROM .INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @tbl)
		SET @t1 = 1
	ELSE
		SET @t1 = 0

	IF @t1  = 1
		BEGIN				
			SET @tbl = 'TEMP_Form' + @formVersion + 'Items_' + @suffix;
			IF EXISTS (SELECT NULL FROM .INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @tbl)
				SET @t2 = @t1 + 1
			ELSE
				SET @t2 = @t1 + 0
	
			SET @ret = @t1 + @t2
			IF @ret = 0
				SELECT 0 AS DOESNOTEXIST
			ELSE
				SELECT 1 AS ITEXISTS
		END
	ELSE
		SELECT 0 AS DOESNOTEXIST
END
GO
/****** Object:  StoredProcedure [dbo].[spTransfer2062TempItemsTo3161TempItems]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: June 30, 2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spTransfer2062TempItemsTo3161TempItems]
	(@suffix NVARCHAR(40), @InstanceID INT)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @SQL NVARCHAR(MAX);
	DECLARE @transferFrom NVARCHAR(90);
	DECLARE @transferTo NVARCHAR(90);
	
	SET @transferFrom = 'TEMP_Form2062Items_' + @suffix;
	SET @transferTo = 'TEMP_Form3161Items_' + @suffix;	
	
	SET @SQL = 'SET IDENTITY_INSERT ' + @transferTo + ' ON; '
	SET @SQL = @SQL + 'INSERT INTO ' + @transferTo + ' (ItemId, InstanceId, Ecn, Nomenclature, ItemNoA, ItemDescription, UnitOfIssue, Quantity, Code, SupplyAction, UnitPrice, TotalCost, PostedDate, ItemStatus, pageCount, pageOfPages) '
	SET @SQL = @SQL + 'SELECT ItemId, InstanceId, stockNo AS Ecn, NULL AS Nomenclature, NULL AS ItemNoA, itemDescription AS ItemDescription, 0 AS UnitOfIssue, 0 AS Quantity, NULL AS Code, '
	SET @SQL = @SQL + 'NULL AS SupplyAction, 0.0 AS UnitPrice, 0.0 AS TotalCost, GETDATE() AS PostedDate, NULL AS ItemStatus, pageCount, pageOfPages '
	SET @SQL = @SQL + 'FROM ' + @transferFrom + ' '
	SET @SQL = @SQL + 'WHERE (InstanceID = ' + CAST(@InstanceID AS NVARCHAR) + '); '
	SET @SQL = @SQL + 'SET IDENTITY_INSERT ' + @transferTo + ' OFF; '

	EXEC (@SQL)
	
END
GO
/****** Object:  StoredProcedure [dbo].[spTransfer2062TempInstancesTo3161TempInstance]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 05-25-2010
-- Description:	Inserts Temp_Form2062Instances data into
-- Temp_Form3161Instances
-- =============================================
CREATE PROCEDURE [dbo].[spTransfer2062TempInstancesTo3161TempInstance] 
		(@InstanceID INT, @UserGUID NVARCHAR(50), @suffix NVARCHAR(40))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @transferFrom NVARCHAR(90);
	DECLARE @transferTo NVARCHAR(90);
	DECLARE @SQL NVARCHAR(MAX);
	
	SET @transferFrom = 'TEMP_Form2062Instances_' + @suffix;
	SET @transferTo = 'TEMP_Form3161Instances_' + @suffix;
	
	BEGIN
		SET @SQL = 'SET IDENTITY_INSERT ' + @transferTo + ' ON; '
		EXEC (@SQL);
		
		SET @SQL = 'INSERT INTO ' + @transferTo + ' (InstanceId, CreatedDate, Issue, TurnIn, RequestNo, VoucherNo, SendTo, DateRequired, DODAAC, Priority, FundingData, RequestFrom, EndItemID, '
		SET @SQL = @SQL + 'ManufacturerName, Model, MfrSerialNo, QtyColumnDate, QtyColumnBy, IssueSupplyActionDate, IssueSupplyActionBy, RecSupplyActionDate, '
    SET @SQL = @SQL + 'RecSupplyActionBy, SheetTotal, GrandTotal, InstanceStatus, InstancePageCount, Suffix, UserGUID) '
		SET @SQL = @SQL + 'SELECT InstanceId, CreatedDate, 0 as Issue, 0 as TurnIn, null as RequestNo, null AS VoucherNo, ToWho AS SendTo, CreatedDate as DateRequested, null as DODAAC, null AS Priority, null As FundingData, FromWho as RequestFrom, null As EndItemId, null As ManufacturerName, null As Model, '
    SET @SQL = @SQL + 'null As MfrSerialNo, null As QtyColumnDate, null As QtyColumnBy, null As IssueSupplyActionDate, null As IssueSupplyActionBy, null As RecSupplyActionDate,null As RecSupplyActionBy, 0.0 As SheetTotal, 0.0 As GrandTotal, 0 As InstanceStatus, 1 As InstanceCount, ''' + @Suffix + ''' AS Suffix, ''' + @UserGUID + ''' AS UserGUID ''' 
		SET @SQL = @SQL + 'FROM ' + @transferFrom + ' '
		SET @SQL = @SQL + 'WHERE (([' + @transferFrom + '].[instanceID] = ' + CAST(@InstanceID AS NVARCHAR) + ') AND ([' + @transferFrom + '][.UserGUID] = ''''' + @UserGUID + ''''')); '
		EXEC (@SQL);
		
		SET @SQL = 'SET IDENTITY_INSERT ' + @transferTo + ' OFF; '
		EXEC (@SQL)
	END
END
GO
/****** Object:  StoredProcedure [dbo].[spTesting]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spTesting] (
		@createdDate datetime,
		--@FromWho varchar(255),
		--@ToWho	varchar(255),
		--@HandReceiptNo	varchar(255),
		--@EndItemStockNo	varchar(255),
		--@EndItemDescription	varchar(255),
		--@PublicationNo varchar(255),
		--@PublicationDate varchar(255),
		--@Quantity int ,
		--@InstanceStatus int,
		--@InstancePageCount int,
		@userID VARCHAR(40),
		@scopeIdentity int output)
AS
BEGIN
	DECLARE @SQL VARCHAR(MAX);
	DECLARE @tablename VARCHAR(90)
	
	SELECT @tablename = 'TEST_Form2062Instances_' + @userID;

	SET @SQL = 'INSERT INTO ' + @tablename + ' '
	SET @SQL = @SQL + '(createdDate )'
	SET @SQL = @SQL + 'VALUES (' + QUOTENAME(@createdDate, '''') + ')'           --, ' + QUOTENAME(@FromWho, '''') + ', ' + QUOTENAME(@ToWho, '''') + ', ' + QUOTENAME(@HandReceiptNo, '''') + ', ' + QUOTENAME(@EndItemStockNo, '''') + ', ' + QUOTENAME(@EndItemDescription, '''') + ', ' + QUOTENAME(@PublicationNo, '''') + ', ' + QUOTENAME(@PublicationDate, '''') + ', ' + CONVERT(varchar, @InstanceStatus) + ', ' + CONVERT(varchar, @InstancePageCount) + ', ' + CONVERT(varchar, @Quantity) + ')'
	--SET @SQL = @SQL + '(createdDate, FromWho, ToWho, HandReceiptNo, EndItemStockNo, EndItemDescription, '
	--SET @SQL = @SQL + 'PublicationNo, PublicationDate, InstanceStatus, InstancePageCount, Quantity) '
	--SET @SQL = @SQL + 'VALUES (' + QUOTENAME(@createdDate, '''') + ', ' + QUOTENAME(@FromWho, '''') + ', ' + QUOTENAME(@ToWho, '''') + ', ' + QUOTENAME(@HandReceiptNo, '''') + ', ' + QUOTENAME(@EndItemStockNo, '''') + ', ' + QUOTENAME(@EndItemDescription, '''') + ', ' + QUOTENAME(@PublicationNo, '''') + ', ' + QUOTENAME(@PublicationDate, '''') + ', ' + CONVERT(varchar, @InstanceStatus) + ', ' + CONVERT(varchar, @InstancePageCount) + ', ' + CONVERT(varchar, @Quantity) + ')'
	
	EXEC (@SQL)
							
	SET @scopeIdentity = CAST(SCOPE_IDENTITY() AS INT)
	SELECT @scopeIdentity
	
END
GO
/****** Object:  Table [dbo].[YourHandReceipt_backup]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[YourHandReceipt_backup](
	[ECN] [nvarchar](50) NULL,
	[Nomenclature] [nvarchar](150) NULL,
	[Manufacturer] [nvarchar](150) NULL,
	[MfrSerialNo] [nvarchar](50) NULL,
	[CustomerID] [nvarchar](50) NULL,
	[CustodianName] [nvarchar](150) NULL,
	[Location] [nvarchar](150) NULL,
	[AccountName] [nvarchar](150) NULL,
	[RowID] [int] IDENTITY(1,1) NOT NULL,
	[Comments] [text] NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[YourHandReceipt]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[YourHandReceipt](
	[ECN] [nvarchar](50) NULL,
	[Nomenclature] [nvarchar](150) NULL,
	[Manufacturer] [nvarchar](150) NULL,
	[MfrSerialNo] [nvarchar](50) NULL,
	[CustomerID] [nvarchar](50) NULL,
	[CustodianName] [nvarchar](150) NULL,
	[Location] [nvarchar](150) NULL,
	[AccountName] [nvarchar](150) NULL,
	[RowID] [int] IDENTITY(1,1) NOT NULL,
	[Comments] [text] NULL,
 CONSTRAINT [PK_YourHandReceipt] PRIMARY KEY CLUSTERED 
(
	[RowID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[YourHandNewCustodian]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[YourHandNewCustodian](
	[CustomerID] [nvarchar](50) NULL,
	[CustodianName] [nvarchar](150) NULL,
	[AccountName] [nvarchar](150) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[YHRLocCmts]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[YHRLocCmts](
	[CustomerID] [nvarchar](150) NULL,
	[ECN] [nvarchar](150) NULL,
	[MfrSerialNo] [nvarchar](150) NULL,
	[Comments] [nvarchar](250) NULL,
	[Location] [nvarchar](150) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[XpNonStandardApps]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[XpNonStandardApps](
	[AppName] [varchar](255) NULL,
	[AppComputer] [varchar](50) NULL,
	[Ecn] [varchar](50) NULL,
	[UserName] [varchar](50) NULL,
	[CustodianName] [varchar](50) NULL,
	[CustomerId] [varchar](50) NULL,
	[CustomerName] [varchar](50) NULL,
	[CustodianPhone] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Win7Ldap]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Win7Ldap](
	[Name] [varchar](64) NULL,
	[Os] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[spRemoveUserTempData]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: August 10, 2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spRemoveUserTempData] 
		@username VARCHAR(50),
		@suffix VARCHAR(50),
		@userGuid VARCHAR(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @SQL VARCHAR(MAX);
  DECLARE @tablename VARCHAR(90);
  
  SET @tablename = 'tmpUser_' + @suffix;
	IF EXISTS (SELECT NULL FROM .INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @tablename)  
		BEGIN
			SET @SQL = 'DROP TABLE ' + @tablename;
			EXEC (@SQL);
  END
END
GO
/****** Object:  StoredProcedure [dbo].[spReset2062TempTables]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 06-24-2010
-- Description:	Delete rows and resets identity column to 0
-- =============================================
CREATE PROCEDURE [dbo].[spReset2062TempTables] 
		@suffix NVARCHAR(40)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DECLARE @SQL NVARCHAR(900);
		
	-- Reseeding is quirky so when adding new data
	-- leave the 0 itemid in the table before adding
	--SET @SQL = 'DELETE FROM TEMP_Form2062Items_keith_lucas1 WHERE TEMP_Form2062Items_keith_lucas1.ItemId > 0';
	--EXEC (@SQL)
	--DELETE FROM TEMP_Form2062Instances_keith_lucas1;
		
	--DBCC CHECKIDENT(TEMP_Form2062Items_keith_lucas1, RESEED, 0);
	--DBCC CHECKIDENT(TEMP_Form2062Instances_keith_lucas1, RESEED, 0);

	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Temp_Form2062Items_' + @suffix + ']') AND type in (N'U'))
	SET @SQL = 'DROP TABLE [dbo].[Temp_Form2062Items_' + @suffix + ']'
	EXEC (@SQL)

	
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Temp_Form2062Instances_' + @suffix + ']') AND type in (N'U'))
	SET @SQL = 'DROP TABLE [dbo].[Temp_Form2062Instances_' + @suffix + ']'
	EXEC (@SQL)	

	
END
GO
/****** Object:  StoredProcedure [dbo].[spReset3161TempTables]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 06-24-2010
-- Description:	Delete rows and resets identity column to 0
-- =============================================
CREATE PROCEDURE [dbo].[spReset3161TempTables] 
			@suffix NVARCHAR(40)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @SQL NVARCHAR(900);
	
	--SET @SQL = 'DELETE FROM TEMP_Form3161Items_keith_lucas1';
	--EXEC (@SQL);
	--DELETE FROM TEMP_Form3161Items_keith_lucas1;
	--DELETE FROM TEMP_Form3161Instances_keith_lucas1;
	
	--DBCC CHECKIDENT(TEMP_Form3161Items_keith_lucas1, RESEED, 0);
	--DBCC CHECKIDENT(TEMP_Form3161Instances_keith_lucas1, RESEED, 0);

	
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Temp_Form3161Items_' + @suffix + ']') AND type in (N'U'))
	SET @SQL = 'DROP TABLE [dbo].[Temp_Form3161Items_' + @suffix + ']'
	EXEC (@SQL)

	
		
	IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Temp_Form3161Instances_' + @suffix + ']') AND type in (N'U'))
	SET @SQL = 'DROP TABLE [dbo].[Temp_Form3161Instances_' + @suffix + ']'
	EXEC (@SQL)	

END
GO
/****** Object:  StoredProcedure [dbo].[spLifeCycleMerge]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 20, 2009
-- Description:	Stored Proc to grab matching ECN and Name0 values
-- =============================================
CREATE PROCEDURE [dbo].[spLifeCycleMerge] 
	-- Add the parameters for the stored procedure here
	@tbl varchar(MAX),
	@loc varchar(MAX),
	@sql varchar(MAX),
	@thisLoc varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DECLARE @group int
    -- Insert statements for procedure here
	SET @group = CHARINDEX('/', @loc)

    -- Insert statements for procedure here
    IF (@group != 11)
		
		IF (@thisLoc = 'Eisenhower')
			EXEC	('SELECT	DMLSS.Ecn5, DMLSS.Ecn, DMLSS.CustodianName, DMLSS.CustomerID, DMLSS.Manufacturer AS ManufacturerD, DMLSS.NameplateModel, 
						DMLSS.MedicalEquipmentEqpmtOwnerTypCd AS Lease, DMLSS.AcqDate, SMSComputer.Name5, SMSComputer.Name, Alias.Alias AS Manufacturer, SMSComputer.Model
					FROM	SMSComputer LEFT JOIN
						DMLSS AS DMLSS ON SMSComputer.Name5 = DMLSS.Ecn5 LEFT JOIN 
							ModelAlias ON SMSComputer.Model = ModelAlias.Model LEFT JOIN
								Alias ON ModelAlias.Manufacturer = Alias.Manufacturer LEFT JOIN 
									lcFacility ON LEFT(SMSComputer.Name, 8) = lcFacility.facilityID
					WHERE	(DMLSS.CustomerId NOT IN
								(SELECT	HandReceipt
								FROM	lcGroup AS lcGroup_1
								) 
								OR DMLSS.CustomerId IS NULL
							) ' + @loc + ' ' + @sql + ' 
					ORDER BY AcqDate')
		
		ELSE
			EXEC	('SELECT	DMLSS.Ecn5, DMLSS.Ecn, DMLSS.CustodianName, DMLSS.CustomerID, DMLSS.Manufacturer AS ManufacturerD, DMLSS.NameplateModel, 
						DMLSS.MedicalEquipmentEqpmtOwnerTypCd AS Lease, DMLSS.AcqDate, SMSComputer.Name5, SMSComputer.Name, Alias.Alias AS Manufacturer, SMSComputer.Model
					FROM    DMLSS RIGHT JOIN
								SMSComputer ON DMLSS.Ecn5 = SMSComputer.Name5' + @tbl + '
									LEFT JOIN Alias ON Alias.Manufacturer = SMSComputer.Manufacturer LEFT JOIN 
										ModelAlias ON SMSComputer.Model = ModelAlias.Model
					WHERE	1 = 1 ' + @loc + ' ' + @sql + ' ORDER BY AcqDate')
					
	ELSE
		EXEC	('SELECT	DMLSS.Ecn5, DMLSS.Ecn, DMLSS.CustodianName, DMLSS.CustomerID, DMLSS.Manufacturer AS ManufacturerD, DMLSS.NameplateModel, 
							DMLSS.MedicalEquipmentEqpmtOwnerTypCd AS Lease, DMLSS.AcqDate, SMSComputer.Name5, SMSComputer.Name, Alias.Alias AS Manufacturer, SMSComputer.Model
				FROM    DMLSS RIGHT JOIN
							SMSComputer ON DMLSS.Ecn5 = SMSComputer.Name5' + @tbl + '
								LEFT JOIN Alias ON Alias.Manufacturer = SMSComputer.Manufacturer LEFT JOIN 
									ModelAlias ON SMSComputer.Model = ModelAlias.Model
				WHERE	1 = 1 ' + @loc + ' ' + @sql + ' ORDER BY AcqDate')
END
GO
/****** Object:  StoredProcedure [dbo].[spManuInvC]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 7/2/2009
-- Description:	Dynamic SP to grap inventory data
-- =============================================
CREATE PROCEDURE [dbo].[spManuInvC]
	-- Add the parameters for the stored procedure here
	@table nvarchar(20),
	@criteria nvarchar(100)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	EXEC ('SELECT manu, COUNT(*) AS Counter FROM (SELECT Alias.Alias AS manu FROM Alias INNER JOIN ' + @table + ' ON Alias.Manufacturer = ' + @table + '.Manufacturer' + @criteria + ') AS A GROUP BY manu ORDER BY Counter DESC, manu ASC')
END
GO
/****** Object:  StoredProcedure [dbo].[spModelInvC]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 7/2/2009
-- Description:	Dynamic SP to grab inventory data
-- =============================================
CREATE PROCEDURE [dbo].[spModelInvC]
	-- Add the parameters for the stored procedure here
	@table nvarchar(20),
	@manu nvarchar(40),
	@field nvarchar(40),
	@criteria nvarchar(100)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT mod, COUNT(*) AS Counter FROM (SELECT ' + @table + '.' + @field + ' AS mod FROM ' + @table + ' LEFT OUTER JOIN Alias ON ' + @table + '.Manufacturer = Alias.Manufacturer WHERE (Alias.Alias = ' + QuoteName(@manu, '''') + ') ' + @criteria +') AS A GROUP BY mod ORDER BY Counter DESC, mod ASC'
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spReconcile]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 20, 2009
-- Description:	Stored Proc to grab matching ECN and Name0 values
-- =============================================
CREATE PROCEDURE [dbo].[spReconcile] 
	-- Add the parameters for the stored procedure here
	@compare varchar (1000),
	@sql varchar (2000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here	
	EXEC ('SELECT     DMLSS.Ecn5, DMLSS.Ecn, DMLSS.Manufacturer, DMLSS.NameplateModel, DMLSS.Nomenclature, DMLSS.CustodianName, DMLSS.CustomerID, DMLSS.CustomerName,
				SMSComputer.Name5 AS Name5, SMSComputer.Name, SMSComputer.Manufacturer AS ManufacturerS, SMSComputer.Model, SMSComputer.UserName
	FROM         DMLSS LEFT OUTER JOIN
                      SMSComputer ON DMLSS.Ecn5 = SMSComputer.Name5 ' + 
	@compare + ' ' + @sql +  ' ORDER BY ECN')
END
GO
/****** Object:  StoredProcedure [dbo].[spInvSort]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 7/2/2009
-- Description:	Dynamic SP to grab last update date
-- =============================================
CREATE PROCEDURE [dbo].[spInvSort] 
	-- Add the parameters for the stored procedure here
	@sql varchar (2000),
	@table varchar (2000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	EXEC ('SELECT SMSComputer.Name, SMSComputer.Name5, SMSComputer.UserName, SMSComputer.Manufacturer, SMSComputer.Model, SMSComputer.Domain, SMSOperating_System.Caption, DMLSS.CustodianName, DMLSS.CustomerName 
	FROM ' + @table + ' ' + @sql + ' 
	ORDER BY Name')
END
GO
/****** Object:  StoredProcedure [dbo].[spGetSccmData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 7/2/2009
-- Description:	Dynamic SP to grab DMLSS Data
-- =============================================
CREATE PROCEDURE [dbo].[spGetSccmData]
	-- Add the parameters for the stored procedure here
	@sql varchar(MAX)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	EXEC ('
		SELECT Name, Name5, UserName, s.Manufacturer, Model, Domain, Caption, CustodianName, CustomerName  
		FROM Sccm s LEFT JOIN Alias a ON s.Manufacturer = a.Manufacturer WHERE 1 = 1 ' + @sql + '')
END
GO
/****** Object:  StoredProcedure [dbo].[spGetRecentInstanceDate]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-6-2010
-- Description:	Return most recent instance date
-- =============================================
CREATE PROCEDURE [dbo].[spGetRecentInstanceDate] (
	@id VARCHAR(50),
	@instanceDate VARCHAR OUTPUT)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @d VARCHAR(14);
	DECLARE @CMD VARCHAR(400)
	
	SET @CMD = 'SELECT Max(CreatedDate) FROM [dbo].[TEMP_Form3161Instances] WHERE InstanceId = ' + @id;
	PRINT @CMD
	EXEC @d = @CMD
	
	PRINT CAST(@d AS VARCHAR)
	RETURN @d;
END
GO
/****** Object:  StoredProcedure [dbo].[spInsertStuff]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spInsertStuff] (
		@createdDate datetime,
		@who varchar(255),
		@page int,
		@suffix VARCHAR(40))
AS
BEGIN
	DECLARE @SQL VARCHAR(600);
	DECLARE @tablename VARCHAR(90)
	SELECT @tablename = 'TEMP_Form2062Instances_' + @suffix;
		
	--  TEMP_Form2062Instances_AMEDWKSERXPS03
	SET @SQL = 'INSERT INTO ' + @tablename + ' '
	SET @SQL = @SQL + '(createdDate, Who, page, user) '
	SET @SQL = @SQL + 'VALUES (' + CAST(@createdDate AS VARCHAR) + ', ' + @who + ', ' + CAST(@page AS VARCHAR) + ')'

	EXEC (@SQL)
END
GO
/****** Object:  StoredProcedure [dbo].[spInsertTemp3161Items]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 06-24-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spInsertTemp3161Items] 
		(@id int, @suffix varchar(40))

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	--SET IDENTITY_INSERT Form3161Items ON

	DECLARE @SQL NVARCHAR(MAX);
	DECLARE @tableName NVARCHAR(90);
	
	SET @tableName = 'TEMP_Form3161Items_' + @tableName;
	SET @SQL = 'INSERT INTO ' + @suffix + ' '
	SET @SQL = @SQL + '(InstanceId, Ecn, Nomenclature, ItemNoA, StockNo, Quantity, UnitOfIssue, ItemDescription, Code, SupplyAction, UnitPrice, TotalCost, '
	SET @SQL = @SQL + 'PostedDate, PostedBy, ItemStatus, pageCount, pageOfPages) '
	SET @SQL = @SQL + 'SELECT (InstanceId, Ecn, Nomenclature, ItemNoA, StockNo, Quantity, @UnitOfIssue, @ItemDescription, @Code, @SupplyAction, @UnitPrice, @TotalCost, @PostedDate, '
	SET @SQL = @SQL + '@PostedBy, @ItemStatus, @pageCount, @pageOfPages '
	SET @SQL = @SQL + 'FROM ' + @tableName
	EXEC (@SQL)
	
	--SET IDENTITY_INSERT Form3161Items OFF

END
GO
/****** Object:  StoredProcedure [dbo].[spInsertTemp3161Instance]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 04-06-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spInsertTemp3161Instance] (
		@createdDate datetime = null,
		@Issue	bit,
		@TurnIn	bit,
		@RequestNo	varchar(255) = null,
		@VoucherNo	varchar(255) = null,
		@SendTo	varchar(255) = null,
		@DateRequired	varchar(255),
		@DODAAC	varchar(255) = null,
		@Priority	varchar(255) = null,
		@FundingData	varchar(255) = null,
		@RequestFrom	varchar(255) = null,
		@EndItemID	varchar(255) = null,
		@ManufacturerName	varchar(255) = null,
		@Model	varchar(255) = null,
		@MfrSerialNo	varchar(255) = null,
		@QtyColumnDate	varchar(255) = null,
		@QtyColumnBy	varchar(255) = null,
		@IssueSupplyActionDate	varchar(255) = null,
		@IssueSupplyActionBy	varchar(255) = null,
		@RecSupplyActionDate	varchar(255),
		@RecSupplyActionBy	varchar(255) = null,
		@SheetTotal	float,
		@GrandTotal	float,
		@InstanceStatus int, 
		@InstancePageCount int, 
		@Suffix varchar(50))
AS
BEGIN

	DECLARE @SQL VARCHAR(MAX);
	
	DECLARE @tablename VARCHAR(90);
	
	SELECT @tablename = 'TEMP_Form3161Instances_'  + @suffix;	
	
	SET @SQL = 'SET IDENTITY_INSERT Form3161Instances ON'
	EXEC (@SQL)
		
	--SET @SQL = 'SET IDENTITY_INSERT ' + @tablename + ' ON ';
	SET @SQL = 'INSERT INTO ' + @tablename + ' ';
	SET @SQL = @SQL + '(createdDate, '
	SET @SQL = @SQL + 'Issue, '
	SET @SQL = @SQL + 'TurnIn, '
	SET @SQL = @SQL + 'RequestNo, '
	SET @SQL = @SQL + 'VoucherNo, '
	SET @SQL = @SQL + 'SendTo, '
	SET @SQL = @SQL + 'DateRequired, '
	SET @SQL = @SQL + 'DODAAC, '
	SET @SQL = @SQL + 'Priority, '
	SET @SQL = @SQL + 'FundingData, '
	SET @SQL = @SQL + 'RequestFrom, '
	SET @SQL = @SQL + 'EndItemID, '
	SET @SQL = @SQL + 'ManufacturerName, '
	SET @SQL = @SQL + 'Model, '
	SET @SQL = @SQL + 'MfrSerialNo, '
	SET @SQL = @SQL + 'QtyColumnDate, '
	SET @SQL = @SQL + 'QtyColumnBy, '
	SET @SQL = @SQL + 'IssueSupplyActionDate, '
	SET @SQL = @SQL + 'IssueSupplyActionBy, '
	SET @SQL = @SQL + 'RecSupplyActionDate, '
	SET @SQL = @SQL + 'RecSupplyActionBy, '
	SET @SQL = @SQL + 'SheetTotal, '
	SET @SQL = @SQL + 'GrandTotal, '
	SET @SQL = @SQL + 'InstanceStatus, '
	SET @SQL = @SQL + 'InstancePageCount, '
	SET @SQL = @SQL + 'Suffix) '
	SET @SQL = @SQL + 'VALUES ( ' 
	SET @SQL = @SQL + QUOTENAME(@createdDate, '''')+ ', ' 
	SET @SQL = @SQL + CONVERT(VARCHAR, @Issue) + ', ' 
	SET @SQL = @SQL + CONVERT(VARCHAR, @TurnIn) + ', ' 
	SET @SQL = @SQL + QUOTENAME(@RequestNo, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@VoucherNo, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@SendTo, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@DateRequired, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@DODAAC, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@Priority, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@FundingData, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@RequestFrom, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@EndItemID, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@ManufacturerName, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@Model, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@MfrSerialNo, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@QtyColumnDate, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@QtyColumnBy, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@IssueSupplyActionDate, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@IssueSupplyActionBy, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@RecSupplyActionDate, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@RecSupplyActionBy, '''') + ', ' 
	SET @SQL = @SQL + CONVERT(VARCHAR, @SheetTotal) + ', ' 
	SET @SQL = @SQL + CONVERT(VARCHAR, @GrandTotal) + ') ' 
	SET @SQL = @SQL + CONVERT(VARCHAR, @InstanceStatus) + ', ' 
	SET @SQL = @SQL + CONVERT(VARCHAR, @InstancePageCount) + ', '  
	SET @SQL = @SQL + QUOTENAME(@Suffix, '''') + ') '
	EXEC (@SQL);
	
	SET @SQL = @SQL + 'SET IDENTITY_INSERT ' + @tablename + ' OFF';
	EXEC (@SQL);
	
END
GO
/****** Object:  StoredProcedure [dbo].[spInsertTemp2062Items]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 07-07-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spInsertTemp2062Items] (	
		@instanceId NVARCHAR(50), 
		@suffix NVARCHAR(40),
		@stockNo NVARCHAR(255),
		@itemDescription NVARCHAR(255),
		@cColumn NVARCHAR(255) = null,
		@sec NVARCHAR(255) = null,
		@ui NVARCHAR(255) = null,
		@qtyAuth INT,
		@qtyA INT = null,
		@qtyB INT = null,
		@qtyC INT = null,
		@qtyD INT = null,
		@qtyE INT = null,
		@qtyF INT = null,
		@ItemStatus INT,
		@PageCount INT,
		@pageOfPages INT)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @tableName NVARCHAR(90)
	DECLARE @SQL NVARCHAR(MAX);
	DECLARE @itemId INT;
	DECLARE @rowCount INT;

	SET @tableName = 'TEMP_Form2062Items_' + @suffix;
	SET @SQL = 'SELECT MAX(ItemId) AS [Current Item Id] FROM ' + @tableName;
	EXEC sp_executesql @SQL, N'@itemId INT out', @itemId OUT
	
	SET @SQL = 'SELECT COUNT(ItemId) AS [Row Count] FROM ' + @tableName;
	EXEC sp_executesql @SQL, N'@itemId INT out', @rowCount OUT
	
	SET @SQL = 'INSERT INTO ' + @tableName
	SET @SQL = @SQL + ' (stockNo, itemDescription, cColumn, sec, ui, qtyAuth, qtyA, qtyB, qtyC, qtyD, qtyE, qtyF, ItemStatus, pageCount, pageOfPages) ' 
	SET @SQL = @SQL + 'VALUES (' + QUOTENAME(@instanceID, '''') + ', ' + QUOTENAME(@stockNo, '''') + ', ' + QUOTENAME(@itemDescription, '''') + ', ' + QUOTENAME(@cColumn, '''') + ', ' + 
				QUOTENAME(@sec, '''') + ', ' + QUOTENAME(@ui, '''') + ', ' + CONVERT(VARCHAR, @qtyAuth) + ', ' + CONVERT(VARCHAR, @qtyA) + ', ' + CONVERT(VARCHAR, @qtyB) + ', ' + CONVERT(VARCHAR, @qtyC) + ', ' + 
				CONVERT(VARCHAR, @qtyD) + ', ' + CONVERT(VARCHAR, @qtyE) + ', ' + CONVERT(VARCHAR, @qtyF) + ', ' + CONVERT(VARCHAR, @ItemStatus) + ', ' + CONVERT(VARCHAR, @pageCount) + ', ' + CONVERT(VARCHAR, @pageOfPages) + ')'
	EXEC (@SQL)
	
	--SET @SQL = 'SET IDENTITY_INSERT ' + @tableName + ' OFF'
	--EXEC (@SQL)
	
END
GO
/****** Object:  StoredProcedure [dbo].[spInsertTemp2062Instance]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 05-11-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spInsertTemp2062Instance] (
		@createdDate datetime,
		@FromWho varchar(255) = null,
		@ToWho	varchar(255) = null,
		@HandReceiptNo	varchar(255) = null,
		@EndItemStockNo	varchar(255) = null,
		@EndItemDescription	varchar(255) = null,
		@PublicationNo varchar(255) = null,
		@PublicationDate varchar(255) = null,
		@Quantity int ,
		@InstanceStatus int,
		@InstancePageCount int,
		@Suffix VARCHAR(50),
		@UserGUID VARCHAR(50))
AS
BEGIN
	DECLARE @SQL VARCHAR(MAX);
	DECLARE @tablename VARCHAR(90)
	DECLARE @id INT;
	
	SET @tablename = 'TEMP_Form2062Instances_' + @Suffix;

	SET @SQL = 'SET IDENTITY_INSERT ' + @tablename + ' ON'
	EXEC (@SQL)
		
	-- don't need to insert instanceId because it is done automatically
	--SET @SQL = 'SET IDENTITY_INSERT ' + @tablename + ' ON ';
	SET @SQL = 'INSERT INTO ' + @tablename + ' ';
	SET @SQL = @SQL + ' (createdDate, FromWho, ToWho, HandReceiptNo, EndItemStockNo, EndItemDescription, '
	SET @SQL = @SQL + ' PublicationNo, PublicationDate, InstanceStatus, InstancePageCount, Quantity, Suffix, UserGUID) '
	SET @SQL = @SQL + ' VALUES (' + QUOTENAME(@createdDate, '''') + ', ' + QUOTENAME(@FromWho, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@ToWho, '''') + ', ' + QUOTENAME(@HandReceiptNo, '''') + ', ' + QUOTENAME(@EndItemStockNo, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@EndItemDescription, '''') + ', ' + QUOTENAME(@PublicationNo, '''') + ', ' 
	SET @SQL = @SQL + QUOTENAME(@PublicationDate, '''') + ', ' + CONVERT(varchar, @InstanceStatus) + ', ' 
	SET @SQL = @SQL + CONVERT(varchar, @InstancePageCount) + ', ' + CONVERT(varchar, @Quantity) + ', ' + QUOTENAME(@Suffix, '''') + ', ' + QUOTENAME(@UserGUID, '''') + ')'
	EXEC (@SQL)	
	
	SET @SQL = 'SET IDENTITY_INSERT ' + @tablename + ' OFF; '
	EXEC (@SQL)

END
GO
/****** Object:  Table [dbo].[Users]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Users](
	[UserID] [int] IDENTITY(1,1) NOT NULL,
	[Name] [nvarchar](100) NOT NULL,
	[PhoneNumber] [nvarchar](50) NOT NULL,
	[Email] [nvarchar](100) NOT NULL,
	[ReasonForAccess] [nvarchar](2000) NULL,
	[Active] [bit] NULL,
	[UserGUID] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[UserInstanceTrace]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserInstanceTrace](
	[UserName] [nvarchar](50) NULL,
	[TempForm3161InstanceID] [int] NULL,
	[TempForm2062InstanceID] [int] NULL,
	[PermForm3161InstanceID] [int] NULL,
	[PermForm2062InstanceID] [int] NULL,
	[Prev3161TempInstanceID] [int] NULL,
	[Prev2062TempInstanceID] [int] NULL,
	[Prev3161PermInstanceID] [int] NULL,
	[Prev2062PermInstanceID] [int] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UserGroups]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserGroups](
	[UserGroupID] [int] IDENTITY(1,1) NOT NULL,
	[UserID] [int] NOT NULL,
	[GroupID] [int] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UsamitcDmlssSccmNew]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[UsamitcDmlssSccmNew](
	[UsamitcName] [varchar](50) NULL,
	[NotStandard] [char](1) NULL,
	[Stale] [char](1) NULL,
	[Unmanaged] [char](1) NULL,
	[NoSccm] [char](1) NULL,
	[Win7NotReady] [char](1) NULL,
	[HbssNotCompliant] [char](1) NULL,
	[HbssServiceNotRunning] [char](1) NULL,
	[HbssHipsNotRunning] [char](1) NULL,
	[HbssAvNotRunning] [char](1) NULL,
	[TwNotCompliant] [char](1) NULL,
	[ActivClientNotCompliant] [char](1) NULL,
	[DarNotCompliant] [char](1) NULL,
	[AgmNotCompliant] [char](1) NULL,
	[CclNotEnforced] [char](1) NULL,
	[OuPath] [varchar](255) NULL,
	[UsamitcDescription] [varchar](255) NULL,
	[LastLoggedOnUser] [varchar](50) NULL,
	[DateCreatedAd] [datetime] NULL,
	[DateCreatedBios] [datetime] NULL,
	[SystemAge] [tinyint] NULL,
	[Ecn] [varchar](50) NULL,
	[Name] [varchar](50) NULL,
	[Alias] [varchar](100) NULL,
	[ModelAlias] [varchar](100) NULL,
	[Manufacturer] [varchar](100) NULL,
	[NameplateModel] [varchar](100) NULL,
	[Manufacturer2] [varchar](100) NULL,
	[Model] [varchar](100) NULL,
	[OperatingSystem] [varchar](100) NULL,
	[SerialNumber] [varchar](100) NULL,
	[Nomenclature] [varchar](100) NULL,
	[UserName] [varchar](100) NULL,
	[CustodianName] [varchar](100) NULL,
	[CustomerID] [varchar](50) NULL,
	[CustomerName] [varchar](100) NULL,
	[CustomerName2] [varchar](100) NULL,
	[CustodianPhone] [varchar](50) NULL,
	[Active] [varchar](50) NULL,
	[Lifecycle] [varchar](50) NULL,
	[Ahlta] [varchar](50) NULL,
	[Listed] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[UsamitcDmlssSccm]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[UsamitcDmlssSccm](
	[UsamitcName] [varchar](50) NULL,
	[NotStandard] [char](1) NULL,
	[Stale] [char](1) NULL,
	[Unmanaged] [char](1) NULL,
	[NoSccm] [char](1) NULL,
	[Win7NotReady] [char](1) NULL,
	[HbssNotCompliant] [char](1) NULL,
	[HbssServiceNotRunning] [char](1) NULL,
	[HbssHipsNotRunning] [char](1) NULL,
	[HbssAvNotRunning] [char](1) NULL,
	[TwNotCompliant] [char](1) NULL,
	[ActivClientNotCompliant] [char](1) NULL,
	[DarNotCompliant] [char](1) NULL,
	[AgmNotCompliant] [char](1) NULL,
	[CclNotEnforced] [char](1) NULL,
	[OuPath] [varchar](255) NULL,
	[UsamitcDescription] [varchar](255) NULL,
	[LastLoggedOnUser] [varchar](50) NULL,
	[DateCreatedAd] [datetime] NULL,
	[DateCreatedBios] [datetime] NULL,
	[SystemAge] [tinyint] NULL,
	[Ecn] [varchar](50) NULL,
	[Name] [varchar](50) NULL,
	[Alias] [varchar](100) NULL,
	[ModelAlias] [varchar](100) NULL,
	[Manufacturer] [varchar](100) NULL,
	[NameplateModel] [varchar](100) NULL,
	[Manufacturer2] [varchar](100) NULL,
	[Model] [varchar](100) NULL,
	[OperatingSystem] [varchar](100) NULL,
	[SerialNumber] [varchar](100) NULL,
	[Nomenclature] [varchar](100) NULL,
	[UserName] [varchar](100) NULL,
	[CustodianName] [varchar](100) NULL,
	[CustomerID] [varchar](50) NULL,
	[CustomerName] [varchar](100) NULL,
	[CustomerName2] [varchar](100) NULL,
	[CustodianPhone] [varchar](50) NULL,
	[Active] [varchar](50) NULL,
	[Lifecycle] [varchar](50) NULL,
	[Ahlta] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[UsamitcDesktopStandardizationData]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[UsamitcDesktopStandardizationData](
	[UsamitcName] [varchar](50) NULL,
	[NotStandard] [char](1) NULL,
	[Stale] [char](1) NULL,
	[Unmanaged] [char](1) NULL,
	[NoSccm] [char](1) NULL,
	[Win7NotReady] [char](1) NULL,
	[HbssNotCompliant] [char](1) NULL,
	[HbssServiceNotRunning] [char](1) NULL,
	[HbssHipsNotRunning] [char](1) NULL,
	[HbssAvNotRunning] [char](1) NULL,
	[TwNotCompliant] [char](1) NULL,
	[ActivClientNotCompliant] [char](1) NULL,
	[DarNotCompliant] [char](1) NULL,
	[AgmNotCompliant] [char](1) NULL,
	[CclNotEnforced] [char](1) NULL,
	[OuPath] [varchar](255) NULL,
	[UsamitcDescription] [varchar](255) NULL,
	[LastLoggedOnUser] [varchar](50) NULL,
	[DateCreatedAd] [datetime] NULL,
	[DateCreatedBios] [datetime] NULL,
	[SystemAge] [tinyint] NULL,
	[EcnCheck] [varchar](6) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[updateDate]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[updateDate](
	[updateDate] [datetime] NULL,
	[updateType] [tinyint] NULL
) ON [PRIMARY]
GO
/****** Object:  UserDefinedFunction [dbo].[udf_Tbl_RowCOUNT]    Script Date: 10/05/2018 13:10:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[udf_Tbl_RowCOUNT] (
        @sTableName sysname  -- Table to retrieve Row Count
        )

    RETURNS INT -- Row count of the table, NULL if not found.

/*
* Returns the row count for a table by examining sysindexes.
* This function must be run in the same database as the table.
*
* Common Usage:   
SELECT dbo.udf_Tbl_RowCOUNT ('')

* Test   
 PRINT 'Test 1 Bad table ' + CASE WHEN SELECT 
       dbo.udf_Tbl_RowCOUNT ('foobar') is NULL
        THEN 'Worked' ELSE 'Error' END
        
* © Copyright 2002 Andrew Novick http://www.NovickSoftware.com
* You may use this function in any of your SQL Server databases
* including databases that you sell, so long as they contain 
* other unrelated database objects. You may not publish this 
* UDF either in print or electronically.
***************************************************************/

AS BEGIN
    DECLARE @nRowCount INT -- the rows
    DECLARE @nObjectID int -- Object ID

    SET @nObjectID = OBJECT_ID(@sTableName)

    -- Object might not be found
    IF @nObjectID is null RETURN NULL

    SELECT TOP 1 @nRowCount = rows 
        FROM sysindexes 
        WHERE id = @nObjectID AND indid < 2

    RETURN @nRowCount
END
GO
/****** Object:  UserDefinedFunction [dbo].[udf_TableExists]    Script Date: 10/05/2018 13:10:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- =============================================
CREATE FUNCTION [dbo].[udf_TableExists] 
	(@TableName VARCHAR(100))

RETURNS BIT
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Exists BIT    

	-- Add the T-SQL statements to compute the return value here
	IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = @TableName)
		SET @Exists = 0    
	ELSE        
		SET @Exists = 1    

	-- Can also use
	-- IF OBJECT_ID(‘dbo.TABLE_NAME','U') IS NOT NULL
	-- Do Something
	
	-- Return the result of the function
	RETURN @Exists

END
GO
/****** Object:  UserDefinedFunction [dbo].[udf_ObjectExists]    Script Date: 10/05/2018 13:10:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		http://jagregory.com/writings/sql-server-object-exists-function/
-- Create date: 
-- Description:	
-- =============================================
CREATE FUNCTION [dbo].[udf_ObjectExists] 
	(@Object VARCHAR(100), @Type VARCHAR(2))

RETURNS BIT
AS
BEGIN
	-- Declare the return variable here
	DECLARE @Exists BIT    

	-- Add the T-SQL statements to compute the return value here
	IF EXISTS(SELECT 1 FROM sys.objects WHERE object_id = OBJECT_ID(@Object) AND type = (@Type))        
		SET @Exists = 1    
	ELSE        
		SET @Exists = 0    

	-- Can also use
	-- IF OBJECT_ID(‘dbo.[TABLE_NAME','U') IS NOT NULL
	-- Do Something
	
	-- Return the result of the function
	RETURN @Exists

END
GO
/****** Object:  Table [dbo].[tmp_UTotal]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tmp_UTotal](
	[UTotal] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tmp_GrandTotal]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tmp_GrandTotal](
	[GTotal] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TestPrinters_Printers]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TestPrinters_Printers](
	[SysID] [int] IDENTITY(1,1) NOT NULL,
	[Computer] [nvarchar](50) NULL,
	[User] [nvarchar](255) NULL,
	[Port] [nvarchar](255) NULL,
	[Network] [nvarchar](50) NULL,
	[Name] [nvarchar](255) NULL,
	[Location] [nvarchar](255) NULL,
	[ServerName] [nvarchar](255) NULL,
	[ShareName] [nvarchar](255) NULL,
	[INAD] [nvarchar](50) NULL,
	[DriverName] [nvarchar](255) NULL,
	[FileDate] [datetime] NOT NULL,
	[LocalTCPIPPort] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TestPrinter_Systems]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TestPrinter_Systems](
	[SysID] [int] IDENTITY(1,1) NOT NULL,
	[Computer] [nvarchar](50) NOT NULL,
	[UserName] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_TestPrinter_Systems] PRIMARY KEY CLUSTERED 
(
	[SysID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[spReset____ApplicationData]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-9-2012
-- Description:	Reset tables for new data import
-- =============================================
CREATE PROCEDURE [dbo].[spReset____ApplicationData]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DELETE	FROM	Test____AppLog_Systems
	DELETE	FROM	Test____AppLog_Applications
	DBCC CHECKIDENT('dbo.Test____AppLog_Systems', RESEED, 0);
	
END
GO
/****** Object:  Table [dbo].[TempSccm]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TempSccm](
	[Name] [varchar](50) NULL,
	[OperatingSystem] [varchar](50) NULL,
	[Version] [varchar](50) NULL,
	[ServicePack] [varchar](50) NULL,
	[InstallDate] [datetime] NULL,
	[LastBootUp] [datetime] NULL,
	[WindowsDirectory] [varchar](50) NULL,
	[Description] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[tempDmlssSn]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[tempDmlssSn](
	[Ecn5] [varchar](255) NULL,
	[Ecn] [varchar](255) NULL,
	[MfrSerialNo] [varchar](255) NULL,
	[NameplateModel] [varchar](255) NULL,
	[MedicalEquipmentMeAcqCostQty] [float] NULL,
	[AcqDate] [datetime] NULL,
	[ItemID] [varchar](255) NULL,
	[Nomenclature] [varchar](255) NULL,
	[LifeExp] [varchar](255) NULL,
	[Manufacturer] [varchar](255) NULL,
	[CommonModel] [varchar](255) NULL,
	[EquipmentLocation] [varchar](255) NULL,
	[Ownership] [varchar](255) NULL,
	[MaintAct] [varchar](255) NULL,
	[MtfOrgNm] [varchar](255) NULL,
	[CustomerId] [varchar](255) NULL,
	[CustomerName] [varchar](255) NULL,
	[CustodianName] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TempCombined]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TempCombined](
	[Name] [varchar](50) NULL,
	[OperatingSystem] [varchar](50) NULL,
	[Ahlta] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TempAhlta]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TempAhlta](
	[Name] [varchar](50) NULL,
	[FileName] [varchar](50) NULL,
	[FileDescription] [varchar](50) NULL,
	[Version] [varchar](50) NULL,
	[FileSize] [varchar](50) NULL,
	[ModifiedDate] [datetime] NULL,
	[FilePath] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[spGet3161PermInstanceID]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 3-29-2010
-- Description:	Return instanceId
-- =============================================
CREATE PROCEDURE [dbo].[spGet3161PermInstanceID]
	@scopeIdentity INT OUTPUT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	SET @scopeIdentity = (SELECT IDENT_CURRENT('Form3161Instances'))
	--SET @scopeIdentity = SCOPE_IDENTITY()
	SELECT @scopeIdentity 
	RETURN @scopeIdentity
END
GO
/****** Object:  StoredProcedure [dbo].[spGetItemCountForID]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 7-27-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spGetItemCountForID]
	@form NVARCHAR(4), @suffix NVARCHAR(90), @id VARCHAR(50)

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

		DECLARE @table NVARCHAR(90);
		DECLARE @select NVARCHAR(900);
		DECLARE @from NVARCHAR(900);
		DECLARE @where NVARCHAR(900);
	
		SET @table = 'TEMP_Form' + @form + 'Items_' + @suffix;
		SET @select = 'SELECT COUNT(*) AS ITEMS ';
		SET @from = 'FROM ' + @table + ' ';
		SET @where = 'WHERE InstanceId = ' + @id;

		EXEC (@select + @from + @where)
END
GO
/****** Object:  StoredProcedure [dbo].[spGetInstanceID]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 3-29-2010
-- Description:	Return instanceId
-- =============================================
CREATE PROCEDURE [dbo].[spGetInstanceID]
	@scopeIndentity INT OUTPUT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT * FROM [dbo].[TEMP_Form3161Instances]

	SET @scopeIndentity = CAST(SCOPE_IDENTITY() AS INT)
	SELECT @scopeIndentity

END
GO
/****** Object:  StoredProcedure [dbo].[spGetPrevInstanceID]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: August 09, 2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spGetPrevInstanceID]
			@UserGUID NVARCHAR(50), @Suffix NVARCHAR(90), @Form NCHAR(4)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @prev INT;
	DECLARE @SQL NVARCHAR(900);
	DECLARE @table NVARCHAR(90);
	
	SET @table = 'Form' + @Form + 'Instances_' + @suffix;
	SET @SQL = 'SELECT InstanceID FROM ' + @table + ' WHERE UserGUID = ' + @UserGUID;
	
	DROP TABLE tmp_Instance;
	CREATE TABLE tmp_Instance (ID int);
	INSERT INTO tmp_Instance
	EXEC(@SQL);
	
	SET @prev = (SELECT MIN(ID) FROM tmp_Instance);
	
	
	
END
GO
/****** Object:  StoredProcedure [dbo].[spGetAll2062Data]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetAll2062Data] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT InstanceID, CreatedDate FROM [dbo].[TEMP_Form2062Instances]
END
GO
/****** Object:  StoredProcedure [dbo].[spGet3161TempItemsInserted]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: July 20, 2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spGet3161TempItemsInserted]
		(@suffix VARCHAR(40), @instance VARCHAR(50))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    DECLARE @SQL VARCHAR(MAX);
    DECLARE @tblName VARCHAR(40);
    DECLARE @i INT
    
    SET @tblName = 'TEMP_Form3161Items_' + @suffix;
	SET @SQL = 'SELECT COUNT(ItemId) AS CNT FROM ' + @tblName + ' WHERE InstanceId = ' + @instance
	
	RETURN EXEC (@SQL)
	
END
GO
/****** Object:  StoredProcedure [dbo].[spGet3161TempItemID]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 3-30-2010
-- Description:	Return a new instance id which
-- is the last one saved plus 1
-- =============================================
CREATE PROCEDURE [dbo].[spGet3161TempItemID]
	@suffix VARCHAR(40), @scopeIdentity INT OUTPUT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @SQL VARCHAR(90);
	DECLARE @tableName VARCHAR(90);
	
	SET @tableName = 'TEMP_Form3161Items_' + @suffix;
	
	SET @SQL = 'SELECT COUNT(*) AS CNT FROM ' + @tableName
	EXEC (@SQL)
	
	SET @scopeIdentity = (SELECT IDENT_CURRENT(@tableName))	
	SELECT @scopeIdentity;	
END
GO
/****** Object:  StoredProcedure [dbo].[spGetDmlssGridData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetDmlssGridData]
	--@manuf nvarchar(200),
	@nomen nvarchar(200),
	@model nvarchar(200),
	@sortBy nvarchar(200)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @sql nvarchar(900)
  
  SET @sql = 'SELECT * FROM DMLSS ';
  
	SET @sql += 'WHERE Nomenclature = ''' + @nomen + ''' ';
	
--	IF LEN(@manuf) > 1
--		SET @sql += 'AND Manufacturer LIKE ''' + @manuf + '%'' ';
		
	IF LEN(@model) > 1
		SET @sql += 'AND NameplateModel = ''' + @model + ''' ';
		
	SET @sql += ' ORDER BY ' + @sortBy + ' ASC ';	
	
	EXEC(@sql)
	
END
GO
/****** Object:  StoredProcedure [dbo].[spIAVSEntry]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: September 1, 2009
-- Description:	Stored Proc to grab data for IAVS entry
-- =============================================
CREATE PROCEDURE [dbo].[spIAVSEntry]
	-- Add the parameters for the stored procedure here
	@criteria varchar(1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(2000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT DISTINCT SMSProgram.DisplayName, SMSComputer.Name, SMSComputer.UserName, CONVERT(datetime, SMSProgram.InstallDate) AS InstallDate, SMSProgram.Version, DMLSS.Ecn, DMLSS.CustodianName, DMLSS.CustomerName, SMSComputer.Manufacturer, SMSComputer.Model, SMSComputer.Description, SMSComputer.InstanceKey, SMSComputer.MachineID, SMSComputer.Domain, SMSComputer.NumberOfProcessors, SMSComputer.Roles, SMSComputer.Status, SMSComputer.SystemType, DMLSS.MfrSerialNo, DMLSS.NameplateModel, DMLSS.MedicalEquipmentMeAcqCostQty, CONVERT(VARCHAR(11),DMLSS.AcqDate,113) AS AcqDate, DMLSS.ItemID, DMLSS.Nomenclature, DMLSS.LifeExp, DMLSS.Manufacturer AS DMLSSManufacturer, DMLSS.CommonModel, DMLSS.EquipmentLocation, DMLSS.Ownership, DMLSS.MaintAct, DMLSS.MtfOrgNm, DMLSS.CustomerId
	FROM SMSProgram INNER JOIN SMSComputer ON SMSProgram.MachineID = SMSComputer.MachineID LEFT OUTER JOIN DMLSS ON RIGHT(SMSComputer.Name, 5) = DMLSS.Ecn OR RIGHT(SMSComputer.Name, 7) = DMLSS.MfrSerialNo LEFT OUTER JOIN Nomenclature on DMLSS.Nomenclature = Nomenclature.Nomenclature WHERE SMSComputer.Name = ' + QuoteName(@criteria, '''') + ' ORDER BY Name'
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spIAVSData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/31/2009
-- Description:	Stored Proc to grab IAVS data
-- =============================================
CREATE PROCEDURE [dbo].[spIAVSData] 
	-- Add the parameters for the stored procedure here
	@criteria nvarchar(255),
	@criteria2 nvarchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(2000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT DISTINCT SMSProgram.DisplayName, SMSComputer.Name, SMSComputer.UserName, CONVERT(datetime, SMSProgram.InstallDate) AS InstallDate, SMSProgram.Version, DMLSS.Ecn, DMLSS.CustodianName, DMLSS.CustomerName, SMSComputer.Manufacturer, SMSComputer.Model, SMSComputer.Description, SMSComputer.InstanceKey, SMSComputer.MachineID, SMSComputer.Domain, SMSComputer.NumberOfProcessors, SMSComputer.Roles, SMSComputer.Status, SMSComputer.SystemType, DMLSS.MfrSerialNo, DMLSS.NameplateModel, DMLSS.MedicalEquipmentMeAcqCostQty, CONVERT(VARCHAR(11),DMLSS.AcqDate,113) AS AcqDate, DMLSS.ItemID, DMLSS.Nomenclature, DMLSS.LifeExp, DMLSS.Manufacturer AS DMLSSManufacturer, DMLSS.CommonModel, DMLSS.EquipmentLocation, DMLSS.Ownership, DMLSS.MaintAct, DMLSS.MtfOrgNm, DMLSS.CustomerId
	FROM SMSProgram INNER JOIN SMSComputer ON SMSProgram.MachineID = SMSComputer.MachineID LEFT OUTER JOIN DMLSS ON RIGHT(SMSComputer.Name, 5) = DMLSS.Ecn OR RIGHT(SMSComputer.Name, 7) = DMLSS.MfrSerialNo LEFT OUTER JOIN Nomenclature on DMLSS.Nomenclature = Nomenclature.Nomenclature WHERE SMSProgram.Version = ' + QuoteName(@criteria2, '''') + ' AND SMSProgram.DisplayName = ' + QuoteName(@criteria, '''') + ' ORDER BY Name'
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spInsert_____AppSystem]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-9-2012
-- Altered 6-27-2013 to remove user name
-- all user names are a single space now
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spInsert_____AppSystem]
	(@ComputerName VARCHAR(50), @UserName VARCHAR(50))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @c INT;
	
	--SET @c = (SELECT COUNT(AppUser) FROM Test____AppLog_Systems
	SET @c = (SELECT COUNT(AppComputer) FROM Test____AppLog_Systems
	--	WHERE AppComputer = @ComputerName)
		WHERE (AppUser = @UserName) AND (AppComputer = @ComputerName))
	SELECT @c

	-- Don't add user if exists	
	IF (@c = 0)
	BEGIN
	    INSERT INTO Test____AppLog_Systems (AppComputer, AppUser) VALUES (@ComputerName, @UserName);
	END
END
GO
/****** Object:  StoredProcedure [dbo].[spInsertPerm3161Items]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 06-24-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spInsertPerm3161Items] (
		@InstanceID INT, @suffix NVARCHAR(50))

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	DECLARE @SQL NVARCHAR(MAX);
	DECLARE @transferTo NVARCHAR(200);
	DECLARE @transferFrom NVARCHAR(200);
		
	SET @transferTo = 'Form3161Items';
	SET @transferFrom = 'TEMP_Form3161Items_' + @suffix;
	
	-- @instanceID must be the same as 
	-- current in Form3161Items table
	SET @instanceID = (SELECT IDENT_CURRENT('Form3161Instances'))
	
	SET @SQL = 'SET IDENTITY_INSERT ' + @transferTo + ' ON; ';
	EXEC (@SQL);
	
	SET @SQL = 'INSERT INTO ' + @transferTo
	SET @SQL = @SQL + '(InstanceId, Ecn, Nomenclature, ItemNoA, StockNo, Quantity, UnitOfIssue, ItemDescription, Code, SupplyAction, UnitPrice, TotalCost, '
	SET @SQL = @SQL + 'PostedDate, PostedBy, ItemStatus, pageCount, pageOfPages) '
	SET @SQL = @SQL + 'SELECT InstanceId, Ecn, Nomenclature, ItemNoA, StockNo, Quantity, UnitOfIssue, ItemDescription, Code, SupplyAction, UnitPrice, TotalCost, PostedDate, '
	SET @SQL = @SQL + 'PostedBy, ItemStatus, pageCount, pageOfPages '
	SET @SQL = @SQL + 'FROM ' + @transferFrom + ' '
	SET @SQL = @SQL + 'WHERE InstanceId = ' + CAST(@InstanceID AS NVARCHAR) + ' '
	EXEC (@SQL)

	SET @SQL = 'SET IDENTITY_INSERT ' + @transferTo + ' OFF; ';
	EXEC (@SQL);

END
GO
/****** Object:  StoredProcedure [dbo].[spInsertPerm3161Instance]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 06-24-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spInsertPerm3161Instance] (@InstanceId INT, @suffix NVARCHAR(50)) 
		--@scopeIndentity int output)
AS
BEGIN

	DECLARE @SQL NVARCHAR(MAX);
	
	SET @SQL = 'SET IDENTITY_INSERT Form3161Instances ON;';
	--EXEC (@SQL);
	
	SET @SQL = @SQL + 'INSERT INTO Form3161Instances ';
	SET @SQL = @SQL + '(InstanceId, CreatedDate, Issue, TurnIn, RequestNo, VoucherNo, SendTo, DateRequired, DODAAC, Priority, FundingData, RequestFrom, EndItemID, ';
	SET @SQL = @SQL + 'ManufacturerName, Model, MfrSerialNo, QtyColumnDate, QtyColumnBy, IssueSupplyActionDate, IssueSupplyActionBy, RecSupplyActionDate, ';
	SET @SQL = @SQL + 'RecSupplyActionBy, SheetTotal, GrandTotal, InstanceStatus, InstancePageCount, Suffix, UserGUID) ';
	SET @SQL = @SQL + 'SELECT InstanceId, CreatedDate, Issue, TurnIn, RequestNo, VoucherNo, SendTo, DateRequired, DODAAC, Priority, FundingData, RequestFrom, EndItemID, ';
	SET @SQL = @SQL + 'ManufacturerName, Model, MfrSerialNo, QtyColumnDate, QtyColumnBy, IssueSupplyActionDate, IssueSupplyActionBy, RecSupplyActionDate, ';
	SET @SQL = @SQL + 'RecSupplyActionBy, SheetTotal, GrandTotal, InstanceStatus, InstancePageCount, Suffix, UserGUID ';
	SET @SQL = @SQL + 'FROM TEMP_Form3161Instances_' + @suffix + ' ';
	SET @SQL = @SQL + 'WHERE (InstanceId = ' + CAST(@InstanceId AS NVARCHAR) + ')';
	--EXEC (@SQL)

	SET @SQL = @SQL + 'SET IDENTITY_INSERT Form3161Instances OFF;';
	EXEC (@SQL)
								
	--SET @scopeIndentity = CAST(SCOPE_IDENTITY() AS INT)
	--SELECT @scopeIndentity

END




/*


	INSERT INTO Form3161Instances
                      (InstanceId, CreatedDate, Issue, TurnIn, RequestNo, VoucherNo, SendTo, DateRequired, DODAAC, Priority, FundingData, RequestFrom, EndItemID, 
                      ManufacturerName, Model, MfrSerialNo, QtyColumnDate, QtyColumnBy, IssueSupplyActionDate, IssueSupplyActionBy, RecSupplyActionDate, 
                      RecSupplyActionBy, SheetTotal, GrandTotal, InstanceStatus, InstancePageCount)
	SELECT     InstanceId, CreatedDate, Issue, TurnIn, RequestNo, VoucherNo, SendTo, DateRequired, DODAAC, Priority, FundingData, RequestFrom, EndItemID, 
                      ManufacturerName, Model, MfrSerialNo, QtyColumnDate, QtyColumnBy, IssueSupplyActionDate, IssueSupplyActionBy, RecSupplyActionDate, 
                      RecSupplyActionBy, SheetTotal, GrandTotal, InstanceStatus, InstancePageCount
	FROM         TEMP_Form3161Instances_AMEDWKSERXPS03
	WHERE      InstanceId = 1
	
	*/
GO
/****** Object:  StoredProcedure [dbo].[spInsertPerm2062Items]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 06-24-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spInsertPerm2062Items] 
		(@InstanceId INT,
		 @Suffix NVARCHAR(50))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DECLARE @DBID INT;
	SET @DBID = DB_ID();

	DECLARE @DBNAME NVARCHAR(128);
	SET @DBNAME = DB_NAME();
	
	DECLARE @SQL NVARCHAR(MAX)
	DECLARE @fromTable VARCHAR(90)
	
	SET @fromTable = 'TEMP_Form2062Items_' + @Suffix;
	
	SET @SQL = 'SET IDENTITY_INSERT Form2062Items ON; '	
	SET @SQL = @SQL + 'INSERT INTO Form2062Items '
  SET @SQL = @SQL + '(ItemId, InstanceId, stockNo, itemDescription, cColumn, sec, ui, qtyAuth, qtyA, qtyB, qtyC, qtyD, qtyE, qtyF, ItemStatus, pageCount, pageOfPages) '
	SET @SQL = @SQL + 'SELECT ItemId, InstanceId, stockNo, itemDescription, cColumn, sec, ui, qtyAuth, qtyA, qtyB, qtyC, qtyD, qtyE, qtyF, ItemStatus, pageCount, pageOfPages '
	SET @SQL = @SQL + 'FROM ' + @fromTable + ' '      
	SET @SQL = @SQL + 'WHERE ((' + @fromTable + '.InstanceId = ' + CAST(@InstanceId AS NVARCHAR) + ')); '
	SET @SQL = @SQL + 'SET IDENTITY_INSERT Form2062Items OFF; '

	BEGIN TRY	
		EXEC (@SQL)
	END TRY
	
	BEGIN CATCH
		DECLARE @ErrorMessage NVARCHAR(4000);
		DECLARE @ErrorSeverity INT;
		DECLARE @ErrorState INT;

		SELECT @ErrorMessage = ERROR_MESSAGE(),
           @ErrorSeverity = ERROR_SEVERITY(),
           @ErrorState = ERROR_STATE();

		-- Use RAISERROR inside the CATCH block to return 
		-- error information about the original error that 
		-- caused execution to jump to the CATCH block.
		RAISERROR (@ErrorMessage, -- Message text.
               @ErrorSeverity, -- Severity.
               @ErrorState -- State.
               );
	END CATCH
	
END
GO
/****** Object:  StoredProcedure [dbo].[spInsertPerm2062Instance]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 05-11-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spInsertPerm2062Instance] (
		@InstanceId INT, @UserGUID VARCHAR(50), @Suffix NVARCHAR(40)) 
AS
BEGIN
	DECLARE @SQL NVARCHAR(MAX)
	DECLARE @tableName NVARCHAR(90)
	
	SET @tableName = 'TEMP_Form2062Instances_' + @Suffix;
	SET @SQL = 'SET IDENTITY_INSERT Form2062Instances ON; '
	
	SET @SQL = @SQL + 'INSERT INTO Form2062Instances '
  SET @SQL = @SQL + '(InstanceId, CreatedDate, FromWho, ToWho, HandReceiptNo, EndItemStockNo, EndItemDescription, PublicationNo, PublicationDate, Quantity, '
	SET @SQL = @SQL + 'InstanceStatus, InstancePageCount, Suffix, UserGUID) '
	SET @SQL = @SQL + 'SELECT InstanceId, CreatedDate, FromWho, ToWho, HandReceiptNo, EndItemStockNo, EndItemDescription, PublicationNo, PublicationDate, Quantity, '
  SET @SQL = @SQL + 'InstanceStatus, InstancePageCount, Suffix, UserGUID '
	SET @SQL = @SQL + 'FROM ' + @tableName + ' '
	SET @SQL = @SQL + 'WHERE ((InstanceId = ' + CAST(@InstanceId AS VARCHAR) + ') AND (UserGUID = ''' + @UserGUID + ''')); '
	
	SET @SQL = @SQL + 'SET IDENTITY_INSERT Form2062Instances OFF; '
	
	EXEC (@SQL)
	
END
GO
/****** Object:  StoredProcedure [dbo].[spGet2062TempItemID]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 3-30-2010
-- Description:	Return a new instance id which
-- is the last one saved plus 1
-- =============================================
CREATE PROCEDURE [dbo].[spGet2062TempItemID]
	@suffix VARCHAR(40), @scopeIdentity INT OUTPUT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


	DECLARE @SQL VARCHAR(90);
	
	SET @SQL = 'SELECT * FROM TEMP_Form2062Items_' + @suffix + ' '
	EXEC (@SQL)
	
	SET @scopeIdentity = (SELECT IDENT_CURRENT('TEMP_Form2062Items_' + @suffix))
	SELECT @scopeIdentity
END
GO
/****** Object:  StoredProcedure [dbo].[spGet2062TempInstanceID]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-10-2010
-- Description:	Return instanceId
-- =============================================
CREATE PROCEDURE [dbo].[spGet2062TempInstanceID] 
	(@suffix VARCHAR(40), @scopeIdentity INT OUTPUT)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @SQL VARCHAR(400);
	SET @SQL = 'SELECT COUNT(*) AS CNT FROM TEMP_Form2062Instances_' + @suffix + ' '
	EXEC (@SQL)
	
	SET @scopeIdentity = (SELECT IDENT_CURRENT('TEMP_Form2062Instances_' + @suffix))
	SELECT @scopeIdentity
END
GO
/****** Object:  StoredProcedure [dbo].[spGet3161InstanceID]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 11-10-2010
-- Description:	Return instanceId
-- =============================================
CREATE PROCEDURE [dbo].[spGet3161InstanceID] 

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @scopeIdentity INT;
	--SELECT COUNT(*) FROM [dbo].[Form2062Instances] as cnt
	SET @scopeIdentity = (SELECT IDENT_CURRENT('Form3161Instances'))
	SELECT @scopeIdentity AS IDENT
END
GO
/****** Object:  StoredProcedure [dbo].[spGet2062PermInstanceID]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-10-2010
-- Description:	Return instanceId
-- =============================================
CREATE PROCEDURE [dbo].[spGet2062PermInstanceID] 
	@scopeIdentity INT OUTPUT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	--SELECT COUNT(*) FROM [dbo].[Form2062Instances] as cnt WHERE ([UserGUID] = @guid)
	SET @scopeIdentity = (SELECT IDENT_CURRENT('Form2062Instances'))
	--SET @scopeIdentity = SCOPE_IDENTITY()
	SELECT @scopeIdentity AS IDENT
END
GO
/****** Object:  StoredProcedure [dbo].[spGet2062InstanceID]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 11-10-2010
-- Description:	Return instanceId
-- =============================================
CREATE PROCEDURE [dbo].[spGet2062InstanceID] 

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @scopeIdentity INT;
	--SELECT COUNT(*) FROM [dbo].[Form2062Instances] as cnt
	SET @scopeIdentity = (SELECT IDENT_CURRENT('Form2062Instances'))
	SELECT @scopeIdentity AS IDENT
END
GO
/****** Object:  StoredProcedure [dbo].[spDMLSS_SCCM_Update]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spDMLSS_SCCM_Update] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Declare @FilePath varchar(1000)
	Declare @FileName varchar(1000)
	Declare @cmd varchar(max)
	
	set @FilePath = 'D:\SSIS\DMLSS_SCCM\'
	set @FileName = 'DMLSS_SCCM.dtsx'
	
	select @cmd = 'DTExec /F"' + @FilePath + @FileName + '";'
	print @cmd
END
GO
/****** Object:  StoredProcedure [dbo].[spDMLSS_SCCM_AHLTA_Update]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spDMLSS_SCCM_AHLTA_Update] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	Declare @FilePath varchar(1000)
	Declare @FileName varchar(1000)
	Declare @cmd varchar(max)
	
	set @FilePath = 'D:\SSIS\compat\'
	set @FileName = 'dmlss_sccm_ahlta.dtsx'
	
	select @cmd = 'DTExec /F"' + @FilePath + @FileName + '";'
	print @cmd
END
GO
/****** Object:  StoredProcedure [dbo].[spEcnSearch]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spEcnSearch]
	-- Add the parameters for the stored procedure here
		@ecn NVARCHAR(255)
		--@manu NVARCHAR(255),
		--@nomen NVARCHAR(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(max)

    -- Insert statements for procedure here
	--SET @sql = 'SELECT 
	--Ecn5, 
	--Ecn, 
	--MfrSerialNo, 
	--NameplateModel, 
	--MedicalEquipmentMeAcqCostQty,
	--CONVERT(VARCHAR(11),AcqDate,113) AS AcqDate,
	--ItemID,
	--Nomenclature,
	--LifeExp, 
	--Manufacturer AS DMLSSManufacturer,
	--CommonModel,
	--EquipmentLocation,
	--Ownership, 
	--MaintAct,
	--MtfOrgNm,
	--CustomerId, 
	--CustomerName, 
	--CustodianName 
	--FROM DMLSS 
	--WHERE Ecn IN (''' + @ecn + ''')'  -- AND Manufacturer IN (''' + @manu + ''') AND Nomenclature IN (''' + @nomen + ''')'

  SET @sql = 'SELECT Ecn5, Ecn, MfrSerialNo, ';
	SET @sql += 'NameplateModel, MedicalEquipmentMeAcqCostQty, ';
	SET @sql += 'CONVERT(VARCHAR(11),AcqDate,113) AS AcqDate, ';
	SET @sql += 'ItemID, Nomenclature,	LifeExp, ';
	SET @sql += 'Manufacturer AS DMLSSManufacturer, ';
	SET @sql += 'CommonModel,EquipmentLocation, Ownership, ';
	SET @sql += 'MaintAct,	MtfOrgNm, CustomerId, ';
	SET @sql += 'CustomerName, CustodianName ';
	SET @sql += 'FROM DMLSS ';
	SET @sql += 'WHERE Ecn IN (''' + @ecn + ''')'
	
	--IF LEN(@manu) > 1
	--	SET @sql += ' AND Manufacturer IN ('''+@manu+''')'
		
	--IF LEN(@nomen) > 1
	--	SET @sql += ' AND Nomenclature IN ('''+@nomen+''')'
	
	EXEC(@sql)
	
END
GO
/****** Object:  StoredProcedure [dbo].[spForm2062TempInstanceExists]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 6-29-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spForm2062TempInstanceExists]
	(@id VARCHAR(50), @suffix VARCHAR(40), @outVal INT OUTPUT)
AS


BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
--DECLARE @userID NVARCHAR(40);
DECLARE @tableName NVARCHAR(90);
DECLARE @SQL NVARCHAR(900);
DECLARE @vId NVARCHAR(9);
declare @id2 int;

	SET @vId = '1';
	set @id2 = 4;
	set @suffix = 'AMEDWKSERXPS03';
	SET @tableName = 'TEMP_Form2062Instances_' + @suffix
	SET @SQL = 'SELECT InstanceId AS IDX, createdDate FROM ' + @tableName + ' WHERE ((InstanceId = ' + CAST(@id2 AS NVARCHAR) + ') AND (createdDate IS NOT NULL)) '
	--exec (@sql)
	
	IF OBJECT_ID('tempdb.dbo.#t') IS NOT NULL DROP TABLE #t
	CREATE TABLE #t (instanceID INT, createdDate DATETIME)
	
	DECLARE c CURSOR READ_ONLY FOR SELECT instanceID FROM TEMP_Form2062Instances_AMEDWKSERXPS03
	DECLARE @IDX INT
	
	OPEN c

	FETCH NEXT FROM c INTO @ID
	WHILE (@@fetch_status <> -1)
	BEGIN
		IF (@@fetch_status <> -2)
			INSERT #t EXEC (@SQL)
		FETCH NEXT FROM c INTO @ID
	END

	CLOSE c
	DEALLOCATE c

	SET @SQL = 'SELECT *, '
	SET @SQL = @SQL + 'CASE WHEN EXISTS (SELECT * FROM #t WHERE instanceId = a.instanceId) '
	SET @SQL = @SQL + 'THEN 1 ELSE 0 END AS idExistsInTempTable '
	SET @SQL = @SQL + 'FROM ' + @tableName + ' a'
	print @SQL
	EXEC (@SQL)
	
	SET @SQL = 'SELECT idExistsInTempTable FROM @tableName'
	EXEC (@SQL)

exec ('SELECT InstanceId AS IDX FROM TEMP_Form2062Instances_AMEDWKSERXPS03 WHERE ((InstanceId = 1) AND (createdDate IS NOT NULL))')
	
	SELECT @outVal
END
GO
/****** Object:  StoredProcedure [dbo].[spForm3161TempInstanceExists]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 6-29-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spForm3161TempInstanceExists]
	( @id VARCHAR(50), @suffix VARCHAR(40))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DECLARE @tableName VARCHAR(90);
	
	SET @tableName = 'TEMP_Form3161Instances_' + @suffix
	
	RETURN EXEC ('SELECT COUNT(InstanceId) AS ID FROM ' + @tableName + ' WHERE ((InstanceId = ' + @id + ') AND (createdDate IS NOT NULL)) ') 
  
END
GO
/****** Object:  StoredProcedure [dbo].[spDBothEntry]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: August 11, 2009
-- Description:	Stored Proc to grab data for DMLSS entry
-- =============================================
CREATE PROCEDURE [dbo].[spDBothEntry]
	-- Add the parameters for the stored procedure here
	@criteria varchar(1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(2000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT DISTINCT SMSComputer.Name, SMSComputer.UserName, DMLSS.Ecn, DMLSS.CustodianName, DMLSS.CustomerName, SMSComputer.Manufacturer, SMSComputer.Model, SMSComputer.Description, DMLSS.MfrSerialNo, DMLSS.NameplateModel, DMLSS.MedicalEquipmentMeAcqCostQty, CONVERT(VARCHAR(11),DMLSS.AcqDate,113) AS AcqDate, DMLSS.ItemID, DMLSS.Nomenclature, DMLSS.LifeExp, DMLSS.Manufacturer AS DMLSSManufacturer, DMLSS.CommonModel, DMLSS.EquipmentLocation, DMLSS.Ownership, DMLSS.MaintAct, DMLSS.MtfOrgNm, DMLSS.CustomerId, SMSComputer.InstanceKey, SMSComputer.MachineID, SMSComputer.Domain, SMSComputer.NumberOfProcessors, SMSComputer.Roles, SMSComputer.Status, SMSComputer.SystemType
			FROM DMLSS LEFT OUTER JOIN SMSComputer ON DMLSS.Ecn = RIGHT(SMSComputer.Name, 5) OR DMLSS.MfrSerialNo = RIGHT(SMSComputer.Name, 7) LEFT OUTER JOIN Nomenclature on DMLSS.Nomenclature = Nomenclature.Nomenclature WHERE DMLSS.Ecn = ' + QuoteName(@criteria, '''') + ' ORDER BY DMLSS.Ecn'
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spDistinctSelect]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 7/2/2009
-- Description:	Dynamic SP to grab distinct records
-- =============================================
CREATE PROCEDURE [dbo].[spDistinctSelect] 
	-- Add the parameters for the stored procedure here
	@table nvarchar(2000),
	@field nvarchar(255),
	@order nvarchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	EXEC ('SELECT DISTINCT ' + @field + ' FROM ' + @table + ' ORDER BY ' + @order + '')
END
GO
/****** Object:  Table [dbo].[IAVSProgram]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[IAVSProgram](
	[IAVSProgram] [varchar](255) NULL,
	[IAVSProgramVersion] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  StoredProcedure [dbo].[spDMLSS_All]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spDMLSS_All]
	@SortBy NVARCHAR(25)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;


  --SELECT	Ecn5 AS Ecn, d.Manufacturer, NameplateModel AS Model, Nomenclature, CustodianName AS Custodian, CustomerName AS Customer, CustomerId
  --FROM	DmlssData d LEFT JOIN Alias a ON d.Manufacturer = a.Manufacturer
  --WHERE 1 = 1
	 -- AND Ecn5 IN (
		--			SELECT DISTINCT Ecn5 
		--			FROM DMLSS 
		--			WHERE nomenclature IN (SELECT nomenclature FROM computer_nomenclature)
		--				AND Ecn5 IS NOT NULL EXCEPT (SELECT Ecn5 FROM DMLSS INTERSECT SELECT SMSComputer.Name5 FROM SMSComputer))
  --ORDER BY ECN5

	DECLARE @sql NVARCHAR(900);

	SET @sql = 'SELECT	Ecn5 AS Ecn, d.Manufacturer, NameplateModel AS Model, Nomenclature, CustodianName AS Custodian, CustomerName AS Customer, CustomerId '
	SET @sql += 'FROM	DmlssData d LEFT JOIN Alias a ON d.Manufacturer = a.Manufacturer '
	SET @sql += 'WHERE 1 = 1 '
	SET @sql += 'AND Ecn5 IN ( '
	SET @sql += 'SELECT DISTINCT Ecn5 '
	SET @sql += 'FROM DMLSS '
	SET @sql += 'WHERE nomenclature IN (SELECT nomenclature FROM computer_nomenclature) '
	SET @sql += 'AND Ecn5 IS NOT NULL EXCEPT (SELECT Ecn5 FROM DMLSS INTERSECT SELECT SMSComputer.Name5 FROM SMSComputer)) '
	SET @sql += 'ORDER BY ' + @sortBy


	EXECUTE sp_executesql @sql
  
END
GO
/****** Object:  StoredProcedure [dbo].[spDoesTableExist]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: June 30, 2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spDoesTableExist]
	(@tableName VARCHAR(99))

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DECLARE @exists BIT;
	
	IF OBJECT_ID(@tableName) IS NOT NULL 
		SET @exists = 1;
	ELSE
		SET @exists = 0;
END
GO
/****** Object:  StoredProcedure [dbo].[spDMLSSTot]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 7/2/2009
-- Description:	Dynamic SP to grab inventory data
-- =============================================
CREATE PROCEDURE [dbo].[spDMLSSTot]
	-- Add the parameters for the stored procedure here
	@table nvarchar(20),
	@criteria nvarchar(100)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT Count(*) as count FROM ' + @table + ' WHERE Nomenclature = ' + QuoteName(@criteria, '''') + ''
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spDMLSSSort]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 7/2/2009
-- Description:	Dynamic SP to grab DMLSS Data
-- =============================================
CREATE PROCEDURE [dbo].[spDMLSSSort]
	-- Add the parameters for the stored procedure here
	@sql varchar(MAX),
	@table varchar (1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	EXEC ('SELECT DMLSS.Ecn,DMLSS.Ecn5,DMLSS.Manufacturer,DMLSS.NameplateModel,DMLSS.Nomenclature,DMLSS.CustomerName,DMLSS.CustodianName,DMLSS.CustomerID,DMLSS.AcqDate 
	FROM ' + @table + ' ' + @sql + ' 
	ORDER BY DMLSS.Ecn')
END
GO
/****** Object:  StoredProcedure [dbo].[spDMLSSold]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 7/2/2009
-- Description:	Dynamic SP to grab DMLSS Data
-- =============================================
CREATE PROCEDURE [dbo].[spDMLSSold]
	-- Add the parameters for the stored procedure here
	@sql varchar(MAX),
	@compare varchar (1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	EXEC ('SELECT DMLSS.Ecn,DMLSS.Ecn5,DMLSS.Manufacturer,DMLSS.NameplateModel,DMLSS.Nomenclature,DMLSS.CustomerName,DMLSS.CustodianName,DMLSS.CustomerID 
	FROM DMLSS JOIN Alias ON DMLSS.Manufacturer = Alias.Manufacturer ' + @compare + ' ' + @sql + '')
END
GO
/****** Object:  StoredProcedure [dbo].[spDMLSSEntry]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 21, 2009
-- Description:	Stored Proc to grab data for DMLSS entry
-- =============================================
CREATE PROCEDURE [dbo].[spDMLSSEntry] 
	-- Add the parameters for the stored procedure here
	@criteria varchar(1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT Ecn, MfrSerialNo, NameplateModel,MedicalEquipmentMeAcqCostQty,CONVERT(VARCHAR(11),AcqDate,113) AS AcqDate,ItemID,Nomenclature,LifeExp, Manufacturer AS DMLSSManufacturer,CommonModel,EquipmentLocation, Ownership, MaintAct,MtfOrgNm,CustomerId, CustomerName, CustodianName, MfrSerialNo 
	FROM DMLSS 
	WHERE Ecn = ' + QuoteName(@criteria, '''') + ''
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spDMLSS_Test]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spDMLSS_Test]
	-- Add the parameters for the stored procedure here
	@SortBy NVARCHAR(25)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @sql NVARCHAR(900);

	SET @sql = 'SELECT TOP(1000) Ecn5 AS Ecn, d.Manufacturer, NameplateModel AS Model, Nomenclature, CustodianName AS Custodian, CustomerName AS Customer, CustomerId '
	SET @sql += 'FROM	DmlssData d LEFT JOIN Alias a ON d.Manufacturer = a.Manufacturer '
	SET @sql += 'WHERE 1 = 1 '
	SET @sql += 'AND Ecn5 IN ( '
	SET @sql += 'SELECT DISTINCT Ecn5 '
	SET @sql += 'FROM DMLSS '
	SET @sql += 'WHERE nomenclature IN (SELECT nomenclature FROM computer_nomenclature) '
	SET @sql += 'AND Ecn5 IS NOT NULL EXCEPT (SELECT Ecn5 FROM DMLSS INTERSECT SELECT SMSComputer.Name5 FROM SMSComputer)) '
	SET @sql += 'ORDER BY ' + @sortBy


	EXECUTE sp_executesql @sql
END
GO
/****** Object:  Table [dbo].[DeviceTrackerII]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DeviceTrackerII](
	[Function] [nvarchar](255) NULL,
	[OS] [nvarchar](255) NULL,
	[Category] [nvarchar](255) NULL,
	[EquipmentPOC] [nvarchar](255) NULL,
	[ServerHardwareName] [nvarchar](255) NULL,
	[IPADDRESS] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DeviceTracker]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DeviceTracker](
	[RowID] [int] IDENTITY(1,1) NOT NULL,
	[Server/Hardware Name] [nvarchar](255) NULL,
	[Function] [nvarchar](255) NULL,
	[Category] [nvarchar](255) NULL,
	[MSIR #] [nvarchar](255) NULL,
	[MSIR System Description] [nvarchar](255) NULL,
	[System Owner] [nvarchar](255) NULL,
	[Equipment POC] [nvarchar](255) NULL,
	[Functional Manager] [nvarchar](255) NULL,
	[Modified] [datetime] NULL,
	[Modified By] [nvarchar](255) NULL,
	[Virtual Machine] [nvarchar](255) NULL,
	[Virtual Machine Host Server] [nvarchar](255) NULL,
	[Virtual Host] [nvarchar](255) NULL,
	[SN/ST] [nvarchar](255) NULL,
	[ECN] [nvarchar](255) NULL,
	[1E-02 CR Rack Location] [nvarchar](255) NULL,
	[Highest Rack Unit Used] [float] NULL,
	[Rack Space] [float] NULL,
	[Vendor] [nvarchar](255) NULL,
	[Server Model] [nvarchar](255) NULL,
	[Operating System] [nvarchar](255) NULL,
	[Browser] [nvarchar](255) NULL,
	[IP Address(s)] [nvarchar](255) NULL,
	[# Processors] [nvarchar](255) NULL,
	[RAM] [nvarchar](255) NULL,
	[# NICs] [nvarchar](255) NULL,
	[# NICs Enabled] [nvarchar](255) NULL,
	[NIC Speed] [nvarchar](255) NULL,
	[Warranty Expiration] [nvarchar](255) NULL,
	[Warranty Type] [nvarchar](255) NULL,
	[SCAP Scan Date] [nvarchar](255) NULL,
	[SCAP Scan Results] [nvarchar](255) NULL,
	[SCAP Scan Exempt] [nvarchar](255) NULL,
	[SCAP Scan Comments] [nvarchar](255) NULL,
	[SCAP Waiver Submitted] [nvarchar](255) NULL,
	[SCAP Folder] [nvarchar](255) NULL,
	[Power - Power Supplies Active] [float] NULL,
	[Power - Amp Max Req] [nvarchar](255) NULL,
	[Power - Voltage] [nvarchar](255) NULL,
	[Remarks] [nvarchar](255) NULL,
	[Last IAVA Remediation Date] [nvarchar](255) NULL,
	[IAVA Notes] [nvarchar](255) NULL,
	[Lifecycle Date] [nvarchar](255) NULL,
	[Logical Unit] [nvarchar](255) NULL,
	[Criticality Level] [nvarchar](255) NULL,
	[Created] [datetime] NULL,
	[Created By] [nvarchar](255) NULL,
	[Content Type] [nvarchar](255) NULL,
	[Item Type] [nvarchar](255) NULL,
	[Path] [nvarchar](255) NULL,
 CONSTRAINT [PK_DeviceTracker] PRIMARY KEY CLUSTERED 
(
	[RowID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[CustodianView]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[CustodianView](
	[UsamitcName] [varchar](50) NULL,
	[NotStandard] [char](1) NULL,
	[Stale] [char](1) NULL,
	[Unmanaged] [char](1) NULL,
	[NoSccm] [char](1) NULL,
	[Win7NotReady] [char](1) NULL,
	[HbssNotCompliant] [char](1) NULL,
	[HbssServiceNotRunning] [char](1) NULL,
	[HbssHipsNotRunning] [char](1) NULL,
	[HbssAvNotRunning] [char](1) NULL,
	[TwNotCompliant] [char](1) NULL,
	[ActivClientNotCompliant] [char](1) NULL,
	[DarNotCompliant] [char](1) NULL,
	[AgmNotCompliant] [char](1) NULL,
	[CclNotEnforced] [char](1) NULL,
	[OuPath] [varchar](255) NULL,
	[UsamitcDescription] [varchar](255) NULL,
	[LastLoggedOnUser] [varchar](50) NULL,
	[DateCreatedAd] [datetime] NULL,
	[DateCreatedBios] [datetime] NULL,
	[SystemAge] [tinyint] NULL,
	[Ecn] [varchar](50) NULL,
	[Name] [varchar](50) NULL,
	[Alias] [varchar](100) NULL,
	[ModelAlias] [varchar](100) NULL,
	[Manufacturer] [varchar](100) NULL,
	[NameplateModel] [varchar](100) NULL,
	[Manufacturer2] [varchar](100) NULL,
	[Model] [varchar](100) NULL,
	[OperatingSystem] [varchar](100) NULL,
	[SerialNumber] [varchar](100) NULL,
	[Nomenclature] [varchar](100) NULL,
	[UserName] [varchar](100) NULL,
	[CustodianName] [varchar](100) NULL,
	[CustomerID] [varchar](50) NULL,
	[CustomerName] [varchar](100) NULL,
	[CustomerName2] [varchar](100) NULL,
	[CustodianPhone] [varchar](50) NULL,
	[Active] [varchar](50) NULL,
	[Lifecycle] [varchar](50) NULL,
	[Ahlta] [varchar](50) NULL,
	[Listed] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[custodian]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[custodian](
	[OrgName] [varchar](50) NULL,
	[CustomerId] [varchar](50) NULL,
	[CustomerName] [varchar](50) NULL,
	[PocFirstName] [varchar](50) NULL,
	[PocLastName] [varchar](50) NULL,
	[CustodianPhone] [varchar](50) NULL,
	[PocSerial] [varchar](50) NULL,
	[CustomerOrgSer] [varchar](50) NULL,
	[LastInvDate] [datetime] NULL,
	[NextInvDate] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Computer_System_DATA]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Computer_System_DATA](
	[ItemName] [varchar](64) NULL,
	[UserName] [varchar](64) NULL,
	[Manufacturer] [varchar](40) NULL,
	[Model] [varchar](40) NULL,
	[OperatingSystem] [varchar](128) NULL,
	[SerialNumber] [varchar](24) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[computer_nomenclature]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[computer_nomenclature](
	[nomenclature] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[compat]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[compat](
	[MachineID] [int] NULL,
	[Model] [varchar](36) NULL,
	[Name] [varchar](64) NULL,
	[UserName] [varchar](255) NULL,
	[Manufacturer] [varchar](40) NULL,
	[OS] [varchar](128) NULL,
	[Version] [varchar](24) NULL,
	[RAM] [int] NULL,
	[ClockSpeed] [int] NULL,
	[Video] [varchar](64) NULL,
	[processor] [int] NULL,
	[ahlta] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Form3161Instances]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Form3161Instances](
	[InstanceId] [int] IDENTITY(0,1) NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[Issue] [bit] NULL,
	[TurnIn] [bit] NULL,
	[RequestNo] [varchar](255) NULL,
	[VoucherNo] [varchar](255) NULL,
	[SendTo] [varchar](255) NULL,
	[DateRequired] [datetime] NULL,
	[DODAAC] [varchar](255) NULL,
	[Priority] [varchar](255) NULL,
	[FundingData] [varchar](255) NULL,
	[RequestFrom] [varchar](255) NULL,
	[EndItemID] [varchar](255) NULL,
	[ManufacturerName] [varchar](255) NULL,
	[Model] [varchar](255) NULL,
	[MfrSerialNo] [varchar](255) NULL,
	[Publication] [varchar](255) NULL,
	[JobOrderNo] [varchar](255) NULL,
	[QtyColumnDate] [datetime] NULL,
	[QtyColumnBy] [varchar](255) NULL,
	[IssueSupplyActionDate] [datetime] NULL,
	[IssueSupplyActionBy] [varchar](255) NULL,
	[RecSupplyActionDate] [datetime] NULL,
	[RecSupplyActionBy] [varchar](255) NULL,
	[SheetTotal] [money] NULL,
	[GrandTotal] [money] NULL,
	[InstanceStatus] [int] NULL,
	[InstancePageCount] [int] NULL,
	[UserGUID] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_Form3161Instances] PRIMARY KEY CLUSTERED 
(
	[InstanceId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Form3161Codes]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Form3161Codes](
	[CodeId] [varchar](5) NOT NULL,
	[Code] [varchar](50) NOT NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[FormStatus]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[FormStatus](
	[InstanceStatus] [int] NOT NULL,
	[InstanceName] [varchar](50) NULL,
 CONSTRAINT [PK_FormStatus] PRIMARY KEY CLUSTERED 
(
	[InstanceStatus] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lcFacility]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lcFacility](
	[facilityID] [varchar](8) NOT NULL,
	[facilityName] [varchar](50) NULL,
 CONSTRAINT [PK_lcFacility] PRIMARY KEY CLUSTERED 
(
	[facilityID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[knownServerNames]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[knownServerNames](
	[Name] [varchar](64) NOT NULL,
	[Name5] [nvarchar](5) NULL,
 CONSTRAINT [PK_server] PRIMARY KEY CLUSTERED 
(
	[Name] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[InventoryData]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[InventoryData](
	[ItemName] [nvarchar](50) NULL,
	[UserName] [nvarchar](50) NULL,
	[Manufacturer] [nvarchar](100) NULL,
	[Model] [nvarchar](100) NULL,
	[OperatingSystem] [nvarchar](100) NULL,
	[SerialNumber] [nvarchar](50) NULL,
	[Status] [smallint] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[InvData]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[InvData](
	[MedicalEquipmentMeID] [float] NULL,
	[Ecn] [nvarchar](255) NULL,
	[MedicalEquipmentDeviceClsCode] [nvarchar](255) NULL,
	[MedicalEquipmentDeviceCd] [nvarchar](255) NULL,
	[MedicalEquipmentManufOrgSerial] [float] NULL,
	[MfrSerialNo] [nvarchar](255) NULL,
	[MedicalEquipmentSystemTypeCd] [nvarchar](255) NULL,
	[MedicalEquipmentDeleteInd] [nvarchar](255) NULL,
	[MedicalEquipmentManufMdlSerID] [float] NULL,
	[NameplateModel] [nvarchar](255) NULL,
	[MedicalEquipmentEqpmtOwnerTypCd] [float] NULL,
	[MedicalEquipmentMaSerial] [float] NULL,
	[MedicalEquipmentMaintSrcOrgSer] [float] NULL,
	[MedicalEquipmentUsmantSrcOrgSer] [float] NULL,
	[MedicalEquipmentOtherGovtSosSer] [float] NULL,
	[MedicalEquipmentPltPermLocSer] [float] NULL,
	[MedicalEquipmentMeWrmPeactmCd] [nvarchar](255) NULL,
	[MedicalEquipmentMeAcqCostQty] [float] NULL,
	[MedicalEquipmentMeDiscountAmt] [float] NULL,
	[MedicalEquipmentMeTradeInAmt] [float] NULL,
	[MedicalEquipmentMeTransportAmt] [float] NULL,
	[MedicalEquipmentMeInstalltionAmt] [float] NULL,
	[MedicalEquipmentMeOtherMiscAmt] [float] NULL,
	[MedicalEquipmentMeUpgradeCstAmt] [float] NULL,
	[AcqDate] [datetime] NULL,
	[MedicalEquipmentCustomerOrgSer] [float] NULL,
	[MedicalEquipmentMeOnloanCd] [nvarchar](255) NULL,
	[ItemID] [nvarchar](255) NULL,
	[EquipItemEiAccntblCd] [nvarchar](255) NULL,
	[EquipItemEiMaintReqrCd] [nvarchar](255) NULL,
	[ContractServiceContractorSosSer] [float] NULL,
	[Nomenclature] [nvarchar](255) NULL,
	[LifeExp] [float] NULL,
	[Manufacturer] [nvarchar](255) NULL,
	[CommonModel] [nvarchar](255) NULL,
	[EquipmentLocation] [nvarchar](255) NULL,
	[Ownership] [nvarchar](255) NULL,
	[MaintAct] [nvarchar](255) NULL,
	[SchedTeam] [nvarchar](255) NULL,
	[UnschedTeam] [nvarchar](255) NULL,
	[Contractor] [nvarchar](255) NULL,
	[OrgViewMtfSerial] [float] NULL,
	[MtfOrgID] [nvarchar](255) NULL,
	[MtfOrgNm] [nvarchar](255) NULL,
	[OrgViewCustOrgSer] [float] NULL,
	[CustomerID] [nvarchar](255) NULL,
	[CustomerName] [nvarchar](255) NULL,
	[CustodianViewCustdnPocSer] [float] NULL,
	[CustodianName] [nvarchar](255) NULL,
	[AssemblageOrgSerial] [nvarchar](255) NULL,
	[AssemblageOrgNm] [nvarchar](255) NULL,
	[AssemblageDesc] [nvarchar](255) NULL,
	[AssemblageNo] [nvarchar](255) NULL,
	[AssemblageOrgID] [nvarchar](255) NULL,
	[AcqCostLow] [float] NULL,
	[AcqCostHigh] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Groups]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Groups](
	[GroupID] [int] IDENTITY(1,1) NOT NULL,
	[GroupName] [nvarchar](50) NOT NULL,
	[Active] [bit] NOT NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[HPBatRclSCCM]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[HPBatRclSCCM](
	[ComputerName] [nvarchar](255) NULL,
	[TopConsoleUser] [nvarchar](255) NULL,
	[OperatingSystem] [nvarchar](255) NULL,
	[SerialNumber] [nvarchar](255) NULL,
	[Model] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[spAhltaAll]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/11/2009
-- Description:	Dynamic SP to grab all AHLTA version data
-- =============================================
CREATE PROCEDURE [dbo].[spAhltaAll] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT Version FROM AhltaTemp WHERE Version IS NOT NULL ORDER BY version'
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spBothEntry]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: August 11, 2009
-- Description:	Stored Proc to grab data for DMLSS entry
-- =============================================
CREATE PROCEDURE [dbo].[spBothEntry]
	-- Add the parameters for the stored procedure here
	@criteria varchar(1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(2000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT DISTINCT SMSComputer.Name, SMSComputer.UserName, DMLSS.Ecn, DMLSS.CustodianName, DMLSS.CustomerName, SMSComputer.Manufacturer, SMSComputer.Model, SMSComputer.Description, DMLSS.MfrSerialNo, DMLSS.NameplateModel, DMLSS.MedicalEquipmentMeAcqCostQty, CONVERT(VARCHAR(11),DMLSS.AcqDate,113) AS AcqDate, DMLSS.ItemID, DMLSS.Nomenclature, DMLSS.LifeExp, DMLSS.Manufacturer AS DMLSSManufacturer, DMLSS.CommonModel, DMLSS.EquipmentLocation, DMLSS.Ownership, DMLSS.MaintAct, DMLSS.MtfOrgNm, DMLSS.CustomerId, SMSComputer.InstanceKey, SMSComputer.MachineID, SMSComputer.Domain, SMSComputer.NumberOfProcessors, SMSComputer.Roles, SMSComputer.Status, SMSComputer.SystemType
			FROM SMSComputer LEFT OUTER JOIN DMLSS ON RIGHT(SMSComputer.Name, 5) = DMLSS.Ecn OR RIGHT(SMSComputer.Name, 7) = DMLSS.MfrSerialNo LEFT OUTER JOIN Nomenclature on DMLSS.Nomenclature = Nomenclature.Nomenclature WHERE SMSComputer.Name = ' + QuoteName(@criteria, '''') + ' ORDER BY Name'
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spAhltaTot]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/11/2009
-- Description:	Dynamic SP to grab AHLTA version data
-- =============================================
CREATE PROCEDURE [dbo].[spAhltaTot] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)

    -- Insert statements for procedure here
	--SET @sql = 'SELECT Count(*) as count FROM
	--(SELECT DISTINCT ahltaTemp.Name, ahltaTemp.UserName, ahltaTemp.Memory, CONVERT(datetime, ahltaTemp.InstallDate) AS InstallDate, ahltaTemp.Version, ahltaTemp.Ecn, ahltaTemp.CustodianName, ahltaTemp.CustomerName, ahltaTemp.Manufacturer, ahltaTemp.Model FROM
	--AhltaTemp) as temp'
 
	SET @sql = 'SELECT COUNT(*) AS count 
				FROM (SELECT     AhltaTemp.Version AS ver FROM AhltaTemp WHERE Version IS NOT NULL) AS A'
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spAhltaSortTest]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/11/2009
-- Description:	Dynamic SP to grab AHLTA data
-- =============================================
CREATE PROCEDURE [dbo].[spAhltaSortTest]
	-- Add the parameters for the stored procedure here
	@sql varchar(1000),
	@table varchar (1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	EXEC ('SELECT DISTINCT AhltaPC.Name, SMSComputer.UserName, AhltaPC.Memory / 1024 AS Memory, CONVERT(datetime, AhltaPC.InstallDate) AS InstallDate, AhltaPC.Version, DMLSS.Ecn, DMLSS.CustodianName, DMLSS.CustomerName
			FROM ' + @table + ' ' + @sql + ' ORDER BY Name')
END
GO
/****** Object:  StoredProcedure [dbo].[spAhltaSort]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/11/2009
-- Description:	Dynamic SP to grab AHLTA data
-- =============================================
CREATE PROCEDURE [dbo].[spAhltaSort]
	-- Add the parameters for the stored procedure here
	@sql varchar(1000),
	@table varchar (1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	EXEC ('SELECT ahltaTemp.Name, ahltaTemp.UserName, ahltaTemp.Memory, CONVERT(datetime, ahltaTemp.InstallDate) AS InstallDate, ahltaTemp.Version, ahltaTemp.Ecn, ahltaTemp.CustodianName, ahltaTemp.CustomerName, ahltaTemp.Manufacturer, ahltaTemp.Model, ahltaTemp.Citrix
			FROM ' + @table + ' ' + @sql + ' AND ahltaTemp.Version IS NOT NULL ORDER BY Name')
END
GO
/****** Object:  StoredProcedure [dbo].[spAhltaRAM]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/11/2009
-- Description:	Dynamic SP to grab all AHLTA installs with more than 2GB of RAM
-- =============================================
CREATE PROCEDURE [dbo].[spAhltaRAM]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT COUNT(Version) AS RamCount FROM AhltaTemp WHERE Version IS NOT NULL AND (Memory > ''2000'')'
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spAhltaEntry]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: August 11, 2009
-- Description:	Stored Proc to grab data for DMLSS entry
-- =============================================
CREATE PROCEDURE [dbo].[spAhltaEntry]
	-- Add the parameters for the stored procedure here
	@criteria varchar(1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(2000)

    -- Insert statements for procedure here
	SET @sql = 'SELECT DISTINCT AhltaPC.Name, SMSComputer.UserName, AhltaPC.Memory / 1024 AS Memory, CONVERT(datetime, AhltaPC.InstallDate) AS InstallDate, AhltaPC.Version, DMLSS.Ecn, DMLSS.CustodianName, DMLSS.CustomerName, SMSComputer.Manufacturer, SMSComputer.Model, SMSComputer.Description, SMSComputer.InstanceKey, SMSComputer.MachineID, SMSComputer.Domain, SMSComputer.NumberOfProcessors, SMSComputer.Roles, SMSComputer.Status, SMSComputer.SystemType, DMLSS.MfrSerialNo, DMLSS.NameplateModel, DMLSS.MedicalEquipmentMeAcqCostQty, CONVERT(VARCHAR(11),DMLSS.AcqDate,113) AS AcqDate, DMLSS.ItemID, DMLSS.Nomenclature, DMLSS.LifeExp, DMLSS.Manufacturer AS DMLSSManufacturer, DMLSS.CommonModel, DMLSS.EquipmentLocation, DMLSS.Ownership, DMLSS.MaintAct, DMLSS.MtfOrgNm, DMLSS.CustomerId
			FROM AhltaPC INNER JOIN SMSComputer ON SMSComputer.Name = AhltaPC.Name LEFT OUTER JOIN DMLSS ON SMSComputer.Name5 = DMLSS.Ecn5 OR RIGHT(AhltaPC.Name, 7) = DMLSS.MfrSerialNo LEFT OUTER JOIN Nomenclature on DMLSS.Nomenclature = Nomenclature.Nomenclature WHERE SMSComputer.Name = ' + QuoteName(@criteria, '''') + ' ORDER BY Name'
	EXEC (@sql)
END
GO
/****** Object:  StoredProcedure [dbo].[spAhltaCount]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/11/2009
-- Description:	Dynamic SP to grap AHLTA and Citrix verison counts
-- =============================================
CREATE PROCEDURE [dbo].[spAhltaCount] 
	-- Add the parameters for the stored procedure here
	@table nvarchar(1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	EXEC ('SELECT     DISTINCT ver, COUNT(*) AS Counter
FROM         (SELECT     AhltaTemp.Version AS ver FROM ' + @table + ' WHERE Version IS NOT NULL) AS A
GROUP BY ver
ORDER BY Counter DESC, ver')
END
GO
/****** Object:  StoredProcedure [dbo].[spCreate3161TempItemsTable]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spCreate3161TempItemsTable]
	(@suffix VARCHAR(40))  
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Temp_Form3161Items_' + @suffix + ']') AND type in (N'U'))
    CREATE TABLE [dbo].[#TempForm3161Items + @suffix](
	    [ItemId] [int] IDENTITY(0,1) NOT NULL,
    	[InstanceId] [int] NOT NULL,
	    [ItemNoA] [varchar](255) NULL,
	    [StockNo] [char](13) NULL,
	    [ECN] [char](6) NULL,
	    [Nomenclature] [varchar](255) NULL,
	    [MfrSerialNumber] [varchar](255) NULL,
	    [ItemDescription] [varchar](255) NULL,
	    [UnitOfIssue] [varchar](255) NULL,
	    [Quantity] [int] NULL,
	    [Code] [varchar](255) NULL,
	    [SupplyAction] [varchar](255) NULL,
	    [UnitPrice] [money] NULL,
	    [TotalCost] [money] NULL,
	    [PostedDate] [datetime] NULL,
	    [PostedBy] [varchar](255) NULL,
	    [ItemStatus] [int] NULL,
	    [pageCount] [int] NULL,
	    [pageOfPages] [int] NULL)
END
GO
/****** Object:  StoredProcedure [dbo].[asp_GetDMLSS_ECN_Info]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: March 16, 2010 1:08 PM
-- Description:	Get ECN data from scan to populate website
-- =============================================
CREATE PROCEDURE [dbo].[asp_GetDMLSS_ECN_Info]
	-- Add the parameters for the stored procedure here
	@ecn varchar(255)
AS
	/* SET NOCOUNT ON */
	RETURN

BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)
	
-- CONVERT(VARCHAR(11),TimeKey,113) AS TimeKey 

    -- Insert statements for procedure here
	SET @sql = 'SELECT * 
		FROM DMLSS 
		WHERE ECN = ' + QuoteName(@ecn, '''') + ''
	EXEC (@sql)
END
GO
/****** Object:  Table [dbo].[AppLog_Systems]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AppLog_Systems](
	[AppID] [int] IDENTITY(1,1) NOT NULL,
	[AppComputer] [nvarchar](50) NOT NULL,
	[AppUser] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_AppLog_Systems] PRIMARY KEY CLUSTERED 
(
	[AppID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AppLog_StandardApps]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[AppLog_StandardApps](
	[AppName] [varchar](255) NOT NULL,
	[Clinical] [bit] NULL,
	[Admin] [bit] NULL,
	[Xp] [bit] NULL,
	[Win7] [bit] NULL,
	[Track] [bit] NULL,
 CONSTRAINT [PK_AppLog_StandardApps] PRIMARY KEY CLUSTERED 
(
	[AppName] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[AppLog_Applications]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AppLog_Applications](
	[AppID] [int] NOT NULL,
	[AppOs] [nvarchar](255) NULL,
	[AppName] [nvarchar](255) NULL,
	[FileDate] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AppLog_ApplicationDef]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[AppLog_ApplicationDef](
	[AppName] [varchar](255) NOT NULL,
	[Track] [bit] NULL,
 CONSTRAINT [PK_AppLog_ApplicationDef] PRIMARY KEY CLUSTERED 
(
	[AppName] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[App_Systems]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[App_Systems](
	[AppID] [int] IDENTITY(1,1) NOT NULL,
	[AppComputer] [nvarchar](50) NOT NULL,
	[AppUser] [nvarchar](50) NOT NULL,
 CONSTRAINT [PK_App_Systems] PRIMARY KEY CLUSTERED 
(
	[AppID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[App_Applications]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[App_Applications](
	[AppID] [int] NOT NULL,
	[AppOs] [nvarchar](255) NULL,
	[AppName] [nvarchar](255) NULL,
	[FileDate] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AllwAHLTA]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AllwAHLTA](
	[ComputerName] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Alias]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Alias](
	[Alias] [varchar](40) NULL,
	[Manufacturer] [varchar](40) NULL,
	[AliasStatus] [bit] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[AhltaVersion]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[AhltaVersion](
	[ARP_Version] [varchar](50) NOT NULL,
	[AHLTA_Version] [varchar](50) NOT NULL,
	[Build] [varchar](50) NULL,
 CONSTRAINT [PK_AhltaVersion] PRIMARY KEY CLUSTERED 
(
	[ARP_Version] ASC,
	[AHLTA_Version] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ahltaTemp]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ahltaTemp](
	[Name] [varchar](64) NULL,
	[MachineID] [int] NULL,
	[UserName] [varchar](255) NULL,
	[Memory] [int] NULL,
	[InstallDate] [datetime] NULL,
	[Version] [varchar](40) NULL,
	[Ecn] [nvarchar](255) NULL,
	[CustodianName] [nvarchar](255) NULL,
	[CustomerName] [nvarchar](255) NULL,
	[Manufacturer] [varchar](40) NULL,
	[Model] [varchar](40) NULL,
	[Citrix] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[AhltaPC]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[AhltaPC](
	[Name] [varchar](64) NULL,
	[MachineID] [int] NULL,
	[Manufacturer] [varchar](40) NULL,
	[Model] [varchar](36) NULL,
	[Memory] [int] NULL,
	[Program] [varchar](255) NULL,
	[InstallDate] [varchar](40) NULL,
	[Version] [varchar](40) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[AHLTA_TNGComputers]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AHLTA_TNGComputers](
	[PCName] [nvarchar](255) NULL,
	[Resource Type] [nvarchar](255) NULL,
	[Domain] [nvarchar](255) NULL,
	[Site Code] [nvarchar](255) NULL,
	[Client] [nvarchar](255) NULL,
	[Approved] [nvarchar](255) NULL,
	[Assigned] [nvarchar](255) NULL,
	[Blocked] [nvarchar](255) NULL,
	[Client Type] [nvarchar](255) NULL,
	[Obsolete] [nvarchar](255) NULL,
	[Active] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[AHLTA_ClinicPCs]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[AHLTA_ClinicPCs](
	[Computer Name] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Form2062Instances]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Form2062Instances](
	[InstanceId] [int] IDENTITY(0,1) NOT NULL,
	[CreatedDate] [datetime] NOT NULL,
	[FromWho] [varchar](255) NULL,
	[ToWho] [varchar](255) NULL,
	[HandReceiptNo] [varchar](255) NULL,
	[EndItemStockNo] [varchar](255) NULL,
	[EndItemDescription] [varchar](255) NULL,
	[PublicationNo] [varchar](255) NULL,
	[PublicationDate] [varchar](255) NULL,
	[Quantity] [int] NOT NULL,
	[InstanceStatus] [int] NULL,
	[InstancePageCount] [int] NULL,
	[UserGUID] [varchar](50) NOT NULL,
 CONSTRAINT [PK_Form2060Instances] PRIMARY KEY CLUSTERED 
(
	[InstanceId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  UserDefinedFunction [dbo].[fnParseInt]    Script Date: 10/05/2018 13:10:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 20, 2009
-- Description:	Function to parse integers
-- =============================================
CREATE FUNCTION [dbo].[fnParseInt] (@StrVal AS VARCHAR(max))
 
RETURNS VARCHAR(max) 
AS
BEGIN 
WHILE PATINDEX('%[^0-9]%', @StrVal) > 0
            SET @StrVal = REPLACE(@StrVal,
                SUBSTRING(@StrVal,PATINDEX('%[^0-9]%', @StrVal),1),'')
      RETURN @StrVal
END
GO
/****** Object:  UserDefinedFunction [dbo].[fnc_NormalToFiscalYear]    Script Date: 10/05/2018 13:10:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[fnc_NormalToFiscalYear](
        @AsOf                   DATETIME
)
RETURNS INT
AS
BEGIN

        DECLARE @Answer         INT

        -- You define what you want here (September being your changeover month)
        IF ( MONTH(@AsOf) < 4 )
                SET @Answer = YEAR(@AsOf) + 1
        ELSE
                SET @Answer = YEAR(@AsOf)


        RETURN @Answer

END
GO
/****** Object:  Table [dbo].[facility]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[facility](
	[facilityID] [varchar](50) NULL,
	[facilityName] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[EssentrisPC]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[EssentrisPC](
	[Name] [varchar](64) NULL,
	[MachineID] [int] NULL,
	[Manufacturer] [varchar](40) NULL,
	[Model] [varchar](40) NULL,
	[Memory] [int] NULL,
	[Program] [varchar](255) NULL,
	[InstallDate] [varchar](40) NULL,
	[Version] [varchar](40) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DmlssSccm]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DmlssSccm](
	[Ecn] [varchar](10) NULL,
	[Ecn5] [char](5) NULL,
	[Manufacturer] [varchar](50) NULL,
	[Model] [varchar](50) NULL,
	[Nomenclature] [varchar](50) NULL,
	[Custodian] [varchar](50) NULL,
	[Name] [varchar](64) NULL,
	[Name5] [char](5) NULL,
	[SccmManufacturer] [varchar](40) NULL,
	[SccmModel] [varchar](36) NULL,
	[UserName] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DmlssData]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[DmlssData](
	[Ecn] [varchar](10) NULL,
	[Ecn5] [char](5) NULL,
	[Manufacturer] [varchar](50) NULL,
	[NameplateModel] [varchar](50) NULL,
	[Nomenclature] [varchar](50) NULL,
	[CustodianName] [varchar](50) NULL,
	[CustomerName] [varchar](50) NULL,
	[CustomerId] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DMLSS_TEMP]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DMLSS_TEMP](
	[Ecn5] [nvarchar](255) NULL,
	[MedicalEquipmentMeId] [nvarchar](255) NULL,
	[Ecn] [nvarchar](255) NULL,
	[MedicalEquipmentDeviceClsCode] [nvarchar](255) NULL,
	[MedicalEquipmentDeviceCd] [nvarchar](255) NULL,
	[MedicalEquipmentManufOrgSerial] [nvarchar](255) NULL,
	[MfrSerialNo] [nvarchar](255) NULL,
	[MedicalEquipmentSystemTypeCd] [nvarchar](255) NULL,
	[MedicalEquipmentDeleteInd] [nvarchar](255) NULL,
	[MedicalEquipmentManufMdlSerId] [nvarchar](255) NULL,
	[NameplateModel] [nvarchar](255) NULL,
	[MedicalEquipmentEqpmtOwnerTypCd] [nvarchar](255) NULL,
	[MedicalEquipmentMaSerial] [nvarchar](255) NULL,
	[MedicalEquipmentMaintSrcOrgSer] [nvarchar](255) NULL,
	[MedicalEquipmentUsmantSrcOrgSer] [nvarchar](255) NULL,
	[MedicalEquipmentOtherGovtSosSer] [nvarchar](255) NULL,
	[MedicalEquipmentPltPermLocSer] [nvarchar](255) NULL,
	[MedicalEquipmentMeWrmPeactmCd] [nvarchar](255) NULL,
	[MedicalEquipmentMeAcqCostQty] [money] NULL,
	[MedicalEquipmentMeDiscountAmt] [money] NULL,
	[MedicalEquipmentMeTradeInAmt] [money] NULL,
	[MedicalEquipmentMeTransportAmt] [money] NULL,
	[MedicalEquipmentMeInstalltionAmt] [money] NULL,
	[MedicalEquipmentMeOtherMiscAmt] [money] NULL,
	[MedicalEquipmentMeUpgradeCstAmt] [money] NULL,
	[AcqDate] [datetime] NULL,
	[MedicalEquipmentCustomerOrgSer] [nvarchar](255) NULL,
	[MedicalEquipmentMeOnloanCd] [nvarchar](255) NULL,
	[ItemId] [nvarchar](255) NULL,
	[EquipItemEiAccntblCd] [nvarchar](255) NULL,
	[EquipItemEiMaintReqrCd] [nvarchar](255) NULL,
	[ContractServiceContractorSosSer] [nvarchar](255) NULL,
	[Nomenclature] [nvarchar](255) NULL,
	[LifeExp] [nvarchar](255) NULL,
	[Manufacturer] [nvarchar](255) NULL,
	[CommonModel] [nvarchar](255) NULL,
	[EquipmentLocation] [nvarchar](255) NULL,
	[Ownership] [nvarchar](255) NULL,
	[MaintAct] [nvarchar](255) NULL,
	[SchedTeam] [nvarchar](255) NULL,
	[UnschedTeam] [nvarchar](255) NULL,
	[Contractor] [nvarchar](255) NULL,
	[OrgViewMtfSerial] [nvarchar](255) NULL,
	[MtfOrgId] [nvarchar](255) NULL,
	[MtfOrgNm] [nvarchar](255) NULL,
	[OrgViewCustOrgSer] [nvarchar](255) NULL,
	[CustomerId] [nvarchar](255) NULL,
	[CustomerName] [nvarchar](255) NULL,
	[CustodianViewCustdnPocSer] [nvarchar](255) NULL,
	[CustodianName] [nvarchar](255) NULL,
	[AssemblageOrgSerial] [nvarchar](255) NULL,
	[AssemblageOrgNm] [nvarchar](255) NULL,
	[AssemblageDesc] [nvarchar](255) NULL,
	[AssemblageNo] [nvarchar](255) NULL,
	[AssemblageOrgId] [nvarchar](255) NULL,
	[AcqCostLow] [money] NULL,
	[AcqCostHigh] [money] NULL,
	[RunDate] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DMLSS_org]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DMLSS_org](
	[Ecn5] [nvarchar](10) NULL,
	[MedicalEquipmentMeId] [nvarchar](50) NULL,
	[Ecn] [nvarchar](10) NULL,
	[MedicalEquipmentDeviceClsCode] [nvarchar](90) NULL,
	[MedicalEquipmentDeviceCd] [nvarchar](50) NULL,
	[MedicalEquipmentManufOrgSerial] [nvarchar](50) NULL,
	[MfrSerialNo] [nvarchar](50) NULL,
	[MedicalEquipmentSystemTypeCd] [nvarchar](50) NULL,
	[MedicalEquipmentDeleteInd] [nvarchar](50) NULL,
	[MedicalEquipmentManufMdlSerId] [nvarchar](50) NULL,
	[NameplateModel] [nvarchar](50) NULL,
	[MedicalEquipmentEqpmtOwnerTypCd] [int] NULL,
	[MedicalEquipmentMaSerial] [int] NULL,
	[MedicalEquipmentMaintSrcOrgSer] [int] NULL,
	[MedicalEquipmentUsmantSrcOrgSer] [int] NULL,
	[MedicalEquipmentOtherGovtSosSer] [nvarchar](50) NULL,
	[MedicalEquipmentPltPermLocSer] [nvarchar](50) NULL,
	[MedicalEquipmentMeWrmPeactmCd] [nvarchar](50) NULL,
	[MedicalEquipmentMeAcqCostQty] [float] NULL,
	[MedicalEquipmentMeDiscountAmt] [float] NULL,
	[MedicalEquipmentMeTradeInAmt] [float] NULL,
	[MedicalEquipmentMeTransportAmt] [float] NULL,
	[MedicalEquipmentMeInstalltionAmt] [float] NULL,
	[MedicalEquipmentMeOtherMiscAmt] [float] NULL,
	[MedicalEquipmentMeUpgradeCstAmt] [nvarchar](50) NULL,
	[AcqDate] [datetime] NULL,
	[MedicalEquipmentCustomerOrgSer] [nvarchar](50) NULL,
	[MedicalEquipmentMeOnloanCd] [nvarchar](50) NULL,
	[ItemId] [nvarchar](50) NULL,
	[EquipItemEiAccntblCd] [nvarchar](50) NULL,
	[EquipItemEiMaintReqrCd] [nvarchar](50) NULL,
	[ContractServiceContractorSosSer] [nvarchar](50) NULL,
	[Nomenclature] [nvarchar](50) NULL,
	[LifeExp] [nvarchar](50) NULL,
	[Manufacturer] [nvarchar](50) NULL,
	[CommonModel] [nvarchar](50) NULL,
	[EquipmentLocation] [nvarchar](50) NULL,
	[Ownership] [nvarchar](50) NULL,
	[MaintAct] [nvarchar](50) NULL,
	[SchedTeam] [nvarchar](50) NULL,
	[UnschedTeam] [nvarchar](50) NULL,
	[Contractor] [nvarchar](50) NULL,
	[OrgViewMtfSerial] [nvarchar](50) NULL,
	[MtfOrgId] [nvarchar](50) NULL,
	[MtfOrgNm] [nvarchar](50) NULL,
	[OrgViewCustOrgSer] [nvarchar](50) NULL,
	[CustomerId] [nvarchar](50) NULL,
	[CustomerName] [nvarchar](50) NULL,
	[CustodianViewCustdnPocSer] [nvarchar](50) NULL,
	[CustodianName] [nvarchar](50) NULL,
	[AssemblageOrgSerial] [nvarchar](50) NULL,
	[AssemblageOrgNm] [nvarchar](50) NULL,
	[AssemblageDesc] [nvarchar](50) NULL,
	[AssemblageNo] [nvarchar](50) NULL,
	[AssemblageOrgId] [nvarchar](50) NULL,
	[AcqCostLow] [float] NULL,
	[AcqCostHigh] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DMLSS_old]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DMLSS_old](
	[Ecn5] [nvarchar](255) NULL,
	[MedicalEquipmentMeId] [nvarchar](255) NULL,
	[Ecn] [nvarchar](255) NULL,
	[MedicalEquipmentDeviceClsCode] [nvarchar](255) NULL,
	[MedicalEquipmentDeviceCd] [nvarchar](255) NULL,
	[MedicalEquipmentManufOrgSerial] [nvarchar](255) NULL,
	[MfrSerialNo] [nvarchar](255) NULL,
	[MedicalEquipmentSystemTypeCd] [nvarchar](255) NULL,
	[MedicalEquipmentDeleteInd] [nvarchar](255) NULL,
	[MedicalEquipmentManufMdlSerId] [nvarchar](255) NULL,
	[NameplateModel] [nvarchar](255) NULL,
	[MedicalEquipmentEqpmtOwnerTypCd] [int] NULL,
	[MedicalEquipmentMaSerial] [int] NULL,
	[MedicalEquipmentMaintSrcOrgSer] [int] NULL,
	[MedicalEquipmentUsmantSrcOrgSer] [int] NULL,
	[MedicalEquipmentOtherGovtSosSer] [nvarchar](255) NULL,
	[MedicalEquipmentPltPermLocSer] [nvarchar](255) NULL,
	[MedicalEquipmentMeWrmPeactmCd] [nvarchar](255) NULL,
	[MedicalEquipmentMeAcqCostQty] [float] NULL,
	[MedicalEquipmentMeDiscountAmt] [float] NULL,
	[MedicalEquipmentMeTradeInAmt] [float] NULL,
	[MedicalEquipmentMeTransportAmt] [float] NULL,
	[MedicalEquipmentMeInstalltionAmt] [float] NULL,
	[MedicalEquipmentMeOtherMiscAmt] [float] NULL,
	[MedicalEquipmentMeUpgradeCstAmt] [nvarchar](255) NULL,
	[AcqDate] [datetime] NULL,
	[MedicalEquipmentCustomerOrgSer] [nvarchar](255) NULL,
	[MedicalEquipmentMeOnloanCd] [nvarchar](255) NULL,
	[ItemId] [nvarchar](255) NULL,
	[EquipItemEiAccntblCd] [nvarchar](255) NULL,
	[EquipItemEiMaintReqrCd] [nvarchar](255) NULL,
	[ContractServiceContractorSosSer] [nvarchar](255) NULL,
	[Nomenclature] [nvarchar](255) NULL,
	[LifeExp] [nvarchar](255) NULL,
	[Manufacturer] [nvarchar](255) NULL,
	[CommonModel] [nvarchar](255) NULL,
	[EquipmentLocation] [nvarchar](255) NULL,
	[Ownership] [nvarchar](255) NULL,
	[MaintAct] [nvarchar](255) NULL,
	[SchedTeam] [nvarchar](255) NULL,
	[UnschedTeam] [nvarchar](255) NULL,
	[Contractor] [nvarchar](255) NULL,
	[OrgViewMtfSerial] [nvarchar](255) NULL,
	[MtfOrgId] [nvarchar](255) NULL,
	[MtfOrgNm] [nvarchar](255) NULL,
	[OrgViewCustOrgSer] [nvarchar](255) NULL,
	[CustomerId] [nvarchar](255) NULL,
	[CustomerName] [nvarchar](255) NULL,
	[CustodianViewCustdnPocSer] [nvarchar](255) NULL,
	[CustodianName] [nvarchar](255) NULL,
	[AssemblageOrgSerial] [nvarchar](255) NULL,
	[AssemblageOrgNm] [nvarchar](255) NULL,
	[AssemblageDesc] [nvarchar](255) NULL,
	[AssemblageNo] [nvarchar](255) NULL,
	[AssemblageOrgId] [nvarchar](255) NULL,
	[AcqCostLow] [float] NULL,
	[AcqCostHigh] [float] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[DMLSS]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[DMLSS](
	[Ecn5] [nvarchar](255) NULL,
	[MedicalEquipmentMeId] [nvarchar](255) NULL,
	[Ecn] [nvarchar](255) NULL,
	[MedicalEquipmentDeviceClsCode] [nvarchar](255) NULL,
	[MedicalEquipmentDeviceCd] [nvarchar](255) NULL,
	[MedicalEquipmentManufOrgSerial] [nvarchar](255) NULL,
	[MfrSerialNo] [nvarchar](255) NULL,
	[MedicalEquipmentSystemTypeCd] [nvarchar](255) NULL,
	[MedicalEquipmentDeleteInd] [nvarchar](255) NULL,
	[MedicalEquipmentManufMdlSerId] [nvarchar](255) NULL,
	[NameplateModel] [nvarchar](255) NULL,
	[MedicalEquipmentEqpmtOwnerTypCd] [nvarchar](255) NULL,
	[MedicalEquipmentMaSerial] [nvarchar](255) NULL,
	[MedicalEquipmentMaintSrcOrgSer] [nvarchar](255) NULL,
	[MedicalEquipmentUsmantSrcOrgSer] [nvarchar](255) NULL,
	[MedicalEquipmentOtherGovtSosSer] [nvarchar](255) NULL,
	[MedicalEquipmentPltPermLocSer] [nvarchar](255) NULL,
	[MedicalEquipmentMeWrmPeactmCd] [nvarchar](255) NULL,
	[MedicalEquipmentMeAcqCostQty] [nvarchar](255) NULL,
	[MedicalEquipmentMeDiscountAmt] [money] NULL,
	[MedicalEquipmentMeTradeInAmt] [money] NULL,
	[MedicalEquipmentMeTransportAmt] [money] NULL,
	[MedicalEquipmentMeInstalltionAmt] [money] NULL,
	[MedicalEquipmentMeOtherMiscAmt] [money] NULL,
	[MedicalEquipmentMeUpgradeCstAmt] [money] NULL,
	[AcqDate] [datetime] NULL,
	[MedicalEquipmentCustomerOrgSer] [nvarchar](255) NULL,
	[MedicalEquipmentMeOnloanCd] [nvarchar](255) NULL,
	[ItemId] [nvarchar](255) NULL,
	[EquipItemEiAccntblCd] [nvarchar](255) NULL,
	[EquipItemEiMaintReqrCd] [nvarchar](255) NULL,
	[ContractServiceContractorSosSer] [nvarchar](255) NULL,
	[Nomenclature] [nvarchar](255) NULL,
	[LifeExp] [nvarchar](255) NULL,
	[Manufacturer] [nvarchar](255) NULL,
	[CommonModel] [nvarchar](255) NULL,
	[EquipmentLocation] [nvarchar](255) NULL,
	[Ownership] [nvarchar](255) NULL,
	[MaintAct] [nvarchar](255) NULL,
	[SchedTeam] [nvarchar](255) NULL,
	[UnschedTeam] [nvarchar](255) NULL,
	[Contractor] [nvarchar](255) NULL,
	[OrgViewMtfSerial] [nvarchar](255) NULL,
	[MtfOrgId] [nvarchar](255) NULL,
	[MtfOrgNm] [nvarchar](255) NULL,
	[OrgViewCustOrgSer] [nvarchar](255) NULL,
	[CustomerId] [nvarchar](255) NULL,
	[CustomerName] [nvarchar](255) NULL,
	[CustodianViewCustdnPocSer] [nvarchar](255) NULL,
	[CustodianName] [nvarchar](255) NULL,
	[AssemblageOrgSerial] [nvarchar](255) NULL,
	[AssemblageOrgNm] [nvarchar](255) NULL,
	[AssemblageDesc] [nvarchar](255) NULL,
	[AssemblageNo] [nvarchar](255) NULL,
	[AssemblageOrgId] [nvarchar](255) NULL,
	[AcqCostLow] [money] NULL,
	[AcqCostHigh] [money] NULL,
	[RunDate] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SoftwareHitCounter]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SoftwareHitCounter](
	[RowID] [int] IDENTITY(1,1) NOT NULL,
	[UserName] [nvarchar](150) NULL,
	[PageURL] [nvarchar](150) NULL,
	[DateTime] [datetime] NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SoftwareAccess]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SoftwareAccess](
	[UserName] [nvarchar](150) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Software]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Software](
	[COMPUTERNAME] [nvarchar](255) NULL,
	[USERNAME] [nvarchar](255) NULL,
	[APPLICATION] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SMSProgram]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SMSProgram](
	[MachineID] [int] NOT NULL,
	[InstanceKey] [int] NOT NULL,
	[RevisionID] [int] NULL,
	[AgentID] [int] NULL,
	[TimeKey] [datetime] NULL,
	[ProdID] [varchar](112) NULL,
	[DisplayName] [varchar](255) NULL,
	[InstallDate] [varchar](40) NULL,
	[Publisher] [varchar](80) NULL,
	[Version] [varchar](40) NULL,
	[Comments] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SMSPrinter]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SMSPrinter](
	[MachineID] [int] NOT NULL,
	[InstanceKey] [int] NOT NULL,
	[TimeKey] [datetime] NOT NULL,
	[RevisionID] [int] NOT NULL,
	[AgentID] [int] NULL,
	[Caption] [varchar](144) NULL,
	[DeviceID] [varchar](144) NULL,
	[Local] [int] NULL,
	[PortName] [varchar](88) NULL,
 CONSTRAINT [PK_SMSPrinter_1] PRIMARY KEY CLUSTERED 
(
	[MachineID] ASC,
	[InstanceKey] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SMSPrefix]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SMSPrefix](
	[SMSPrefix] [nvarchar](50) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SMSOperating_System]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SMSOperating_System](
	[AgentID] [int] NULL,
	[BootDevice] [varchar](56) NULL,
	[BuildNumber] [varchar](16) NULL,
	[Caption] [varchar](128) NULL,
	[CountryCode] [varchar](16) NULL,
	[CSDVersion] [varchar](24) NULL,
	[Description] [varchar](255) NULL,
	[FreePhysicalMemory] [int] NULL,
	[FreeVirtualMemory] [int] NULL,
	[InstallDate] [datetime] NULL,
	[InstanceKey] [int] NOT NULL,
	[LastBootUpTime] [datetime] NULL,
	[Locale] [varchar](16) NULL,
	[MachineID] [int] NOT NULL,
	[Manufacturer] [varchar](64) NULL,
	[MaxNumberOfProcesses] [varchar](16) NULL,
	[Name] [varchar](128) NULL,
	[OSLanguage] [int] NULL,
	[RevisionID] [int] NULL,
	[SystemDirectory] [varchar](64) NULL,
	[TimeKey] [datetime] NULL,
	[TotalSwapSpaceSize] [int] NULL,
	[TotalVirtualMemorySize] [int] NULL,
	[TotalVisibleMemorySize] [int] NULL,
	[Version] [varchar](16) NULL,
	[WindowsDirectory] [varchar](64) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SMSComputer]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SMSComputer](
	[AgentID] [int] NULL,
	[CurrentTimeZone] [int] NULL,
	[Description] [varchar](255) NULL,
	[Domain] [varchar](32) NULL,
	[DomainRole] [int] NULL,
	[InstanceKey] [int] NOT NULL,
	[MachineID] [int] NOT NULL,
	[Manufacturer] [varchar](40) NULL,
	[Model] [varchar](36) NULL,
	[Name] [varchar](64) NULL,
	[NumberOfProcessors] [int] NULL,
	[PauseAfterReset] [varchar](16) NULL,
	[RevisionID] [int] NOT NULL,
	[Roles] [varchar](128) NULL,
	[Status] [varchar](32) NULL,
	[SystemType] [varchar](16) NULL,
	[TimeKey] [datetime] NOT NULL,
	[UserName] [varchar](255) NULL,
	[Name5] [nvarchar](5) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[serverNames]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[serverNames](
	[Name] [varchar](50) NULL,
	[Name5] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  View [dbo].[vwSvrHitCntGrouped]    Script Date: 10/05/2018 13:10:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vwSvrHitCntGrouped]
AS
SELECT     TOP (100) PERCENT COUNT([IP Address]) AS IPCnt, [IP Address]
FROM         dbo.ServerIAVA
GROUP BY [IP Address]
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "ServerIAVA"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vwSvrHitCntGrouped'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vwSvrHitCntGrouped'
GO
/****** Object:  Table [dbo].[SccmCollectionMember]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SccmCollectionMember](
	[SiteId] [varchar](64) NULL,
	[Name] [varchar](255) NULL,
	[MachineId] [int] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SccmCollection]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SccmCollection](
	[SiteId] [varchar](64) NULL,
	[CollectionName] [varchar](255) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SCCM2012PCs]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[SCCM2012PCs](
	[Computer Name] [nvarchar](255) NULL,
	[F2] [nvarchar](255) NULL,
	[F3] [nvarchar](255) NULL,
	[Domain/Workgroup] [nvarchar](255) NULL,
	[ConfigMgr Site Name] [nvarchar](255) NULL,
	[Top Console User] [nvarchar](255) NULL,
	[Operating System] [nvarchar](255) NULL,
	[Service Pack Level] [nvarchar](255) NULL,
	[Serial Number] [nvarchar](255) NULL,
	[Asset Tag] [nvarchar](255) NULL,
	[Manufacturer] [nvarchar](255) NULL,
	[Model] [nvarchar](255) NULL,
	[Memory (KBytes)] [float] NULL,
	[Processor (GHz)] [float] NULL,
	[Total Disk Space (MB)] [float] NULL,
	[F16] [nvarchar](255) NULL,
	[Free Disk Space (MB)] [float] NULL,
	[F18] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SCCM_BIOS]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SCCM_BIOS](
	[MachineID] [int] NULL,
	[SerialNumber] [varchar](56) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[SCCM]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[SCCM](
	[Name] [varchar](64) NULL,
	[Name5] [varchar](5) NULL,
	[UserName] [varchar](255) NULL,
	[Manufacturer] [varchar](40) NULL,
	[Model] [varchar](36) NULL,
	[Domain] [varchar](32) NULL,
	[Caption] [nchar](128) NULL,
	[CustodianName] [varchar](50) NULL,
	[CustomerName] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PrinterLog_Systems]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PrinterLog_Systems](
	[SysID] [int] IDENTITY(1,1) NOT NULL,
	[Computer] [varchar](255) NOT NULL,
	[UserName] [varchar](255) NOT NULL,
 CONSTRAINT [PK_PrinterLog_Systems] PRIMARY KEY CLUSTERED 
(
	[SysID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PrinterLog_PrintersOLD]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PrinterLog_PrintersOLD](
	[SysID] [int] NOT NULL,
	[Port] [varchar](255) NULL,
	[Printer] [varchar](255) NULL,
	[FileDate] [datetime] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PrinterLog_Printersa]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PrinterLog_Printersa](
	[SysID] [int] IDENTITY(1,1) NOT NULL,
	[Computer] [nvarchar](50) NULL,
	[User] [nvarchar](255) NULL,
	[Port] [nvarchar](255) NULL,
	[Network] [nvarchar](50) NULL,
	[Name] [nvarchar](255) NULL,
	[Location] [nvarchar](255) NULL,
	[ServerName] [nvarchar](255) NULL,
	[ShareName] [nvarchar](255) NULL,
	[INAD] [nvarchar](50) NULL,
	[DriverName] [nvarchar](255) NULL,
	[FileDate] [datetime] NOT NULL,
	[LocalTCPIPPort] [nvarchar](25) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PrinterLog_Printers_NameColumn]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PrinterLog_Printers_NameColumn](
	[SysID] [int] IDENTITY(1,1) NOT NULL,
	[Computer] [nvarchar](50) NULL,
	[User] [nvarchar](255) NULL,
	[Port] [nvarchar](255) NULL,
	[Network] [nvarchar](50) NULL,
	[Name] [nvarchar](255) NULL,
	[Location] [nvarchar](255) NULL,
	[ServerName] [nvarchar](255) NULL,
	[ShareName] [nvarchar](255) NULL,
	[INAD] [nvarchar](50) NULL,
	[DriverName] [nvarchar](255) NULL,
	[FileDate] [datetime] NOT NULL,
	[LocalTCPIPPort] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PrinterLog_Printers]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PrinterLog_Printers](
	[SysID] [int] IDENTITY(1,1) NOT NULL,
	[Computer] [nvarchar](50) NULL,
	[User] [nvarchar](255) NULL,
	[Port] [nvarchar](255) NULL,
	[Network] [nvarchar](50) NULL,
	[Printer] [nvarchar](255) NULL,
	[Location] [nvarchar](255) NULL,
	[ServerName] [nvarchar](255) NULL,
	[ShareName] [nvarchar](255) NULL,
	[INAD] [nvarchar](50) NULL,
	[DriverName] [nvarchar](255) NULL,
	[FileDate] [datetime] NOT NULL,
	[LocalTCPIPPort] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[PrinterLog_PrinterManager]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[PrinterLog_PrinterManager](
	[Port] [varchar](255) NOT NULL,
	[Printer] [varchar](255) NOT NULL,
	[PrinterStatus] [bit] NULL,
	[PrinterAlias] [varchar](255) NULL,
	[PrinterComment] [varchar](max) NULL,
 CONSTRAINT [PK_PrinterLog_PrinterManager_1] PRIMARY KEY CLUSTERED 
(
	[Port] ASC,
	[Printer] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[PCRemovalNotice]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[PCRemovalNotice](
	[Hostname] [nvarchar](255) NULL,
	[Last User] [nvarchar](255) NULL,
	[System] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[owssvr$]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[owssvr$](
	[Server/Hardware Name] [nvarchar](255) NULL,
	[Function] [nvarchar](255) NULL,
	[Category] [nvarchar](255) NULL,
	[MSIR #] [nvarchar](255) NULL,
	[MSIR System Description] [nvarchar](255) NULL,
	[System Owner] [nvarchar](255) NULL,
	[Equipment POC] [nvarchar](255) NULL,
	[Functional Manager] [nvarchar](255) NULL,
	[Modified] [datetime] NULL,
	[Modified By] [nvarchar](255) NULL,
	[Virtual Machine] [nvarchar](255) NULL,
	[Virtual Machine Host Server] [nvarchar](255) NULL,
	[Virtual Host] [nvarchar](255) NULL,
	[SN/ST] [nvarchar](255) NULL,
	[ECN] [nvarchar](255) NULL,
	[1E-02 CR Rack Location] [nvarchar](255) NULL,
	[Highest Rack Unit Used] [nvarchar](255) NULL,
	[Rack Space] [float] NULL,
	[Vendor] [nvarchar](255) NULL,
	[Server Model] [nvarchar](255) NULL,
	[Operating System] [nvarchar](255) NULL,
	[Browser] [nvarchar](255) NULL,
	[IP Address(s)] [nvarchar](255) NULL,
	[# Processors] [nvarchar](255) NULL,
	[RAM] [nvarchar](255) NULL,
	[# NICs] [nvarchar](255) NULL,
	[# NICs Enabled] [nvarchar](255) NULL,
	[NIC Speed] [nvarchar](255) NULL,
	[Warranty Expiration] [datetime] NULL,
	[Warranty Type] [nvarchar](255) NULL,
	[SCAP Scan Date] [datetime] NULL,
	[SCAP Scan Results] [nvarchar](255) NULL,
	[SCAP Scan Exempt] [nvarchar](255) NULL,
	[SCAP Scan Comments] [nvarchar](255) NULL,
	[SCAP Waiver Submitted] [nvarchar](255) NULL,
	[SCAP Folder] [nvarchar](255) NULL,
	[Power - Power Supplies Active] [float] NULL,
	[Power - Amp Max Req] [float] NULL,
	[Power - Voltage] [nvarchar](255) NULL,
	[Remarks] [nvarchar](255) NULL,
	[Last IAVA Remediation Date] [datetime] NULL,
	[IAVA Notes] [nvarchar](255) NULL,
	[Lifecycle Date] [nvarchar](255) NULL,
	[Logical Unit] [nvarchar](255) NULL,
	[Criticality Level] [nvarchar](255) NULL,
	[Created] [datetime] NULL,
	[Created By] [nvarchar](255) NULL,
	[Content Type] [nvarchar](255) NULL,
	[Item Type] [nvarchar](255) NULL,
	[Path] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  StoredProcedure [dbo].[spResetPSTDataTEST]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 9-18-2013
-- Description:	Reset tables for new data import
-- =============================================
CREATE PROCEDURE [dbo].[spResetPSTDataTEST]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DELETE	FROM	OutLookPSTs_TEST
		
END
GO
/****** Object:  StoredProcedure [dbo].[spResetPSTData]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 9-18-2013
-- Description:	Reset tables for new data import
-- =============================================
CREATE PROCEDURE [dbo].[spResetPSTData]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DELETE	FROM	OutLookPSTs
		
END
GO
/****** Object:  Table [dbo].[Outlook_User_Emails]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Outlook_User_Emails](
	[LoginName] [varchar](100) NOT NULL,
	[email] [varchar](100) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[OLE DB Destination]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[OLE DB Destination](
	[MachineID] [int] NULL,
	[InstanceKey] [int] NULL,
	[RevisionID] [int] NULL,
	[AgentID] [int] NULL,
	[TimeKey] [datetime] NULL,
	[Description] [varchar](255) NULL,
	[Manufacturer] [varchar](255) NULL,
	[Name] [varchar](64) NULL,
	[ReleaseDate] [datetime] NULL,
	[Version] [varchar](24) NULL,
	[SerialNumber] [varchar](56) NULL,
	[SMBIOSBIOSVersion] [varchar](40) NULL,
	[SoftwareElementID] [varchar](56) NULL,
	[SoftwareElementState] [int] NULL,
	[TargetOperatingSystem] [int] NULL,
	[rowversion] [binary](8) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Old_n_New]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Old_n_New](
	[NuTag] [nvarchar](255) NULL,
	[PCname] [nvarchar](255) NULL,
	[Type] [nvarchar](255) NULL,
	[OrgUnit] [nvarchar](255) NULL,
	[Manu] [nvarchar](255) NULL,
	[Location] [nvarchar](255) NULL,
	[IPAddress] [nvarchar](255) NULL,
	[MAC] [nvarchar](255) NULL,
	[OS] [nvarchar](255) NULL,
	[SvD] [nvarchar](255) NULL,
	[NuName] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[NuPCNames]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[NuPCNames](
	[PCname] [nvarchar](255) NULL,
	[Type] [nvarchar](255) NULL,
	[OrgUnit] [nvarchar](255) NULL,
	[Manu] [nvarchar](255) NULL,
	[Location] [nvarchar](255) NULL,
	[IPAddress] [nvarchar](255) NULL,
	[MAC] [nvarchar](255) NULL,
	[OS] [nvarchar](255) NULL,
	[F9] [nvarchar](255) NULL,
	[F10] [nvarchar](255) NULL
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[nomenclature]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[nomenclature](
	[Nomenclature] [nvarchar](255) NOT NULL,
	[status] [tinyint] NULL,
 CONSTRAINT [PK_nomenclature] PRIMARY KEY CLUSTERED 
(
	[Nomenclature] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[navigationStatus]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[navigationStatus](
	[UserGUID] [nvarchar](50) NOT NULL,
	[currentTemp2062ID] [int] NULL,
	[prev2062TempID] [int] NULL,
	[currentTemp3161ID] [int] NULL,
	[prev3161TempID] [int] NULL,
	[current2062ID] [int] NULL,
	[current3161ID] [int] NULL,
	[prev2062ID] [int] NULL,
	[prev3161ID] [int] NULL,
 CONSTRAINT [PK_navigationStatus] PRIMARY KEY CLUSTERED 
(
	[UserGUID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[modelStatus]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[modelStatus](
	[model] [varchar](100) NULL,
	[modelStatus] [bit] NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ModelAlias]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[ModelAlias](
	[Model] [varchar](50) NOT NULL,
	[ModelAlias] [varchar](50) NOT NULL,
	[Manufacturer] [varchar](40) NOT NULL,
	[ModelStatus] [int] NULL,
	[AliasStatus] [bit] NULL,
	[LifecycleStatus] [bit] NULL,
	[Notes] [varchar](50) NULL,
 CONSTRAINT [PK_ModelAlias] PRIMARY KEY CLUSTERED 
(
	[Model] ASC,
	[ModelAlias] ASC,
	[Manufacturer] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[MAJSagar]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[MAJSagar](
	[RowID] [int] IDENTITY(1,1) NOT NULL,
	[ECN] [nvarchar](255) NULL,
	[ECN5] [nvarchar](255) NULL,
	[NamePlateModel] [nvarchar](255) NULL,
	[Nomenclature] [nvarchar](255) NULL,
	[AcqDate] [datetime] NULL,
	[AcqCost] [money] NULL,
	[CustodianName] [nvarchar](255) NULL,
	[CustomerName] [nvarchar](255) NULL,
	[Warranty] [nvarchar](255) NULL,
	[Funding] [nvarchar](255) NULL,
 CONSTRAINT [PK_MAJSagar] PRIMARY KEY CLUSTERED 
(
	[RowID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[LifecycleDmlssSccmNew]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[LifecycleDmlssSccmNew](
	[Ecn] [varchar](50) NULL,
	[Name] [varchar](50) NULL,
	[Alias] [varchar](100) NULL,
	[ModelAlias] [varchar](100) NULL,
	[Manufacturer] [varchar](100) NULL,
	[NameplateModel] [varchar](100) NULL,
	[Manufacturer2] [varchar](100) NULL,
	[Model] [varchar](100) NULL,
	[OperatingSystem] [varchar](100) NULL,
	[SerialNumber] [varchar](100) NULL,
	[Nomenclature] [varchar](100) NULL,
	[UserName] [varchar](100) NULL,
	[CustodianName] [varchar](100) NULL,
	[CustomerID] [varchar](50) NULL,
	[CustomerName] [varchar](100) NULL,
	[CustomerName2] [varchar](100) NULL,
	[CustodianPhone] [varchar](50) NULL,
	[Active] [varchar](50) NULL,
	[Lifecycle] [varchar](50) NULL,
	[Ahlta] [varchar](50) NULL,
	[Listed] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[LifecycleDmlssSccm]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[LifecycleDmlssSccm](
	[Ecn] [varchar](50) NULL,
	[Name] [varchar](50) NULL,
	[Alias] [varchar](100) NULL,
	[ModelAlias] [varchar](100) NULL,
	[Manufacturer] [varchar](100) NULL,
	[NameplateModel] [varchar](100) NULL,
	[Manufacturer2] [varchar](100) NULL,
	[Model] [varchar](100) NULL,
	[OperatingSystem] [varchar](100) NULL,
	[SerialNumber] [varchar](100) NULL,
	[Nomenclature] [varchar](100) NULL,
	[UserName] [varchar](100) NULL,
	[CustodianName] [varchar](100) NULL,
	[CustomerID] [varchar](50) NULL,
	[CustomerName] [varchar](100) NULL,
	[CustomerName2] [varchar](100) NULL,
	[CustodianPhone] [varchar](50) NULL,
	[Active] [varchar](50) NULL,
	[Lifecycle] [varchar](50) NULL,
	[Ahlta] [varchar](50) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[LdapSystem]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[LdapSystem](
	[Name] [varchar](64) NULL
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[lcGroup]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[lcGroup](
	[GroupID] [varchar](50) NOT NULL,
	[HandReceipt] [varchar](50) NOT NULL,
	[facilityID] [varchar](8) NOT NULL,
 CONSTRAINT [PK_lcGroups] PRIMARY KEY CLUSTERED 
(
	[GroupID] ASC,
	[HandReceipt] ASC,
	[facilityID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  View [dbo].[DistinctPrinterTCPIP]    Script Date: 10/05/2018 13:10:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[DistinctPrinterTCPIP]
AS
SELECT DISTINCT LocalTCPIPPort
FROM         dbo.PrinterLog_Printers
WHERE     (LEN(LocalTCPIPPort) > 0)
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[42] 4[20] 2[9] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "PrinterLog_Printers"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 284
               Right = 293
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 2025
         Width = 3180
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'DistinctPrinterTCPIP'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'DistinctPrinterTCPIP'
GO
/****** Object:  StoredProcedure [dbo].[AccqByDates]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Proc [dbo].[AccqByDates]
(@From datetime,
@To datetime)

AS

Select ECN, AcqDate, NameplateModel, nomenclature, CustodianName
FROM DMLSS
where (nomenclature LIKE '%COMPUTER%' OR nomenclature LIKE '%PRINTER%') 
and (AcqDate between @From and @To)
order by nomenclature
GO
/****** Object:  StoredProcedure [dbo].[spCompareNameCount]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 20, 2009
-- Description:	Stored Proc to grab the count for unmatched Name0 values
-- =============================================
CREATE PROCEDURE [dbo].[spCompareNameCount] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
SELECT	COUNT(Name) AS NameCount
FROM	SCCM
WHERE	(NOT EXISTS
			(SELECT	DISTINCT Ecn
			FROM	DmlssData
			WHERE	(Ecn5 = Name5)))
END
GO
/****** Object:  StoredProcedure [dbo].[spCompareName]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 16, 2009
-- Description:	SP to grab and comapre SMS Name info to compare against DMLSS ECN info
-- =============================================
CREATE PROCEDURE [dbo].[spCompareName] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
SELECT     Name,Manufacturer,Model,UserName
FROM         SMSComputer
WHERE     (NOT EXISTS
              (SELECT     Ecn
                FROM          DMLSS
                --WHERE nomenclature IN (SELECT nomenclature FROM computer_nomenclature)
				WHERE      (Ecn5 = SMSComputer.Name5)))
ORDER BY Name
END
GO
/****** Object:  StoredProcedure [dbo].[spCompareECN]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 16, 2009
-- Description:	SP to grab and comapre DMLSS ECN info and SMS Name info
-- =============================================
CREATE PROCEDURE [dbo].[spCompareECN]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
SELECT	Ecn, Ecn5, d.Manufacturer, NameplateModel, Nomenclature, CustodianName, CustomerName, CustomerId
FROM	DmlssData d LEFT JOIN Alias a ON d.Manufacturer = a.Manufacturer WHERE 1 = 1
	AND Ecn5 IN (
					SELECT DISTINCT Ecn5 
					FROM DMLSS 
					WHERE nomenclature IN (SELECT nomenclature FROM computer_nomenclature)
						AND Ecn5 IS NOT NULL EXCEPT (
													SELECT Ecn5 
													FROM DMLSS INTERSECT 
																SELECT SMSComputer.Name5 
																FROM SMSComputer)) 
END
GO
/****** Object:  StoredProcedure [dbo].[spClearUsamitcData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
CREATE PROCEDURE [dbo].[spClearUsamitcData]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DELETE FROM UsamitcDesktopStandardizationData
END
GO
/****** Object:  StoredProcedure [dbo].[spClearTempSccmData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/11/2009
-- Description:	Dynamic SP to grab all AHLTA installs with more than 2GB of RAM
-- =============================================
CREATE PROCEDURE [dbo].[spClearTempSccmData]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
    DELETE	FROM TempSccm
    DELETE	FROM TempAhlta
    DELETE	FROM TempCombined
		
END
GO
/****** Object:  StoredProcedure [dbo].[spAhltaCitrix]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: September 23, 2009
-- Description:	Stored Proc to grab systems that have both AHLTA and Citrix installed
-- =============================================
CREATE PROCEDURE [dbo].[spAhltaCitrix]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
SELECT DISTINCT ahltaTemp.Name, ahltaTemp.UserName, ahltaTemp.Memory, CONVERT(datetime, ahltaTemp.InstallDate) AS InstallDate, ahltaTemp.Version, ahltaTemp.Ecn, ahltaTemp.CustodianName, ahltaTemp.CustomerName, ahltaTemp.Manufacturer, ahltaTemp.Model
		FROM ahltaTemp WHERE Citrix = 1;
END
GO
/****** Object:  StoredProcedure [dbo].[sp___ResetPrintersData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-9-2012
-- Description:	Reset tables for new data import
-- =============================================
Create PROCEDURE [dbo].[sp___ResetPrintersData]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @sysid INT;
	
	WHILE (SELECT COUNT(SysID) FROM TestPrinter_Systems) > 0
	BEGIN
		SET @sysid = (SELECT MIN(TestPrinter_Systems.SysID) FROM TestPrinter_Systems);
		SELECT @sysid;
		
		IF @sysid > 0 
		BEGIN
			DELETE FROM TestPrinter_Systems WHERE TestPrinter_Systems.SysID = @sysid;
		END
		PRINT @sysid
	END
	
	DBCC CHECKIDENT('dbo.TestPrinter_Systems', RESEED, 0);
	
END
GO
/****** Object:  StoredProcedure [dbo].[sp___InsertSystem]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-9-2012
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[sp___InsertSystem]
	(@ComputerName VARCHAR(50), @UserName VARCHAR(50))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @c INT;
	
	SET @c = (SELECT COUNT(UserName) FROM TestPrinter_Systems 
	WHERE UserName = @UserName AND Computer = @ComputerName) 
	SELECT @c

	-- Don't add user if exists	
	IF (@c = 0)
	BEGIN
	    INSERT INTO TestPrinter_Systems (Computer, UserName) VALUES (@ComputerName, @UserName);
	END
END
GO
/****** Object:  StoredProcedure [dbo].[sp___InsertAppSystem]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-9-2012
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[sp___InsertAppSystem]
	(@ComputerName VARCHAR(50), @UserName VARCHAR(50))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @c INT;
	
	SET @c = (SELECT COUNT(UserName) FROM TestPrinter_Systems 
	WHERE UserName = @UserName AND Computer = @ComputerName) 
	SELECT @c

	-- Don't add user if exists	
	IF (@c = 0)
	BEGIN
	    INSERT INTO TestPrinter_Systems (Computer, UserName) VALUES (@ComputerName, @UserName);
	END
END
GO
/****** Object:  StoredProcedure [dbo].[GVHandReceipt]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[GVHandReceipt]

@AccountName NVARCHAR (150)

AS

SELECT RowID, [ECN], [AccountName], REPLACE([Nomenclature],',','_') AS Nomenclature,[MfrSerialNo], [Location],  [Comments],   [Manufacturer], [CustomerID], REPLACE([CustodianName],',','_') AS CustodianName FROM [YourHandReceipt] WHERE [AccountName] = @AccountName
GO
/****** Object:  StoredProcedure [dbo].[GetStandAlonePCs]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create proc [dbo].[GetStandAlonePCs]

AS

Select * from StandAlonePCs
GO
/****** Object:  View [dbo].[IMDFrontEndDB]    Script Date: 10/05/2018 13:10:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[IMDFrontEndDB]
AS
SELECT     dbo.DMLSS.MfrSerialNo, dbo.DMLSS.ItemId, dbo.DMLSS.Nomenclature, dbo.DMLSS.LifeExp, dbo.DMLSS.Manufacturer, dbo.DMLSS.CustomerId, 
                      dbo.DMLSS.CustomerName, dbo.DMLSS.CustodianViewCustdnPocSer, dbo.DMLSS.CustodianName, dbo.DmlssSccm.Manufacturer AS Expr1, dbo.DmlssSccm.Model, 
                      dbo.DmlssSccm.Nomenclature AS Expr2, dbo.DmlssSccm.Custodian, dbo.DmlssSccm.Name, dbo.DmlssSccm.Name5, dbo.DmlssSccm.SccmManufacturer, 
                      dbo.DmlssSccm.SccmModel, dbo.DmlssSccm.UserName, dbo.DMLSS.Ecn5
FROM         dbo.DMLSS INNER JOIN
                      dbo.DmlssSccm ON dbo.DMLSS.Ecn5 = dbo.DmlssSccm.Ecn
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[53] 4[8] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "DMLSS"
            Begin Extent = 
               Top = 16
               Left = 40
               Bottom = 413
               Right = 351
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "DmlssSccm"
            Begin Extent = 
               Top = 6
               Left = 389
               Bottom = 243
               Right = 594
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'IMDFrontEndDB'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'IMDFrontEndDB'
GO
/****** Object:  Table [dbo].[Form3161Items]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Form3161Items](
	[ItemId] [int] IDENTITY(0,1) NOT NULL,
	[InstanceId] [int] NOT NULL,
	[ItemNoA] [varchar](255) NULL,
	[StockNo] [char](13) NULL,
	[ECN] [char](6) NULL,
	[Nomenclature] [varchar](255) NULL,
	[MfrSerialNumber] [varchar](255) NULL,
	[ItemDescription] [varchar](255) NULL,
	[UnitOfIssue] [varchar](255) NULL,
	[Quantity] [int] NULL,
	[Code] [varchar](255) NULL,
	[SupplyAction] [varchar](255) NULL,
	[UnitPrice] [money] NULL,
	[TotalCost] [money] NULL,
	[PostedDate] [datetime] NULL,
	[PostedBy] [varchar](255) NULL,
	[ItemStatus] [int] NULL,
	[pageCount] [int] NULL,
	[pageOfPages] [int] NULL,
 CONSTRAINT [PK_Form3161Items] PRIMARY KEY CLUSTERED 
(
	[ItemId] ASC,
	[InstanceId] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[Form2062Items]    Script Date: 10/05/2018 13:10:02 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[Form2062Items](
	[ItemId] [int] IDENTITY(0,1) NOT NULL,
	[InstanceID] [int] NOT NULL,
	[stockNo] [varchar](255) NULL,
	[itemDescription] [varchar](255) NULL,
	[cColumn] [varchar](255) NULL,
	[sec] [varchar](255) NULL,
	[ui] [varchar](255) NULL,
	[qtyAuth] [int] NULL,
	[qtyA] [int] NULL,
	[qtyB] [int] NULL,
	[qtyC] [int] NULL,
	[qtyD] [int] NULL,
	[qtyE] [int] NULL,
	[qtyF] [int] NULL,
	[ItemStatus] [int] NULL,
	[PgeCnt] [int] NULL,
	[PageOfPages] [int] NULL,
 CONSTRAINT [PK_Form2062Items] PRIMARY KEY CLUSTERED 
(
	[ItemId] ASC,
	[InstanceID] ASC
)WITH (PAD_INDEX  = OFF, STATISTICS_NORECOMPUTE  = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS  = ON, ALLOW_PAGE_LOCKS  = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
SET ANSI_PADDING OFF
GO
/****** Object:  View [dbo].[BitExample]    Script Date: 10/05/2018 13:10:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE view [dbo].[BitExample]
as
select
    case when instanceId = null then cast(1 as bit)
         else cast(0 as bit)
    end as  IsLocked
from Form2062Instances
GO
/****** Object:  StoredProcedure [dbo].[spDMLSS_SNSearch]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spDMLSS_SNSearch]
	@SN NVARCHAR(200)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT 
			Ecn5, 
			Ecn, 
			MfrSerialNo, 
			NameplateModel AS Model, 
			MedicalEquipmentMeAcqCostQty AS AcqCost, 
			CONVERT(VARCHAR(11),AcqDate,113) AS AcqDate,
			ItemID AS ID, 
			Nomenclature, 
			LifeExp, 
			Manufacturer AS DMLSSManufacturer, 
			CommonModel, 
			EquipmentLocation AS Location, 
			[Ownership], 
			MaintAct,
			MtfOrgNm AS OrgName, 
			CustomerId, 
			CustomerName AS Customer, 
			CustodianName AS Custodian
	FROM DMLSS 
	WHERE MfrSerialNo IN ( @SN ) 
	
END
GO
/****** Object:  StoredProcedure [dbo].[spDMLSS]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: <Create Date,,>
-- Description:	This procedure is used when 
-- 'View All DMLSS Inventory' is selected
-- =============================================
CREATE PROCEDURE [dbo].[spDMLSS]
	-- Add the parameters for the stored procedure here
	@sql varchar(MAX),
	@compare varchar (1000)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  --SELECT     TOP (100) PERCENT Ecn, Ecn5, Manufacturer, NameplateModel, Nomenclature, AcqDate, CustodianName, CustomerName, CustomerId
  --FROM         dbo.DMLSS
  --WHERE (Ecn5 NOT IN
  --  (SELECT DS.Ecn5
  --    FROM dbo.DmlssSccm AS DS INNER JOIN
  --      dbo.DMLSS AS DL ON DL.Ecn5 = DS.Ecn5)) AND (Nomenclature = 'computer' or Nomenclature = 'LAPTOP,  COMPUTER' or Nomenclature = 'COMPUTER LAPTOP TABLET PC' or Nomenclature = 'COMPUTER SYSTEM' or Nomenclature = 'COMPUTER, ALL- IN - ONE'
  --      or Nomenclature = 'COMPUTER, DESKTOP, TOWER' or Nomenclature = 'COMPUTER, LAPTOP' or Nomenclature = 'COMPUTER, LAPTOP, MOBILITY' or Nomenclature = 'COMPUTER, PERSONAL, LAPTOP' or Nomenclature = 'COMPUTER, TABLET W/ONE DOCKING STATION'
  --      or Nomenclature = 'COMPUTER, W/TOUCHSCREEN MONITOR' or Nomenclature = 'WORKSTATION, COMPUTER, CPU/MONITOR/KEYBOARD')
        
        
  SELECT	Ecn, Ecn5, d.Manufacturer, NameplateModel, Nomenclature, CustodianName, CustomerName, CustomerId
  FROM	DmlssData d LEFT JOIN Alias a ON d.Manufacturer = a.Manufacturer
  WHERE 1 = 1
	  AND Ecn5 IN (
					SELECT DISTINCT Ecn5 
					FROM DMLSS 
					WHERE nomenclature IN (SELECT nomenclature FROM computer_nomenclature)
						AND Ecn5 IS NOT NULL EXCEPT (SELECT Ecn5 FROM DMLSS INTERSECT SELECT SMSComputer.Name5 FROM SMSComputer))
	
END
GO
/****** Object:  StoredProcedure [dbo].[HRHolders]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[HRHolders]

AS 

Select Distinct CustodianName from DMLSS
ORDER BY CustodianName
GO
/****** Object:  StoredProcedure [dbo].[HRDataPull]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[HRDataPull]

@CustodianName nvarchar (255)

as


SELECT  [ECN5], REPLACE([Nomenclature],',','_') AS Nomenclature,[MfrSerialNo],[NameplateModel], [Manufacturer], [CustomerID], REPLACE([CustodianName],',','_') AS CustodianName, CustomerName FROM DMLSS
Where CustodianName = @CustodianName and (Nomenclature like '%computer%' or Nomenclature like '%tablet%' or Nomenclature like '%Laptop%')
Order by Nomenclature
GO
/****** Object:  StoredProcedure [dbo].[spDeviceTrackerTest]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create procedure [dbo].[spDeviceTrackerTest]

AS
Select * from DeviceTracker
GO
/****** Object:  StoredProcedure [dbo].[spDeviceTrackerData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spDeviceTrackerData]
(
 @ECN nvarchar(255) = '21545', 
 @Functional_Manager nvarchar(255) = null,
 @System_Owner nvarchar(255) = null
 )
AS

IF @ECN IS NULL AND @Functional_Manager IS NULL AND @System_Owner IS NULL

SELECT * FROM [DeviceTracker]

IF @ECN IS NOT NULL AND @Functional_Manager IS NULL AND @System_Owner IS NULL

SELECT * FROM [DeviceTracker] WHERE (@ECN = [ECN] );

IF @Functional_Manager IS NOT NULL AND @ECN IS NULL AND @System_Owner IS NULL

SELECT * FROM [DeviceTracker] WHERE (@Functional_Manager = [Functional Manager]);

IF @System_Owner IS NOT NULL AND @ECN IS NULL AND @Functional_Manager IS NULL

SELECT * FROM [DeviceTracker] WHERE (@System_Owner = [System Owner]);
GO
/****** Object:  StoredProcedure [dbo].[spDeleteWin7Ldap]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spDeleteWin7Ldap] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	DELETE
	FROM	Win7Ldap
END
GO
/****** Object:  StoredProcedure [dbo].[spDeleteLdapSystemData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spDeleteLdapSystemData] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	DELETE
	FROM	LdapSystem
END
GO
/****** Object:  StoredProcedure [dbo].[spCreateUserTempTables]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: June 29, 2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spCreateUserTempTables]
	(@suffix VARCHAR(40))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

   
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Temp_Form2062Instances_' + @suffix + ']') AND type in (N'U'))
		EXEC spCreate2062TempInstanceTable @suffix
		
	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Temp_Form3161Instances_' + @suffix + ']') AND type in (N'U'))
		EXEC spCreate3161TempInstanceTable @suffix

	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Temp_Form2062Items_' + @suffix + ']') AND type in (N'U'))
		EXEC spCreate2062TempItemsTable @suffix

	IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[Temp_Form3161Items_' + @suffix + ']') AND type in (N'U'))
		EXEC spCreate3161TempItemsTable @suffix


END
GO
/****** Object:  StoredProcedure [dbo].[spCreateUsamitcView_TEST]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- =============================================
CREATE PROCEDURE [dbo].[spCreateUsamitcView_TEST]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	--DROP TABLE UsamitcDmlssSccm

	--SELECT	UsamitcName, NotStandard, Stale, Unmanaged, NoSccm, Win7NotReady, HbssNotCompliant, HbssServiceNotRunning, HbssHipsNotRunning, HbssAvNotRunning, TwNotCompliant, ActivClientNotCompliant, DarNotCompliant, AgmNotCompliant, CclNotEnforced, OuPath, UsamitcDescription, LastLoggedOnUser, DateCreatedAd, DateCreatedBios, SystemAge, Ecn, Name, Alias, ModelAlias, Manufacturer, NameplateModel, Manufacturer2, Model, OperatingSystem, SerialNumber, Nomenclature, UserName, CustodianName, CustomerID, CustomerName, CustomerName2, CustodianPhone, Active, Lifecycle, Ahlta
	--INTO UsamitcDmlssSccm_TEST
	--FROM [pcInventory].[dbo].[UsamitcDesktopStandardizationData] u
	--  FULL JOIN LifecycleDmlssSccm l ON u.UsamitcName = l.Name OR RIGHT(u.UsamitcName, 5) = RIGHT(l.Ecn, 5)


	DROP	TABLE UsamitcDmlssSccmNew_TEST;

	SELECT	UsamitcName, NotStandard, Stale, Unmanaged, NoSccm, Win7NotReady, HbssNotCompliant, HbssServiceNotRunning, HbssHipsNotRunning, HbssAvNotRunning, TwNotCompliant, ActivClientNotCompliant, DarNotCompliant, AgmNotCompliant, CclNotEnforced, OuPath, UsamitcDescription, LastLoggedOnUser, DateCreatedAd, DateCreatedBios, SystemAge, Ecn, Name, Alias, ModelAlias, Manufacturer, NameplateModel, Manufacturer2, Model, OperatingSystem, SerialNumber, Nomenclature, UserName, CustodianName, CustomerID, CustomerName, CustomerName2, CustodianPhone, Active, Lifecycle, Ahlta, Listed
	INTO UsamitcDmlssSccmNew_TEST
	FROM [pcInventory].[dbo].[UsamitcDesktopStandardizationData] u
		FULL JOIN LifecycleDmlssSccmNew l ON u.UsamitcName = l.Name OR RIGHT(u.UsamitcName, 5) = RIGHT(l.Ecn, 5);
		
	WITH cte As
	(
		SELECT ROW_NUMBER() OVER (PARTITION BY [UsamitcName] ORDER BY (SELECT 0)) RN
		FROM [pcInventory].[dbo].[UsamitcDesktopStandardizationData] 
		WHERE [UsamitcName] IS NOT NULL
	)
	
	DELETE FROM cte WHERE RN<> 1

	SELECT *
	FROM [pcInventory].[dbo].[UsamitcDesktopStandardizationData] 
	WHERE [UsamitcName] IS NOT NULL
	ORDER BY [UsamitcName];

END
GO
/****** Object:  StoredProcedure [dbo].[spCreateUsamitcView]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spCreateUsamitcView]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	--DROP	TABLE UsamitcDmlssSccm

	--SELECT	UsamitcName, NotStandard, Stale, Unmanaged, NoSccm, Win7NotReady, HbssNotCompliant, HbssServiceNotRunning, HbssHipsNotRunning, HbssAvNotRunning, TwNotCompliant, ActivClientNotCompliant, DarNotCompliant, AgmNotCompliant, CclNotEnforced, OuPath, UsamitcDescription, LastLoggedOnUser, DateCreatedAd, DateCreatedBios, SystemAge, Ecn, Name, Alias, ModelAlias, Manufacturer, NameplateModel, Manufacturer2, Model, OperatingSystem, SerialNumber, Nomenclature, UserName, CustodianName, CustomerID, CustomerName, CustomerName2, CustodianPhone, Active, Lifecycle, Ahlta
	--INTO UsamitcDmlssSccm
	--FROM [pcInventory].[dbo].[UsamitcDesktopStandardizationData] u
	--	FULL JOIN LifecycleDmlssSccm l ON u.UsamitcName = l.Name OR RIGHT(u.UsamitcName, 5) = RIGHT(l.Ecn, 5)


	--DROP	TABLE UsamitcDmlssSccmNew

	--SELECT	UsamitcName, NotStandard, Stale, Unmanaged, NoSccm, Win7NotReady, HbssNotCompliant, HbssServiceNotRunning, HbssHipsNotRunning, HbssAvNotRunning, TwNotCompliant, ActivClientNotCompliant, DarNotCompliant, AgmNotCompliant, CclNotEnforced, OuPath, UsamitcDescription, LastLoggedOnUser, DateCreatedAd, DateCreatedBios, SystemAge, Ecn, Name, Alias, ModelAlias, Manufacturer, NameplateModel, Manufacturer2, Model, OperatingSystem, SerialNumber, Nomenclature, UserName, CustodianName, CustomerID, CustomerName, CustomerName2, CustodianPhone, Active, Lifecycle, Ahlta, Listed
	--INTO UsamitcDmlssSccmNew
	--FROM [pcInventory].[dbo].[UsamitcDesktopStandardizationData] u
	--	FULL JOIN LifecycleDmlssSccmNew l ON u.UsamitcName = l.Name OR RIGHT(u.UsamitcName, 5) = RIGHT(l.Ecn, 5)
		
	With cte As
	(
		SELECT ROW_NUMBER() OVER (PARTITION BY [UsamitcName] ORDER BY (SELECT 0)) RN
		FROM [pcInventory].[dbo].[UsamitcDesktopStandardizationData] 
		WHERE [UsamitcName] IS NOT NULL
	)
	
	DELETE FROM cte WHERE RN<> 1

	SELECT *
	FROM [pcInventory].[dbo].[UsamitcDesktopStandardizationData] 
	WHERE [UsamitcName] IS NOT NULL
	ORDER BY [UsamitcName];

END
GO
/****** Object:  StoredProcedure [dbo].[spCreateTempCombined]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/11/2009
-- Description:	Dynamic SP to grab all AHLTA installs with more than 2GB of RAM
-- =============================================
CREATE PROCEDURE [dbo].[spCreateTempCombined]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
    INSERT	INTO [pcInventory].[dbo].TempCombined
    SELECT s.Name, OperatingSystem, a.[Version]
	FROM [pcInventory].[dbo].[TempSccm] s LEFT JOIN
		[pcInventory].[dbo].[TempAhlta] a on s.Name = a.Name
	ORDER BY s.Name, OperatingSystem, a.[Version] DESC;
	
	-- Remove any duplicatee -- 	
	With cte As
	(
	SELECT ROW_NUMBER() OVER (PARTITION BY Name ORDER BY (SELECT 0)) RN
	FROM [pcInventory].[dbo].TempCombined
	)
	DELETE FROM cte WHERE RN<> 1		
END
GO
/****** Object:  StoredProcedure [dbo].[spCreateCustodianView]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- =============================================
CREATE PROCEDURE [dbo].[spCreateCustodianView]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	--DROP TABLE UsamitcDmlssSccm

	--SELECT	UsamitcName, NotStandard, Stale, Unmanaged, NoSccm, Win7NotReady, HbssNotCompliant, HbssServiceNotRunning, HbssHipsNotRunning, HbssAvNotRunning, TwNotCompliant, ActivClientNotCompliant, DarNotCompliant, AgmNotCompliant, CclNotEnforced, OuPath, UsamitcDescription, LastLoggedOnUser, DateCreatedAd, DateCreatedBios, SystemAge, Ecn, Name, Alias, ModelAlias, Manufacturer, NameplateModel, Manufacturer2, Model, OperatingSystem, SerialNumber, Nomenclature, UserName, CustodianName, CustomerID, CustomerName, CustomerName2, CustodianPhone, Active, Lifecycle, Ahlta
	--INTO UsamitcDmlssSccm_TEST
	--FROM [pcInventory].[dbo].[UsamitcDesktopStandardizationData] u
	--  FULL JOIN LifecycleDmlssSccm l ON u.UsamitcName = l.Name OR RIGHT(u.UsamitcName, 5) = RIGHT(l.Ecn, 5)


	DROP TABLE CustodianView;

	SELECT	UsamitcName, NotStandard, Stale, Unmanaged, NoSccm, Win7NotReady, HbssNotCompliant, HbssServiceNotRunning, HbssHipsNotRunning, HbssAvNotRunning, TwNotCompliant, ActivClientNotCompliant, DarNotCompliant, AgmNotCompliant, CclNotEnforced, OuPath, UsamitcDescription, LastLoggedOnUser, DateCreatedAd, DateCreatedBios, SystemAge, Ecn, Name, Alias, ModelAlias, Manufacturer, NameplateModel, Manufacturer2, Model, OperatingSystem, SerialNumber, Nomenclature, UserName, CustodianName, CustomerID, CustomerName, CustomerName2, CustodianPhone, Active, Lifecycle, Ahlta, Listed
	INTO CustodianView
	FROM [pcInventory].[dbo].[UsamitcDesktopStandardizationData] MITC
		FULL JOIN LifecycleDmlssSccmNew LIFE ON 
			MITC.UsamitcName = LIFE.Name OR RIGHT(MITC.UsamitcName, 5) = RIGHT(LIFE.Ecn, 5);

END
GO
/****** Object:  StoredProcedure [dbo].[spForm3161PermInstanceExists]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 6-29-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spForm3161PermInstanceExists]
	( @id VARCHAR(50), @outVal INT OUTPUT)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	IF (select count(*) from form3161instances where instanceId = @id) > 0
		SET @outVal = 1
	ELSE
		SET @outVal = 0

	SELECT @outVal
	
END
GO
/****** Object:  StoredProcedure [dbo].[spForm2062PermInstanceExists]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 6-29-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spForm2062PermInstanceExists]
	( @id VARCHAR(50),
	  @outVal INT OUTPUT)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	IF (SELECT COUNT(*) FROM Form2062Instances WHERE instanceId = @id AND CreatedDate IS NOT NULL) > 0
		SET @outVal = 1
	ELSE
		SET @outVal = 0

	SELECT @outVal
	
END
GO
/****** Object:  StoredProcedure [dbo].[spECN_Exists]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 3-24-2010
-- Description:	Check for ECN in pcInventory table.
-- If exists, update. If not, insert
-- =============================================
CREATE PROCEDURE [dbo].[spECN_Exists]
	-- Add the parameters for the stored procedure here
	@ECN char(6)
AS

BEGIN
	DECLARE @RetVal int;
	
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SELECT ECN FROM DMLSS WHERE ECN = @ECN

	IF (@@ROWCOUNT <> 0) 
		SET @RetVal = 1
	ELSE
		SET @RetVal = 0	

	RETURN @RetVal
END
GO
/****** Object:  StoredProcedure [dbo].[spDMLSS_ECNSearch]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spDMLSS_ECNSearch]
	@ECN NVARCHAR(200)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT 
		Ecn5, 
		Ecn, 
		MfrSerialNo, 
		NameplateModel AS Model, 
		MedicalEquipmentMeAcqCostQty AS AcqCost, 
		CONVERT(VARCHAR(11),AcqDate,113) AS AcqDate,
		ItemID AS ID, 
		Nomenclature, 
		LifeExp, 
		Manufacturer AS DMLSSManufacturer, 
		CommonModel, 
		EquipmentLocation AS Location, 
		[Ownership], 
		MaintAct,
		MtfOrgNm AS OrgName, 
		CustomerId, 
		CustomerName AS Customer, 
		CustodianName AS Custodian
	FROM DMLSS 
	WHERE Ecn IN ( @ECN )
	
END
GO
/****** Object:  StoredProcedure [dbo].[spGet2062Instance]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGet2062Instance] 
	-- Add the parameters for the stored procedure here
	@instanceID int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT  InstanceId, CreatedDate, FromWho, ToWho, HandReceiptNo, EndItemStockNo, EndItemDescription, PublicationNo, PublicationDate, Quantity, InstanceStatus, InstancePageCount
	FROM dbo.Form2062Instances
	WHERE InstanceId = @instanceID;
END
GO
/****** Object:  StoredProcedure [dbo].[spGet2062Data]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGet2062Data]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT InstanceID, CONVERT(VARCHAR(10), CreatedDate, 101) AS CreatedDate, InstanceStatus, FromWho, ToWho
	FROM [dbo].[Form2062Instances]
END
GO
/****** Object:  StoredProcedure [dbo].[spGet3161Instance]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGet3161Instance] 
	-- Add the parameters for the stored procedure here
	@instanceID int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT  InstanceId, CreatedDate, Issue, TurnIn, RequestNo, VoucherNo, SendTo, DateRequired, DODAAC, Priority, FundingData, RequestFrom, EndItemID, ManufacturerName, Model, MfrSerialNo, Publication, JobOrderNo, QtyColumnDate, QtyColumnBy, IssueSupplyActionDate, IssueSupplyActionBy, RecSupplyActionDate, RecSupplyActionBy, SheetTotal, GrandTotal, InstanceStatus, InstancePageCount
	FROM dbo.Form3161Instances
	WHERE InstanceId = @instanceID;
END
GO
/****** Object:  StoredProcedure [dbo].[spGet3161Data]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGet3161Data]
	-- Add the parameters for the stored procedure here
	--<@Param1, sysname, @p1> <Datatype_For_Param1, , int> = <Default_Value_For_Param1, , 0>, 
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT InstanceID, CONVERT(VARCHAR(10), CreatedDate, 101) AS CreatedDate, InstanceStatus, SendTo
	FROM [dbo].[Form3161Instances]
	
	
END
GO
/****** Object:  StoredProcedure [dbo].[spInsertLdapSystemData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spInsertLdapSystemData] 
	-- Add the parameters for the stored procedure here
	@name varchar(64)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	INSERT	INTO	LdapSystem(Name)
			VALUES(@name)
END
GO
/****** Object:  StoredProcedure [dbo].[spInsertAppSystem]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-9-2012
-- Altered 6-27-2013 to remove user name
-- all user names are a single space now
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spInsertAppSystem]
	(@ComputerName VARCHAR(50), @UserName VARCHAR(50))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @c INT;
	
	--SET @c = (SELECT COUNT(AppUser) FROM AppLog_Systems 
	SET @c = (SELECT COUNT(AppComputer) FROM AppLog_Systems 
 	--	WHERE AppComputer = @ComputerName)
		WHERE (AppUser = @UserName) AND (AppComputer = @ComputerName))
	SELECT @c

	-- Don't add user if exists	
	IF (@c = 0)
	BEGIN
	    INSERT INTO AppLog_Systems (AppComputer, AppUser) VALUES (@ComputerName, @UserName);
	END
END
GO
/****** Object:  StoredProcedure [dbo].[spIAVSShockwave]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/31/2009
-- Description:	Stored Proc to grab Shockwave data
-- =============================================
CREATE PROCEDURE [dbo].[spIAVSShockwave] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT  ver, COUNT(*) AS Counter, disp, CONVERT(decimal(10, 2), CONVERT(float, CONVERT(float, COUNT(*)) / CONVERT(float, (SELECT     COUNT(*) AS Expr1 FROM SMSProgram WHERE (DisplayName LIKE '%shockwave%')))*100)) AS avg
FROM         (SELECT     Version AS ver, DisplayName as disp
                       FROM          SMSProgram
                       WHERE      (DisplayName LIKE '%shockwave%')) AS A
GROUP BY ver, disp
ORDER BY counter DESC
END
GO
/****** Object:  StoredProcedure [dbo].[spIAVSReader]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/31/2009
-- Description:	Stored Proc to grab Java Runtime data
-- =============================================
CREATE PROCEDURE [dbo].[spIAVSReader] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT  ver, COUNT(*) AS Counter, disp, CONVERT(decimal(10, 2), CONVERT(float, CONVERT(float, COUNT(*)) / CONVERT(float, (SELECT     COUNT(*) AS Expr1 FROM SMSProgram WHERE (DisplayName LIKE 'Adobe Reader%') AND (DisplayName NOT LIKE '%Security Update%')))*100)) AS avg
FROM         (SELECT     Version AS ver, DisplayName as disp
                       FROM          SMSProgram
                       WHERE      (DisplayName LIKE 'Adobe Reader%') AND (DisplayName NOT LIKE '%Security Update%')) AS A
GROUP BY ver, disp
ORDER BY ver DESC, disp DESC, counter DESC
END
GO
/****** Object:  StoredProcedure [dbo].[spIAVSJava]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/31/2009
-- Description:	Stored Proc to grab Java Runtime data
-- =============================================
CREATE PROCEDURE [dbo].[spIAVSJava] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT  ver, COUNT(*) AS Counter, disp, CONVERT(decimal(10, 2), CONVERT(float, CONVERT(float, COUNT(*)) / CONVERT(float, (SELECT     COUNT(*) AS Expr1 FROM SMSProgram WHERE (DisplayName LIKE '%Runtime Environment%')))*100)) AS avg
FROM         (SELECT     Version AS ver, DisplayName AS disp
                       FROM          SMSProgram AS SMSProgram_1
                       WHERE      (DisplayName LIKE '%Runtime Environment%')) AS A
GROUP BY ver, disp
ORDER BY counter DESC
END
GO
/****** Object:  StoredProcedure [dbo].[spIAVSFlashPlayer]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/31/2009
-- Description:	Stored Proc to grab Adobe Flash Player data
-- =============================================
CREATE PROCEDURE [dbo].[spIAVSFlashPlayer]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT  ver, COUNT(*) AS Counter, disp, CONVERT(decimal(10, 2), CONVERT(float, CONVERT(float, COUNT(*)) / CONVERT(float, (SELECT     COUNT(*) AS Expr1 FROM SMSProgram WHERE (DisplayName LIKE '%Flash Player%')))*100)) AS avg
FROM         (SELECT     Version AS ver, DisplayName as disp
                       FROM          SMSProgram
                       WHERE      (DisplayName LIKE '%Flash Player%')) AS A
GROUP BY ver, disp
ORDER BY ver DESC, disp DESC, counter DESC
END
GO
/****** Object:  StoredProcedure [dbo].[spGetUnitTotal]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 05-25-2010
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spGetUnitTotal]  (
	@ID INT, 
	@UT FLOAT = 0.0 OUTPUT)
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

  DECLARE @SQL VARCHAR(MAX);
  DECLARE @tablename VARCHAR(90);
    
  SET @tablename = 'Form3161Items';
  SET @SQL = 'SELECT SUM(UnitPrice) AS UTotal FROM ' + @tablename + ' WHERE instanceId = ' + CAST(@ID AS VARCHAR);

	DROP TABLE [dbo].[tmp_UTotal]
	CREATE TABLE [dbo].[tmp_UTotal] (UTotal float)
	INSERT INTO [dbo].[tmp_UTotal]
	EXEC (@SQL)
	
	SET @UT = (SELECT UTotal FROM [dbo].[tmp_UTotal])
	
	IF @UT = NULL
		RETURN 0.0
	ELSE
		RETURN @UT
END
GO
/****** Object:  StoredProcedure [dbo].[spGetSystemUserInfo]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetSystemUserInfo] 
	-- Add the parameters for the stored procedure here
	@name varchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT	DISTINCT CONVERT(VARCHAR(10), FileDate, 101) AS FileDate, UserName
	FROM	[pcInventory].[dbo].[PrinterLog_Printers] p
		JOIN	[pcInventory].[dbo].[PrinterLog_Systems] s ON p.SysID = s.SysID
	WHERE	s.Computer = @name
	ORDER BY FileDate DESC, UserName
END
GO
/****** Object:  StoredProcedure [dbo].[spGetSystemPrinterInfo]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- 
-- @name = the computer name
-- @user = the user name
-- =============================================
CREATE PROCEDURE [dbo].[spGetSystemPrinterInfo] 
	-- Add the parameters for the stored procedure here
	@name varchar(255),
	@user varchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT	DISTINCT p.Port, p.Printer, m.PrinterComment
	FROM	[pcInventory].[dbo].[PrinterLog_Printers] p
		JOIN	[pcInventory].[dbo].[PrinterLog_Systems] s ON p.SysID = s.SysID
			JOIN [pcInventory].[dbo].[PrinterLog_PrinterManager] m ON (p.Port = m.Port and p.Computer = m.Printer)
	WHERE	s.Computer = @name
		AND	s.UserName = @user
			AND	m.PrinterStatus = 'true'
	ORDER BY Port, p.Printer
END
GO
/****** Object:  StoredProcedure [dbo].[spGetSystemInfo]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetSystemInfo] 
	-- Add the parameters for the stored procedure here
	@name varchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT	DISTINCT d.[CustodianName], d.[CustomerID], d.[CustomerName], d.[Ecn], [Alias], [ModelAlias], [SerialNumber], u.UsamitcDescription, u.OUPath 
	FROM	[LifecycleDmlssSccmNew] l
		RIGHT OUTER JOIN	dbo.UsamitcDesktopStandardizationData u ON l.Name = u.UsamitcName
			JOIN	DMLSS d ON RIGHT(u.UsamitcName, 5) = d.Ecn5
			WHERE	u.UsamitcName = @name
	-- Changed 4-1-2015 to below. Was not returning data (KL): WHERE	u.UsamitcName = @name
	--WHERE d.[Ecn] = @name
END
GO
/****** Object:  StoredProcedure [dbo].[spGetSystemCustodianInfo]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetSystemCustodianInfo] 
	-- Add the parameters for the stored procedure here
	@custodian varchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	DECLARE	@win7	int
	DECLARE	@xp		int
	DECLARE	@ahlta	int
	
	--DECLARE	@custodian varchar(50)
	--SET		@custodian = 'Y07AYF'

	IF OBJECT_ID('tempdb..#tempApps') IS NOT NULL DROP TABLE #tempApps
	IF OBJECT_ID('tempdb..#tempStandard') IS NOT NULL DROP TABLE #tempStandard

	CREATE	TABLE	#tempStandard
					(AppName varchar(255)
					)

	SET		@win7	=	(SELECT COUNT(AppName)
						FROM	[pcInventory].[dbo].[AppLog_Applications] a
							JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
								JOIN	[pcInventory].[dbo].[LifecycleDmlssSccmNew] l ON s.AppComputer = l.Name
						WHERE	l.CustomerId = @custodian
							AND	AppName = 'Microsoft Windows 7 Enterprise')
			

	SET		@xp		=	(SELECT COUNT(AppName)
						FROM	[pcInventory].[dbo].[AppLog_Applications] a
							JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
								JOIN	[pcInventory].[dbo].[LifecycleDmlssSccmNew] l ON s.AppComputer = l.Name
						WHERE	l.CustomerId = @custodian
							AND	AppName = 'Microsoft Windows XP Professional')

	SET		@ahlta =	(SELECT	COUNT(AppName)
						FROM	[pcInventory].[dbo].[AppLog_Applications] a
							JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
								JOIN	[pcInventory].[dbo].[LifecycleDmlssSccmNew] l ON s.AppComputer = l.Name
						WHERE	l.CustomerId = @custodian
							AND	AppName = 'Ahlta')

	IF (@win7 > 0)
	BEGIN
		IF (@ahlta > 0)
		BEGIN
			INSERT	INTO #tempStandard(AppName)
			SELECT	AppName
			FROM	[pcInventory].[dbo].[AppLog_StandardApps]
			WHERE	Win7 = 'true'
				AND	Clinical = 'true'
			ORDER BY AppName
		END
		ELSE IF (@ahlta = 0)
		BEGIN
			INSERT	INTO #tempStandard(AppName)
			SELECT	AppName
			FROM	[pcInventory].[dbo].[AppLog_StandardApps]
			WHERE	Win7 = 'true'
				AND	[Admin] = 'true'
			ORDER BY AppName
		END	
	END
	ELSE IF (@xp > 0)
	BEGIN
		IF (@ahlta > 0)
		BEGIN
			INSERT	INTO #tempStandard(AppName)
			SELECT	AppName
			FROM	[pcInventory].[dbo].[AppLog_StandardApps]
			WHERE	Xp = 'true'
				AND	Clinical = 'true'
			ORDER BY AppName
		END
		ELSE IF (@ahlta = 0)
		BEGIN
			INSERT	INTO #tempStandard(AppName)
			SELECT	AppName
			FROM	[pcInventory].[dbo].[AppLog_StandardApps]
			WHERE	Xp = 'true'
				AND	[Admin] = 'true'
			ORDER BY AppName
		END
	END
		
	--SELECT	AppName
	--FROM	#tempStandard
	--ORDER BY AppName ASC

	SELECT	*
	INTO	#tempApps
	FROM	(
				SELECT l.CustomerId, l.Name, a.AppName, '                                                             ' AS 'Func', '                          ' AS 'OS', 2 AS 'Ord'
				FROM	[pcInventory].[dbo].[AppLog_Applications] a
					JOIN	[pcInventory].[dbo].[AppLog_ApplicationDef] d ON a.AppName = d.AppName
						JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
							JOIN	[pcInventory].[dbo].[LifecycleDmlssSccmNew] l ON s.AppComputer = l.Name
				WHERE	l.Name IN (SELECT l2.Name FROM [pcInventory].[dbo].[LifecycleDmlssSccmNew] l2
									JOIN	[pcInventory].[dbo].[AppLog_Systems] s2 ON l2.Name = s2.AppComputer
										JOIN	[pcInventory].[dbo].[AppLog_Applications] a2 ON a2.AppId = s2.AppID
											JOIN	[pcInventory].[dbo].[AppLog_ApplicationDef] d2 ON a2.AppName = d2.AppName
												WHERE	l.CustomerId = @custodian)
					AND	a.AppName NOT IN (SELECT	TOP 1 AppName
										FROM	[pcInventory].[dbo].[AppLog_Applications] a
											JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
												JOIN	[pcInventory].[dbo].[LifecycleDmlssSccmNew] l ON s.AppComputer = l.Name
										WHERE	l.CustomerId = @custodian
										)
						AND	a.AppName NOT IN (SELECT AppName FROM #tempStandard)
							AND d.Track = 'true'

			) AS tmp
	
	UPDATE	#tempApps
	SET		OS	 = CASE
						WHEN l.OperatingSystem = 'Microsoft Windows XP Professional'
							THEN 'Windows XP'
						WHEN l.OperatingSystem = 'Microsoft Windows 7 Enterprise'
							THEN 'Windows 7'
						WHEN l.OperatingSystem = 'Microsoft Windows 7 Ultimate'
							THEN 'Windows 7'
						ELSE
							'Other'
					END,
			Func = CASE
						WHEN l.Ahlta = 'Yes'
							THEN 'Clinical'
						ELSE
							'Admin'
					END
	FROM	#tempApps, [pcInventory].[dbo].[LifecycleDmlssSccmNew] l
	WHERE	#tempApps.Name = l.Name
	
	INSERT	INTO	#tempApps(CustomerId, Name, OS, Func, AppName, Ord)
	SELECT	l.CustomerId, l.Name,	CASE
										WHEN l.OperatingSystem = 'Microsoft Windows XP Professional'
											THEN 'Windows XP'
										WHEN l.OperatingSystem = 'Microsoft Windows 7 Enterprise'
											THEN 'Windows 7'
										WHEN l.OperatingSystem = 'Microsoft Windows 7 Ultimate'
											THEN 'Windows 7'
										ELSE
											'Other'
									END,
									CASE
										WHEN l.Ahlta = 'Yes'
											THEN 'Clinical'
										ELSE
											'Admin'
									END,
									'Standard Load', 1
	FROM	[pcInventory].[dbo].[LifecycleDmlssSccmNew] l
	WHERE	l.CustomerId = @custodian
		AND Name IS NOT NULL

	SELECT	CustomerId, Name, OS, Func, AppName
	FROM	#tempApps
	GROUP BY CustomerId, Name, OS, Func, AppName, Ord
	ORDER BY Name, Ord, AppName ASC

	SELECT	@win7 AS Win7, @xp AS Xp, @ahlta AS Clinical

	DROP	TABLE #tempApps
	DROP	TABLE #tempStandard
END
GO
/****** Object:  StoredProcedure [dbo].[spGetSystemApplicationInfo]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetSystemApplicationInfo] 
	-- Add the parameters for the stored procedure here
	@name varchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	DECLARE	@win7	int
	DECLARE	@xp		int
	DECLARE	@ahlta	int
	
	--DECLARE @name varchar(255)
	--SET		@name = 'amedeamcwk26753'

	IF OBJECT_ID('tempdb..#tempApps') IS NOT NULL DROP TABLE #tempApps
	IF OBJECT_ID('tempdb..#tempStandard') IS NOT NULL DROP TABLE #tempStandard

	CREATE	TABLE	#tempStandard
					(AppName varchar(255)
					)

	SET		@win7	=	(SELECT COUNT(AppName)
						FROM	[pcInventory].[dbo].[AppLog_Applications] a
							JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
						WHERE	s.AppComputer = @name
							AND	AppName = 'Microsoft Windows 7 Enterprise')
			

	SET		@xp		=	(SELECT COUNT(AppName)
						FROM	[pcInventory].[dbo].[AppLog_Applications] a
							JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
						WHERE	s.AppComputer = @name
							AND	AppName = 'Microsoft Windows XP Professional')

	SET		@ahlta = (SELECT	COUNT(AppName)
									 FROM	[pcInventory].[dbo].[AppLog_Applications] a
											JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
										WHERE	s.AppComputer = @name AND	AppName Like 'Ahlta%') + 
							   (SELECT	COUNT(AppName)
										FROM	[pcInventory].[dbo].[AppLog_Applications] a
											JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
										WHERE	s.AppComputer = @name AND	AppName Like 'Asutype%') +
								 (SELECT	COUNT(AppName)
										FROM	[pcInventory].[dbo].[AppLog_Applications] a
											JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
										WHERE	s.AppComputer = @name AND	AppName Like 'Dragon Naturally%') + 
						  	 (SELECT	COUNT(AppName)
										FROM	[pcInventory].[dbo].[AppLog_Applications] a
											JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
										WHERE	s.AppComputer = @name AND	AppName Like 'Essentris%') + 
									(SELECT	COUNT(AppName)
										FROM	[pcInventory].[dbo].[AppLog_Applications] a
											JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
										WHERE	s.AppComputer = @name AND	AppName Like 'Scansoft%')

	IF (@win7 > 0)
	BEGIN
		IF (@ahlta > 0)
		BEGIN
			INSERT	INTO #tempStandard(AppName)
			SELECT	AppName
			FROM	[pcInventory].[dbo].[AppLog_StandardApps]
			WHERE	Win7 = 'true'
				AND	Clinical = 'true'
			ORDER BY AppName
		END
		ELSE IF (@ahlta = 0)
		BEGIN
			INSERT	INTO #tempStandard(AppName)
			SELECT	AppName
			FROM	[pcInventory].[dbo].[AppLog_StandardApps]
			WHERE	Win7 = 'true'
				AND	[Admin] = 'true'
			ORDER BY AppName
		END	
	END
	ELSE IF (@xp > 0)
	BEGIN
		IF (@ahlta > 0)
		BEGIN
			INSERT	INTO #tempStandard(AppName)
			SELECT	AppName
			FROM	[pcInventory].[dbo].[AppLog_StandardApps]
			WHERE	Xp = 'true'
				AND	Clinical = 'true'
			ORDER BY AppName
		END
		ELSE IF (@ahlta = 0)
		BEGIN
			INSERT	INTO #tempStandard(AppName)
			SELECT	AppName
			FROM	[pcInventory].[dbo].[AppLog_StandardApps]
			WHERE	Xp = 'true'
				AND	[Admin] = 'true'
			ORDER BY AppName
		END
	END
		
	--SELECT	AppName
	--FROM	#tempStandard
	--ORDER BY AppName ASC

	SELECT	*
	INTO	#tempApps
	FROM	(
				SELECT DISTINCT a.AppName, 2 AS Ordinal
				FROM	[pcInventory].[dbo].[AppLog_Applications] a
					JOIN	[pcInventory].[dbo].[AppLog_ApplicationDef] d ON a.AppName = d.AppName
						JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
				WHERE	s.AppComputer = @name
					AND	a.AppName NOT IN (SELECT	TOP 1 AppName
										FROM	[pcInventory].[dbo].[AppLog_Applications] a
											JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
										WHERE	s.AppComputer = @name
										)
						AND	a.AppName NOT IN (SELECT AppName FROM #tempStandard)
							AND d.Track = 'true'
				
				--UNION
				
				--SELECT	TOP 1 AppName, 1 AS Ordinal
				--FROM	[pcInventory].[dbo].[AppLog_Applications] a
				--	JOIN	[pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
				--WHERE	s.AppComputer = @name
			) AS tmp

	SELECT	AppName
	FROM	#tempApps
	ORDER BY Ordinal ASC, AppName ASC

									
	--SELECT	AppName
	--FROM	#tempStandard t
	--WHERE	NOT EXISTS (SELECT a.AppName 
	--					FROM	[pcInventory].[dbo].[AppLog_Applications] a
	--						JOIN [pcInventory].[dbo].[AppLog_Systems] s ON a.AppId = s.AppID
	--					WHERE	s.AppComputer = @name
	--						AND	t.AppName = a.AppName
	--					)
	--ORDER BY AppName

	SELECT	@win7 AS Win7, @xp AS Xp, @ahlta AS Clinical

	DROP	TABLE #tempApps
	DROP	TABLE #tempStandard
END
GO
/****** Object:  StoredProcedure [dbo].[spGetDmlssData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 7/2/2009
-- Description:	Dynamic SP to grab DMLSS Data
-- =============================================
CREATE PROCEDURE [dbo].[spGetDmlssData]
	-- Add the parameters for the stored procedure here
	@sql varchar(MAX)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	EXEC ('SELECT  Ecn, Ecn5, d.Manufacturer, NameplateModel, Nomenclature, CustodianName, CustomerName, CustomerId
	FROM DmlssData d LEFT JOIN Alias a ON d.Manufacturer = a.Manufacturer WHERE 1 = 1' + @sql + '')
END


SELECT  Ecn, Ecn5, d.Manufacturer, NameplateModel, Nomenclature, CustodianName, CustomerName, CustomerId
	FROM DmlssData d LEFT JOIN Alias a ON d.Manufacturer = a.Manufacturer where 1 = 0
GO
/****** Object:  StoredProcedure [dbo].[spGetCustodians]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetCustodians] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT	DISTINCT d.CustodianName
	FROM	DMLSS d
		JOIN	nomenclature n ON d.nomenclature = n.nomenclature
	ORDER BY d.CustodianName
END
GO
/****** Object:  StoredProcedure [dbo].[spGetCustodianProperty]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetCustodianProperty] 
	-- Add the parameters for the stored procedure here
	@custodian varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT TOP 1000 [Ecn]
		,[Ecn5]
		,[MfrSerialNo]
		,[NameplateModel]
		,[Nomenclature]
		,[Manufacturer]
		,[CommonModel]
		,[EquipmentLocation]
		,[CustomerId]
		,[CustomerName]
		,[CustodianName]
	FROM [pcInventory].[dbo].[DMLSS]
	WHERE	CustodianName = @custodian
	ORDER BY Ecn
END
GO
/****** Object:  StoredProcedure [dbo].[spGetOfficeData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetOfficeData]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	

	DECLARE	@tot int
	DECLARE @office2007 int
	DECLARE	@office2003 int
	DECLARE	@none int
	DECLARE	@per2007 decimal(4,1)
	DECLARE	@per2003 decimal(4,1)
	DECLARE	@perNone decimal(4,1)

	SET	@tot =	 
				(SELECT	COUNT(DISTINCT AppComputer) AS 'tot'
				FROM	[AppLog_Systems])

	SET	@office2007 =
				(SELECT	COUNT(DISTINCT AppComputer) AS 'office2007'
				FROM	[AppLog_Systems] s
					JOIN	AppLog_Applications a ON s.AppId = a.AppId
				WHERE	AppName LIKE 'Microsoft Office Professional Plus 2007')

	SET	@office2003 =
				(SELECT	COUNT(DISTINCT AppComputer) AS 'office2003'
				FROM	[AppLog_Systems] s
					JOIN	AppLog_Applications a ON s.AppId = a.AppId
				WHERE	AppName LIKE 'Microsoft Office Professional Edition 2003')

	SET	@none =
				(SELECT	COUNT(DISTINCT AppComputer) AS 'office2003'
				FROM	[AppLog_Systems] s
				WHERE	AppComputer NOT IN (SELECT DISTINCT AppComputer 
											FROM	[AppLog_Systems] s
												JOIN	AppLog_Applications a ON s.AppId = a.AppId
											WHERE	AppName LIKE 'Microsoft Office Professional%'))
				
	SET	@per2007 = (@office2007 * 100 * 1.0/@tot)
	SET	@per2003 = (@office2003 * 100 * 1.0/@tot)
	SET	@perNone = (@none * 100 * 1.0/@tot)

	--SELECT	@tot AS 'Total', @office2007 AS 'Office 2007', @office2003 AS 'Office 2003', @none AS 'No Office', @per2007 AS '2007 Percentage', @per2003 AS '2003 Percentage', @perNone AS 'No Office Percentage'
	SELECT SUM(@office2007) AS [Sum], 'Office 2007' AS 'Name'
	UNION ALL
	SELECT SUM(@office2003) AS [Sum], 'Office 2003' AS 'Name'
	UNION ALL
	SELECT SUM(@none) AS [Sum], 'No Office' AS 'Name'
END
GO
/****** Object:  StoredProcedure [dbo].[spGetMergedData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 20, 2009
-- Description:	Stored Proc to grab matching ECN and Name0 values
-- =============================================
CREATE PROCEDURE [dbo].[spGetMergedData] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT	Ecn, Ecn5, Manufacturer, Model, Nomenclature, Custodian, Name, Name5, SccmManufacturer, SccmModel, UserName
	FROM    dbo.DmlssSccm
	ORDER BY Ecn
END
GO
/****** Object:  StoredProcedure [dbo].[spGetLifecycleCombo]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetLifecycleCombo]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT	Ecn
			, Name
			, Alias
			, ModelAlias
			, Manufacturer
			, NameplateModel
			, Manufacturer2
			, Model
			, OperatingSystem
			, SerialNumber
			, Nomenclature
			, UserName
			, CustodianName
			, CustomerID
			, CustomerName
			, CustomerName2
			, CustodianPhone
			, Active
			, Lifecycle
			, Ahlta
	FROM	dbo.LifecycleDmlssSccm
	ORDER BY ECN
END
GO
/****** Object:  StoredProcedure [dbo].[spGetLdapSccmDiscrepancies]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetLdapSccmDiscrepancies] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
    
    SELECT	DISTINCT Name AS 'SccmName', '' AS 'LdapName'
	FROM	SmsComputer
	WHERE	Name NOT IN (SELECT DISTINCT UsamitcName FROM UsamitcDesktopStandardizationData)

	UNION ALL

	SELECT	'' AS 'SccmName', UsamitcName AS 'LdapName'
	FROM	dbo.UsamitcDesktopStandardizationData
	WHERE	UsamitcName NOT IN (SELECT DISTINCT Name FROM SmsComputer)

	ORDER BY 'LdapName', 'SccmName'
    
	--SELECT	DISTINCT Name AS 'SccmName', '' AS 'LdapName'
	--FROM	SmsComputer
	--WHERE	Name NOT IN (SELECT DISTINCT Name FROM LdapSystem)
	
	--UNION ALL
	
	--SELECT	'' AS 'SccmName', Name AS 'LdapName'
	--FROM	LdapSystem
	--WHERE	Name NOT IN (SELECT DISTINCT Name FROM SmsComputer)
	
	--ORDER BY 'LdapName', 'SccmName'
END
GO
/****** Object:  StoredProcedure [dbo].[spGetGrandTotal]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 05-25-2010
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetGrandTotal] (
	@ID INT, 
	@GT FLOAT = NULL OUTPUT)
	
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    
  DECLARE @SQL VARCHAR(MAX)
    
  SET @SQL = 'SELECT SUM(TotalCost) AS GTotal '
	SET @SQL = @SQL + 'FROM Form3161Items '
	SET @SQL = @SQL + 'WHERE InstanceId = ' + CAST(@ID AS VARCHAR)
	
	
	DROP TABLE [dbo].[tmp_GrandTotal]
	CREATE TABLE [dbo].[tmp_GrandTotal] (GTotal float) 
	INSERT INTO [dbo].[tmp_GrandTotal]
	EXEC (@SQL)
	
	SET @GT = (SELECT GTotal FROM [dbo].[tmp_GrandTotal])
	
	IF @GT = NULL
		RETURN 0.0
	ELSE
		RETURN @GT
		
END
GO
/****** Object:  StoredProcedure [dbo].[SWInventorySelectedECN]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWInventorySelectedECN]

@thisECN NvarChar (50)
as
Select S.COMPUTERNAME, S.APPLICATION, CustodianName from YourHandReceipt as Y
JOIN SoftWare as S
on RIGHT(COMPUTERNAME,7) = RIGHT(Y.MfrSerialNo,7)
where ECN = @thisECN
UNION
Select S.COMPUTERNAME, S.APPLICATION, CustodianName from YourHandReceipt as Y
JOIN SoftWare as S
on RIGHT (COMPUTERNAME, 5) = Y.ECN
where ECN = @thisECN
order by S.APPLICATION
GO
/****** Object:  StoredProcedure [dbo].[SWInventorySelected_SW]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWInventorySelected_SW]

@thisSW NVARCHAR (255)

AS 
SELECT  Y.ECN, Y.CustodianName, S.USERNAME, S.COMPUTERNAME, S.APPLICATION FROM YourHandReceipt as Y
JOIN SoftWare as S
on RIGHT(COMPUTERNAME,7) = RIGHT(Y.MfrSerialNo,7)
WHERE S.APPLICATION = @thisSW
UNION
SELECT  Y.ECN, Y.CustodianName, S.USERNAME, S.COMPUTERNAME, S.APPLICATION FROM YourHandReceipt as Y
JOIN SoftWare as S
on RIGHT(COMPUTERNAME,5) = Y.ECN
WHERE S.APPLICATION = @thisSW
GO
/****** Object:  StoredProcedure [dbo].[SWInventoryHitCounter]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWInventoryHitCounter]

@UserName NVARCHAR (150),
@PageURL NVARCHAR (150)

AS

INSERT INTO SoftwareHitCounter
(UserName, PageURL, DateTime)
Values
(@UserName, @PageURL, GETDATE())
GO
/****** Object:  StoredProcedure [dbo].[SWInventoryddlBySW]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWInventoryddlBySW]
AS
Select DISTINCT APPLICATION FROM SoftWare
where APPLICATION IS NOT NULL
ORDER BY APPLICATION
GO
/****** Object:  StoredProcedure [dbo].[SWInventoryddlByECN]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SWInventoryddlByECN]
AS 
Select DISTINCT ECN from YourHandReceipt as Y
JOIN SoftWare as S
on RIGHT(COMPUTERNAME,7) = RIGHT(Y.MfrSerialNo,7)
UNION
Select DISTINCT ECN from YourHandReceipt as Y
JOIN SoftWare as S
on RIGHT (COMPUTERNAME, 5) = Y.ECN
order by ECN
GO
/****** Object:  StoredProcedure [dbo].[spInsertSystem]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-9-2012
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spInsertSystem]
	(@ComputerName VARCHAR(50), @UserName VARCHAR(50))
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @c INT;
	
	SET @c = (SELECT COUNT(UserName) FROM PrinterLog_Systems 
	WHERE UserName = @UserName AND Computer = @ComputerName) 
	SELECT @c

	-- Don't add user if exists	
	IF (@c = 0)
	BEGIN
	    INSERT INTO PrinterLog_Systems (Computer, UserName) VALUES (@ComputerName, @UserName);
	END
END
GO
/****** Object:  StoredProcedure [dbo].[spInsertStandardData]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-9-2012
-- Description:	Reset tables for new data import
-- =============================================
CREATE PROCEDURE [dbo].[spInsertStandardData]
	@app varchar(255),
	@clinical varchar(50),
	@admin varchar(50),
	@xp varchar(50),
	@win7 varchar(50),
	@track varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @count int
	
	SET	@count = (SELECT COUNT(AppName) FROM	AppLog_StandardApps	WHERE	AppName = @app)
	
	IF (@count > 0)
	BEGIN
		IF (@clinical = 'true')
			UPDATE	AppLog_StandardApps
			SET		Clinical = @clinical
			WHERE	AppName = @app
		
		IF (@admin = 'true')
			UPDATE	AppLog_StandardApps
			SET		[Admin] = @admin
			WHERE	AppName = @app
		
		IF (@xp = 'true')
			UPDATE	AppLog_StandardApps
			SET		Xp = @xp
			WHERE	AppName = @app
		
		IF (@win7 = 'true')
			UPDATE	AppLog_StandardApps
			SET		Win7 = @win7
			WHERE	AppName = @app
		
		IF (@track = 'true')
			UPDATE	AppLog_StandardApps
			SET		Track = @track
			WHERE	AppName = @app
	END
	ELSE
		INSERT INTO AppLog_StandardApps(AppName, Clinical, [Admin], Xp, Win7, Track)
		VALUES(@app, @clinical, @admin, @xp, @win7, @track)
END
GO
/****** Object:  StoredProcedure [dbo].[spGetPrintersByIp]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGetPrintersByIp] 
	-- Add the parameters for the stored procedure here
	@ip varchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	--SET NOCOUNT ON;
	--DECLARE @ip varchar(255)
	--SET		@ip = '10.249.65.157'
    -- Insert statements for procedure here
	
	SELECT DISTINCT p.Computer, Printer, MAX(FileDate) AS FileDate
	FROM [pcInventory].[dbo].[PrinterLog_Printers] p 
		JOIN [pcInventory].[dbo].[PrinterLog_Systems] s ON p.SysId = s.SysId 
	WHERE (Printer LIKE '%' + @ip + '%'
		OR	Port LIKE '%%' + @ip + '%')
	GROUP BY p.Computer, Printer
	ORDER BY p.Computer, Printer
END
GO
/****** Object:  StoredProcedure [dbo].[spInsertWin7LdapData]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spInsertWin7LdapData] 
	-- Add the parameters for the stored procedure here
	@name varchar(64),
	@os varchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	INSERT	INTO	Win7Ldap(Name, Os)
			VALUES(@name, @os)
END
GO
/****** Object:  StoredProcedure [dbo].[spInsertToPrinterLog]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: 5-4-2012
-- Description:	Save printer info from text file
-- =============================================
CREATE PROCEDURE [dbo].[spInsertToPrinterLog] (
	@ComputerName NVARCHAR(50), @UserName NVARCHAR(50), 
	@Port NVARCHAR(50), @Printer NVARCHAR(50)
) 

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    DECLARE @SysID INT;
    
	INSERT INTO dbo.PrinterLog_Systems (Computer, UserName) VALUES (@ComputerName, @UserName)
	
	SET @SysID = (SELECT MAX([PrinterLog_Systems].[SysID]) FROM [dbo].[PrinterLog_Systems])
	
	INSERT INTO dbo.PrinterLog_Printers (SysID, Port, Printer) VALUES (@SysID, @Port, @Printer)
	
END
GO
/****** Object:  StoredProcedure [dbo].[spInsertToApplicationLog]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: 5-4-2012
-- Description:	Save printer info from text file
-- =============================================
CREATE PROCEDURE [dbo].[spInsertToApplicationLog] (
	@ComputerName NVARCHAR(50), @UserName NVARCHAR(50), 
	@Os NVARCHAR(255), @Name NVARCHAR(255)
) 

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    DECLARE @AppID INT;
    
	INSERT INTO dbo.AppLog_Systems (AppComputer, AppUser) VALUES (@ComputerName, @UserName)
	
	SET @AppID = (SELECT MAX(AppLog_Systems.[AppID]) FROM [dbo].AppLog_Systems)
	
	INSERT INTO dbo.AppLog_Applications (AppID, AppOs, AppName) VALUES (@AppID, @Os, @Name)
	
END
GO
/****** Object:  StoredProcedure [dbo].[spLifeCycleRobertDetail]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spLifeCycleRobertDetail]
	-- Add the parameters for the stored procedure here
	@criteria varchar(100)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for procedure here
	SELECT	DISTINCT SMSComputer.Name, SMSComputer.Name5, DMLSS.ECN
	FROM	SMSComputer LEFT JOIN
				DMLSS ON SMSComputer.Name5 = DMLSS.ECN5 RIGHT JOIN
					ModelAlias ON ModelALias.Model = SMSComputer.Model LEFT JOIN
						Alias ON ModelAlias.Manufacturer = Alias.Manufacturer RIGHT JOIN 
							lcFacility ON LEFT(SMSComputer.Name, 8) = lcFacility.facilityID 
	WHERE      (lcFacility.facilityName = 'Eisenhower')
		AND		Alias.Alias + ' ' + ModelAlias.ModelAlias = @criteria
	ORDER BY SMSComputer.Name

END
GO
/****** Object:  StoredProcedure [dbo].[spLifeCycleRobert]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spLifeCycleRobert]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
    -- Insert statements for procedure here
	SELECT	manu + ' ' + modl as model, manu, modl, COUNT(*) AS tot
	FROM	(
			SELECT  Alias.Alias AS manu, ModelAlias.ModelAlias AS modl
			FROM    ModelAlias RIGHT JOIN
						SMSComputer ON ModelAlias.Model = SMSComputer.Model LEFT JOIN
							Alias ON ModelAlias.Manufacturer = Alias.Manufacturer RIGHT JOIN 
								lcFacility ON LEFT(SMSComputer.Name, 8) = lcFacility.facilityID LEFT JOIN
									modelStatus ON modelStatus.Model = Alias.Alias + ' ' + ModelAlias.ModelAlias
			WHERE      (lcFacility.facilityName = 'Eisenhower')
				AND modelStatus.modelStatus = 1
			) 
	AS A
	GROUP BY manu, modl
	ORDER BY model, tot DESC				
END
GO
/****** Object:  StoredProcedure [dbo].[spPrinterLog_AddPrinters]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 5/11/2012
-- Description:	Insert new printers into the printer manager
-- =============================================
CREATE PROCEDURE [dbo].[spPrinterLog_AddPrinters] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
    -- Insert statements for procedure here
	INSERT	INTO [pcInventory].[dbo].[PrinterLog_PrinterManager]
	SELECT	DISTINCT Port, Computer, 'true', '', ''
	FROM	[pcInventory].[dbo].[PrinterLog_Printers]
		WHERE Port + '/' + Computer NOT IN (SELECT Port + '/' + Printer FROM [pcInventory].[dbo].[PrinterLog_PrinterManager])
END
GO
/****** Object:  StoredProcedure [dbo].[spPCTot]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Name
-- Create date: 
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spPCTot] 
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT Count(*) as count FROM Sccm
END
GO
/****** Object:  StoredProcedure [dbo].[spMergeCount]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 20, 2009
-- Description:	Stored Proc to grab the count for matching ECN and Name0 values
-- =============================================
CREATE PROCEDURE [dbo].[spMergeCount] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT	COUNT(DMLSS.Ecn) AS MergeCount
	FROM	DMLSS INNER JOIN
				SMSComputer ON (DMLSS.Ecn5 = SMSComputer.Name5) 
	WHERE	nomenclature IN (SELECT nomenclature FROM computer_nomenclature)

END
GO
/****** Object:  StoredProcedure [dbo].[spMerge]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 20, 2009
-- Description:	Stored Proc to grab matching ECN and Name0 values
-- =============================================
CREATE PROCEDURE [dbo].[spMerge] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT	DMLSS.Ecn5, DMLSS.Ecn, DMLSS.Nomenclature, DMLSS.CustodianName, DMLSS.Manufacturer, DMLSS.NameplateModel, 
				SMSComputer.Name5 AS Name5, SMSComputer.Name, SMSComputer.Manufacturer AS Manufacturer0, SMSComputer.Model, SMSComputer.UserName
	FROM    DMLSS INNER JOIN
				SMSComputer ON DMLSS.Ecn5 = SMSComputer.Name5
    WHERE	nomenclature IN (SELECT nomenclature FROM computer_nomenclature)
	ORDER BY DMLSS.Ecn
END
GO
/****** Object:  StoredProcedure [dbo].[spResetApplicationData]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-9-2012
-- Description:	Reset tables for new data import
-- =============================================
CREATE PROCEDURE [dbo].[spResetApplicationData]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DELETE	FROM	AppLog_Systems
	DELETE	FROM	AppLog_Applications
	DBCC CHECKIDENT('dbo.AppLog_Systems', RESEED, 0);
	
END
GO
/****** Object:  StoredProcedure [dbo].[spReset____PrintersData]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-22-2012
-- Description:	Reset tables for new data import
-- =============================================
CREATE PROCEDURE [dbo].[spReset____PrintersData]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
/*
	DECLARE @sysid INT;
	
	WHILE (SELECT COUNT(SysID) FROM TestPrinter_Systems) > 0
	BEGIN
		SET @sysid = (SELECT MIN(TestPrinter_Systems.SysID) FROM TestPrinter_Systems);
		SELECT @sysid;
		
		IF @sysid > 0 
		BEGIN
			DELETE FROM TestPrinter_Systems WHERE TestPrinter_Systems.SysID = @sysid;
		END
		PRINT @sysid
	END
*/
	DELETE	FROM	TestPrinter_Systems
	DELETE	FROM	TestPrinters_Printers	
	DBCC CHECKIDENT('dbo.TestPrinter_Systems', RESEED, 0);
	
END
GO
/****** Object:  View [dbo].[vwSCCMniDMLSS]    Script Date: 10/05/2018 13:10:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vwSCCMniDMLSS]
AS
SELECT     Ecn, Ecn5, Manufacturer, Model, Nomenclature, Custodian, Name, Name5, SccmManufacturer, SccmModel, UserName
FROM         dbo.DmlssSccm
WHERE     (Ecn5 NOT IN
                          (SELECT     DL.Ecn5
                            FROM          dbo.DMLSS AS DL INNER JOIN
                                                   dbo.DmlssSccm AS DS ON DS.Ecn5 = DL.Ecn5
                            WHERE      (DL.Nomenclature LIKE '%computer%')))
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "DmlssSccm"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 216
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vwSCCMniDMLSS'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vwSCCMniDMLSS'
GO
/****** Object:  View [dbo].[vwDmlssSccmLifecycleNew]    Script Date: 10/05/2018 13:10:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[vwDmlssSccmLifecycleNew] 
AS
SELECT	TOP 100 PERCENT d.Ecn, s.Name, d.Manufacturer, ab.Alias, d.NameplateModel, mb.ModelAlias, s.Manufacturer AS ManufacturerS, s.Model, o.Caption, d.MfrSerialNo, d.Nomenclature, s.UserName, d.CustodianName, d.CustomerName, d.CustomerId, c.CustomerName AS CustName, c.CustodianPhone,
	CASE COALESCE(name5,'')
		WHEN ''
			THEN 'Inactive'
		ELSE
			'Active'
		END AS Active,
	CASE COALESCE(mb.LifecycleStatus,'false')
		WHEN 'false'
			THEN 'Out of Lifecycle'
		ELSE
			'In Lifecycle'
		END AS Lifecycle,
	CASE COALESCE(p.MachineID,'')
		WHEN ''
			THEN 'No'
		ELSE
			'Yes'
		END AS Ahlta,
	CASE COALESCE(mb.AliasStatus,'false')
		WHEN 'false'
			THEN 'Removed From List'
		ELSE
			''
		END AS Listed
FROM	DMLSS d
	LEFT JOIN custodian c ON d.customerId = c.customerId
		JOIN computer_nomenclature n ON d.nomenclature = n.nomenclature
			RIGHT OUTER JOIN SMSComputer s ON d.ecn5 = s.name5
				LEFT JOIN SMSOperating_System o ON s.MachineID = o.MachineID
					LEFT OUTER JOIN Alias ab ON s.Manufacturer = ab.Manufacturer
						LEFT OUTER JOIN ModelAlias mb ON s.Model = mb.Model
							LEFT OUTER JOIN (SELECT MachineID FROM AhltaPC WHERE (Program = 'Ahlta' OR Program = 'CHCSII') GROUP BY MachineID) p ON s.MachineID = p.MachineID
	WHERE d.ecn5 IS NULL
UNION

SELECT	TOP 100 PERCENT d.Ecn, s.Name, d.Manufacturer, a.Alias, d.NameplateModel, m.ModelAlias, s.Manufacturer AS ManufacturerS, s.Model, o.Caption, d.MfrSerialNo, d.Nomenclature, s.UserName, d.CustodianName, d.CustomerName, d.CustomerId, c.CustomerName AS CustName, c.CustodianPhone,
	CASE COALESCE(name5,'')
		WHEN ''
			THEN 'Inactive'
		ELSE
			'Active'
		END AS Active,
	CASE COALESCE(LifecycleStatus,'false')
		WHEN 'false'
			THEN 'Out of Lifecycle'
		ELSE
			'In Lifecycle'
		END AS Lifecycle,
	CASE COALESCE(p.MachineID,'')
		WHEN ''
			THEN 'No'
		ELSE
			'Yes'
		END AS Ahlta,
	CASE COALESCE(m.AliasStatus,'false')
		WHEN 'false'
			THEN 'Removed From List'
		ELSE
			''
		END AS Listed
FROM	DMLSS d
	LEFT JOIN custodian c ON d.customerId = c.customerId
		JOIN computer_nomenclature n ON d.nomenclature = n.nomenclature
			JOIN Alias a ON d.Manufacturer = a.Manufacturer
				JOIN ModelAlias m ON d.NameplateModel = m.Model 
					LEFT OUTER JOIN SMSComputer s ON d.ecn5 = s.name5
						LEFT JOIN SMSOperating_System o ON s.MachineID = o.MachineID
							LEFT OUTER JOIN (SELECT MachineID FROM AhltaPC WHERE (Program = 'Ahlta' OR Program = 'CHCSII') GROUP BY MachineID) p ON s.MachineID = p.MachineID
ORDER BY Ecn
GO
/****** Object:  View [dbo].[vwDmlssSccmLifecycle]    Script Date: 10/05/2018 13:10:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
CREATE VIEW [dbo].[vwDmlssSccmLifecycle] 
AS
SELECT	TOP 100 PERCENT d.Ecn, s.Name, d.Manufacturer, ab.Alias, d.NameplateModel, mb.ModelAlias, s.Manufacturer AS ManufacturerS, s.Model, o.Caption, d.MfrSerialNo, d.Nomenclature, s.UserName, d.CustodianName, d.CustomerName, d.CustomerId, c.CustomerName AS CustName, c.CustodianPhone,
	CASE COALESCE(name5,'')
		WHEN ''
			THEN 'Inactive'
		ELSE
			'Active'
		END AS Active,
	CASE COALESCE(mb.LifecycleStatus,'false')
		WHEN 'false'
			THEN 'Out of Lifecycle'
		ELSE
			'In Lifecycle'
		END AS Lifecycle,
	CASE COALESCE(p.MachineID,'')
		WHEN ''
			THEN 'No'
		ELSE
			'Yes'
		END AS Ahlta
FROM	DMLSS d
	LEFT JOIN custodian c ON d.customerId = c.customerId
		JOIN computer_nomenclature n ON d.nomenclature = n.nomenclature
			RIGHT OUTER JOIN SMSComputer s ON d.ecn5 = s.name5
				LEFT JOIN SMSOperating_System o ON s.MachineID = o.MachineID
					LEFT OUTER JOIN Alias ab ON s.Manufacturer = ab.Manufacturer
						LEFT OUTER JOIN ModelAlias mb ON s.Model = mb.Model
							LEFT OUTER JOIN (SELECT MachineID FROM AhltaPC WHERE (Program = 'Ahlta' OR Program = 'CHCSII') GROUP BY MachineID) p ON s.MachineID = p.MachineID
	WHERE d.ecn5 IS NULL
		AND mb.Manufacturer = ab.Alias
			AND mb.AliasStatus = 'true'
UNION

SELECT	TOP 100 PERCENT d.Ecn, s.Name, d.Manufacturer, a.Alias, d.NameplateModel, m.ModelAlias, s.Manufacturer AS ManufacturerS, s.Model, o.Caption, d.MfrSerialNo, d.Nomenclature, s.UserName, d.CustodianName, d.CustomerName, d.CustomerId, c.CustomerName AS CustName, c.CustodianPhone,
	CASE COALESCE(name5,'')
		WHEN ''
			THEN 'Inactive'
		ELSE
			'Active'
		END AS Active,
	CASE COALESCE(LifecycleStatus,'false')
		WHEN 'false'
			THEN 'Out of Lifecycle'
		ELSE
			'In Lifecycle'
		END AS Lifecycle,
	CASE COALESCE(p.MachineID,'')
		WHEN ''
			THEN 'No'
		ELSE
			'Yes'
		END AS Ahlta		
FROM	DMLSS d
	LEFT JOIN custodian c ON d.customerId = c.customerId
		JOIN computer_nomenclature n ON d.nomenclature = n.nomenclature
			JOIN Alias a ON d.Manufacturer = a.Manufacturer
				JOIN ModelAlias m ON d.NameplateModel = m.Model 
					AND a.Alias = m.Manufacturer
						LEFT OUTER JOIN SMSComputer s ON d.ecn5 = s.name5
							LEFT JOIN SMSOperating_System o ON s.MachineID = o.MachineID
								LEFT OUTER JOIN (SELECT MachineID FROM AhltaPC WHERE (Program = 'Ahlta' OR Program = 'CHCSII') GROUP BY MachineID) p ON s.MachineID = p.MachineID
WHERE	m.AliasStatus = 'true'
ORDER BY Ecn
GO
/****** Object:  View [dbo].[vwDMLSSSCCMAcqDate]    Script Date: 10/05/2018 13:10:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vwDMLSSSCCMAcqDate]
AS
SELECT     dbo.DmlssSccm.Ecn5 AS Expr1, dbo.DMLSS.AcqDate, dbo.DmlssSccm.Ecn, dbo.DmlssSccm.Manufacturer, dbo.DmlssSccm.Model, dbo.DmlssSccm.Nomenclature, 
                      dbo.DmlssSccm.Custodian, dbo.DmlssSccm.Name, dbo.DmlssSccm.SccmManufacturer, dbo.DmlssSccm.SccmModel, dbo.DmlssSccm.UserName
FROM         dbo.DmlssSccm INNER JOIN
                      dbo.DMLSS ON dbo.DmlssSccm.Ecn = dbo.DMLSS.Ecn5
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "DmlssSccm"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 216
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "DMLSS"
            Begin Extent = 
               Top = 6
               Left = 254
               Bottom = 125
               Right = 521
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vwDMLSSSCCMAcqDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vwDMLSSSCCMAcqDate'
GO
/****** Object:  View [dbo].[vwDMLSSniSCCM]    Script Date: 10/05/2018 13:10:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vwDMLSSniSCCM]
AS
SELECT     TOP (100) PERCENT Ecn5, Nomenclature, AcqDate, CustodianName, CustomerName
FROM         dbo.DMLSS
WHERE     (Ecn5 NOT IN
                          (SELECT     DS.Ecn5
                            FROM          dbo.DmlssSccm AS DS INNER JOIN
                                                   dbo.DMLSS AS DL ON DL.Ecn5 = DS.Ecn5)) AND (Nomenclature LIKE '%COMPUTER%')
ORDER BY Nomenclature
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "DMLSS"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 305
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1830
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vwDMLSSniSCCM'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vwDMLSSniSCCM'
GO
/****** Object:  StoredProcedure [dbo].[VoglerHR_SP]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[VoglerHR_SP]
AS
select * from YourHandReceipt
where CustodianName = 'Vogler, Mark'
order by Location
GO
/****** Object:  StoredProcedure [dbo].[spTest]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spTest]

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	
	RETURN (SELECT (MAX(InstanceID) + 1) AS MX FROM Form2062Instances) 
END
GO
/****** Object:  StoredProcedure [dbo].[spSWIPCNameDDL]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spSWIPCNameDDL]

AS 

Select DISTINCT COMPUTERNAME FROM SoftWare
where APPLICATION IS NOT NULL
ORDER BY COMPUTERNAME
GO
/****** Object:  StoredProcedure [dbo].[spSWIAppDDL]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spSWIAppDDL]

AS 

Select DISTINCT APPLICATION FROM SoftWare
where APPLICATION IS NOT NULL
ORDER BY APPLICATION
GO
/****** Object:  StoredProcedure [dbo].[spSnSearch]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spSnSearch]
	-- Add the parameters for the stored procedure here
		@sn NVARCHAR(MAX)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT	ecn, ecn5
	FROM	DMLSS
	WHERE	MfrSerialNo LIKE '%' + @sn +'%'
	
	
	
	--DECLARE @curSn varchar(max)

 --   -- Insert statements for procedure here
	--IF OBJECT_ID('tempdb..#tempDmlssSn') IS NOT NULL
	--BEGIN
	--	DROP TABLE #tempDmlssSn
	--END
	
	--CREATE TABLE #tempDmlssSn
	--(
	--	Ecn5 varchar(255), 
	--	Ecn varchar(255), 
	--	MfrSerialNo varchar(255), 
	--	NameplateModel varchar(255),
	--	MedicalEquipmentMeAcqCostQty float,
	--	AcqDate datetime,
	--	ItemID varchar(255),
	--	Nomenclature varchar(255),
	--	LifeExp varchar(255), 
	--	Manufacturer varchar(255),
	--	CommonModel varchar(255),
	--	EquipmentLocation varchar(255), 
	--	Ownership varchar(255), 
	--	MaintAct varchar(255),
	--	MtfOrgNm varchar(255),
	--	CustomerId varchar(255), 
	--	CustomerName varchar(255), 
	--	CustodianName varchar(255)
	--)

	--SET @sn = @sn + ','

	--WHILE CHARINDEX(',', @sn) > 0
	--BEGIN
	--	SET @curSn = SUBSTRING(@sn, 0, CHARINDEX(',', @sn))
	--	SET @sn = SUBSTRING(@sn, CHARINDEX(',', @sn) + 1, LEN(@sn))
		
	--	INSERT	INTO #tempDmlssSn
	--	SELECT	Ecn5, 
	--			Ecn, 
	--			MfrSerialNo, 
	--			NameplateModel,
	--			MedicalEquipmentMeAcqCostQty,
	--			AcqDate,
	--			ItemID,
	--			Nomenclature,
	--			LifeExp, 
	--			Manufacturer,
	--			CommonModel,
	--			EquipmentLocation, 
	--			Ownership, 
	--			MaintAct,
	--			MtfOrgNm,
	--			CustomerId, 
	--			CustomerName, 
	--			CustodianName
	--	FROM	DMLSS
	--	WHERE	MfrSerialNo LIKE '%' + @curSn + '%'

	--END

	--SELECT	Ecn5, Ecn, MfrSerialNo, NameplateModel,MedicalEquipmentMeAcqCostQty,CONVERT(VARCHAR(11),AcqDate,113) AS AcqDate,ItemID,Nomenclature,LifeExp, Manufacturer AS DMLSSManufacturer,CommonModel,EquipmentLocation, Ownership, MaintAct,MtfOrgNm,CustomerId, CustomerName, CustodianName 
	--FROM	#tempDmlssSn
	
	
END
GO
/****** Object:  StoredProcedure [dbo].[spSccmSearch]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: July 21, 2009
-- Description:	Stored Proc to grab data for DMLSS entry
-- =============================================
CREATE PROCEDURE [dbo].[spSccmSearch] 
	-- Add the parameters for the stored procedure here
		@ecn5 NVARCHAR(MAX)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @sql varchar(1000)

    -- Insert statements for procedure here
  -- 11-3-2014 changed from this:
	--SET @sql = 'SELECT Description, Domain, InstanceKey, MachineID, Manufacturer,Model, Name, 
	--NumberOfProcessors, Roles, Status, SystemType, UserName, CONVERT(VARCHAR(11),TimeKey,113) AS TimeKey 
	--FROM SMSComputer 
	--WHERE Name5 IN (' + @ecn5 + ')'
	--EXEC (@sql)
	
	SELECT Description, Domain, InstanceKey, MachineID, Manufacturer,Model, Name, 
	NumberOfProcessors, Roles, Status, SystemType, UserName, CONVERT(VARCHAR(11),TimeKey,113) AS TimeKey 
	FROM SMSComputer 
	WHERE Name5 IN (@ecn5)
	
END
GO
/****** Object:  StoredProcedure [dbo].[spResetPrintersData]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 5-9-2012
-- Description:	Reset tables for new data import
-- =============================================
CREATE PROCEDURE [dbo].[spResetPrintersData]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
	DELETE FROM PrinterLog_Systems
	DELETE FROM PrinterLog_Printers
	
	DBCC CHECKIDENT('dbo.PrinterLog_Systems', RESEED, 0);
	
END
GO
/****** Object:  StoredProcedure [dbo].[spUpdateData]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spUpdateData] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT * FROM DMLSS
END
GO
/****** Object:  StoredProcedure [dbo].[YourHR_All_Consolidated]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[YourHR_All_Consolidated]

AS

SELECT  Convert(varchar,[AcqDate],102) as AcqDate, [ECN5], REPLACE([Nomenclature],',','_') AS Nomenclature,[MfrSerialNo],[NameplateModel], [Manufacturer], [CustomerID], REPLACE([CustodianName],',','_') AS CustodianName, CustomerName FROM YourHRAllPCTbl
Where (Nomenclature like '%computer%' or Nomenclature like '%tablet%' or Nomenclature like '%Laptop%')
Order by CustodianName, CustomerId
GO
/****** Object:  StoredProcedure [dbo].[YourHR_ADUsers]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[YourHR_ADUsers]

as

select SurName+', '+FirstName AS Name, 'AMED\'++AccountName AS AccountName from UsersAD.dbo.EAMCUsers
where mail is not null
order by Surname, FirstName
GO
/****** Object:  StoredProcedure [dbo].[YourHRAllGvPermsTbl]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[YourHRAllGvPermsTbl]

as

select UserName, Status, Admin, RowID from YourHRAllPermissionsTbl
GO
/****** Object:  StoredProcedure [dbo].[YourHRAllAddAccess]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE Procedure [dbo].[YourHRAllAddAccess]

@UserName Nvarchar (150),
@Status Nvarchar (50),
@Admin Nvarchar(5)
 
AS

Insert into YourHRAllPermissionsTbl
(UserName, Status, Admin)
Values
(@UserName,@Status, @Admin)
GO
/****** Object:  StoredProcedure [dbo].[YourHR_HitCounterSP]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[YourHR_HitCounterSP]
@ADAccount nvarchar (150),
@PageURL nvarchar (250),
@Event nvarchar (50)


AS

INSERT INTO YourHR_HitCounter
(ADAccount, PageURL, DateTime, Event)
VALUES
(@ADAccount, @PageURL, GETDATE(), @Event)
GO
/****** Object:  StoredProcedure [dbo].[spWin7View]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/11/2009
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spWin7View] 
	-- Add the parameters for the stored procedure here
	@ahlta int,
	@os int,
	@compliance varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here 
    
    /*IF (@ahlta > -1)
		IF (@os = 1)
			IF (@compliance != 'Pass')
				SELECT DISTINCT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM,OS, Video, Ahlta
				FROM compat 
				WHERE ahlta = @ahlta 
					AND OS LIKE '%Microsoft Windows 7%'
					AND (RAM < 2000 OR clockspeed < 1000)
					
			ELSE
				SELECT DISTINCT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM,OS, Video, Ahlta
				FROM compat 
				WHERE ahlta = @ahlta 
					AND OS LIKE '%Microsoft Windows 7%'
					AND (RAM >= 2000 AND clockspeed >= 1000)
			
		ELSE IF (@os = 0)
			IF (@compliance != 'Pass')
				SELECT DISTINCT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM,OS, Video, Ahlta
				FROM compat 
				WHERE ahlta = @ahlta 
					AND OS NOT LIKE '%Microsoft Windows 7%'
					AND (RAM < 2000 OR clockspeed < 1000)
					
			ELSE
				SELECT DISTINCT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM,OS, Video, Ahlta
				FROM compat 
				WHERE ahlta = @ahlta 
					AND OS NOT LIKE '%Microsoft Windows 7%'
					AND (RAM >= 2000 AND clockspeed >= 1000)
    
    ELSE
    */
    
    IF (@os = 1)
		SELECT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM, OS, Video, Ahlta, RIGHT(Name, 5) AS Name5
		FROM compat 
		WHERE ahlta = @ahlta 
			AND OS LIKE '%Microsoft Windows 7%'
				AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
    
    IF (@os = 0)
		SELECT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM, OS, Video, Ahlta, RIGHT(Name, 5) AS Name5
		FROM compat 
		WHERE ahlta = @ahlta 
			AND OS NOT LIKE '%Microsoft Windows 7%'
				AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
			
    ELSE
		IF (@ahlta = 1)
			IF (@compliance != 'Pass')
				SELECT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM, OS, Video, Ahlta, RIGHT(Name, 5) AS Name5
				FROM compat 
				WHERE ahlta = @ahlta 
					AND (RAM < 2900 OR (clockspeed < 3000 AND processor = 0) OR (RAM IS NULL OR clockspeed IS NULL))
						AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
					
			ELSE
				SELECT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM, OS, Video, Ahlta, RIGHT(Name, 5) AS Name5
				FROM compat
				WHERE ahlta = @ahlta 
					AND (RAM >= 2900 
						AND ((clockspeed >= 3000 AND processor = 0) OR processor = 1))
							AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
		ELSE
			IF (@compliance != 'Pass')
				SELECT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM, OS, Video, Ahlta, RIGHT(Name, 5) AS Name5
				FROM compat 
				WHERE ahlta = @ahlta 
					AND (RAM < 1900 OR (clockspeed < 2000 AND processor = 0) OR (RAM IS NULL OR clockspeed IS NULL))
						AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
					
			ELSE
				SELECT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM, OS, Video, Ahlta, RIGHT(Name, 5) AS Name5
				FROM compat
				WHERE ahlta = @ahlta 
					AND (RAM >= 1900 
						AND ((clockspeed >= 2000 AND processor = 0) OR processor = 1))
							AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
    
		--IF (@os = 1)
		--	IF (@compliance != 'Pass')
		--		SELECT DISTINCT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM,OS, Video, Ahlta
		--		FROM compat 
		--		WHERE ahlta = @ahlta 
		--			AND OS LIKE '%Microsoft Windows 7%'
		--			AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
					
		--	ELSE
		--		SELECT DISTINCT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM,OS, Video, Ahlta
		--		FROM compat 
		--		WHERE ahlta = @ahlta 
		--			AND OS LIKE '%Microsoft Windows 7%'
		--			AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
			
		--ELSE IF (@os = 0)
		--	IF (@compliance != 'Pass')
		--		SELECT DISTINCT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM,OS, Video, Ahlta
		--		FROM compat 
		--		WHERE ahlta = @ahlta 
		--			AND OS NOT LIKE '%Microsoft Windows 7%'
		--			AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
					
		--	ELSE
		--		SELECT DISTINCT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM,OS, Video, Ahlta
		--		FROM compat 
		--		WHERE ahlta = @ahlta 
		--			AND OS NOT LIKE '%Microsoft Windows 7%'
		--			AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
			
		--ELSE
		--	IF (@compliance != 'Pass')
		--		SELECT DISTINCT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM,OS, Video, Ahlta
		--		FROM compat 
		--		WHERE ahlta = @ahlta 
		--			AND (RAM < 2000 OR clockspeed < 1000)
		--			AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
					
		--	ELSE
		--		SELECT DISTINCT Name, UserName, Manufacturer, Model, ClockSpeed, Processor, RAM,OS, Video, Ahlta
		--		FROM compat
		--		WHERE ahlta = @ahlta 
		--			AND (RAM >= 2000 AND clockspeed >= 1000)
		--			AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
END
GO
/****** Object:  StoredProcedure [dbo].[spWin7Tot]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/11/2009
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spWin7Tot] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here 
	SELECT DISTINCT 
		(SELECT COUNT(*) FROM compat where ahlta = 1 AND OS LIKE '%Microsoft Windows 7%' AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%') AS aTot7, 
		(SELECT COUNT(*) FROM compat where ahlta = 0 AND OS LIKE '%Microsoft Windows 7%' AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%') AS nTot7,
		(SELECT COUNT(*) FROM compat WHERE OS LIKE '%Microsoft Windows 7%' AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%') AS tot7,
		(SELECT COUNT(*) FROM compat where ahlta = 1 AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%') AS aTot, 
		(SELECT COUNT(*) FROM compat where ahlta = 0 AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%') AS nTot,
		(SELECT COUNT(*) FROM compat WHERE OS NOT LIKE 'Microsoft(R) Windows(R) Server%') AS tot
	FROM compat;
END
GO
/****** Object:  StoredProcedure [dbo].[spWin7Req]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/11/2009
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spWin7Req] 
	-- Add the parameters for the stored procedure here
	@ahlta int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here 
    
	--SELECT DISTINCT 
	--   (
	--	SELECT COUNT(*) 
	--	FROM compat
	--	WHERE ahlta = @ahlta 
	--		AND ((RAM < 1900 OR clockspeed < 1000) OR (RAM IS NULL OR clockspeed IS NULL))
	--		 AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
	--	)
	--	AS totF,
	--	(
	--	SELECT COUNT(*) 
	--	FROM compat
	--	WHERE ahlta = @ahlta
	--		AND (RAM >= 1900 AND clockspeed >= 1000)
	--		 AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
	--	)
	--	AS totP
	--FROM compat
	
	IF @ahlta = 1
		SELECT DISTINCT 
		   (
			SELECT COUNT(*) 
			FROM compat
			WHERE ahlta = @ahlta 
				AND (RAM < 2900 OR (clockspeed < 3000 AND processor = 0) OR (RAM IS NULL OR clockspeed IS NULL))
				 AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
			)
			AS totF,
			(
			SELECT COUNT(*) 
			FROM compat
			WHERE ahlta = @ahlta
				AND (RAM >= 2900 
					AND ((clockspeed >= 3000 AND processor = 0) OR processor = 1))
						AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
			)
			AS totP
		FROM compat
	
	ELSE
	
		SELECT DISTINCT 
		   (
			SELECT COUNT(*) 
			FROM compat
			WHERE ahlta = @ahlta 
				AND (RAM < 1900 OR (clockspeed < 2000 AND processor = 0) OR (RAM IS NULL OR clockspeed IS NULL))
				 AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
			)
			AS totF,
			(
			SELECT COUNT(*) 
			FROM compat
			WHERE ahlta = @ahlta
				AND (RAM >= 1900 
					AND ((clockspeed >= 2000 AND processor = 0) OR processor = 1))
						AND OS NOT LIKE 'Microsoft(R) Windows(R) Server%'
			)
			AS totP
		FROM compat	
END
GO
/****** Object:  StoredProcedure [dbo].[spWin7Comp]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Marc Anderson
-- Create date: 8/11/2009
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spWin7Comp] 
	-- Add the parameters for the stored procedure here
	@ahlta int,
	@os int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here 
    
    IF (@ahlta > -1)
		IF (@os = 1)
			SELECT DISTINCT 
			   (
				SELECT COUNT(*) 
				FROM compat 
				WHERE ahlta = @ahlta 
					AND OS LIKE '%Microsoft Windows 7%'
					AND (RAM < 2000 OR clockspeed < 1000)
				)
				AS tot7
			
		ELSE 
			SELECT DISTINCT 
			   (
				SELECT COUNT(*) 
				FROM compat
				WHERE ahlta = @ahlta 
					AND OS NOT LIKE '%Microsoft Windows 7%'
					AND (RAM < 2000 OR clockspeed < 1000)
				)
				AS tot7	
    
    ELSE
    
		IF (@os = 1)
			SELECT DISTINCT 
			   (
				SELECT COUNT(*) 
				FROM compat 
				WHERE OS LIKE '%Microsoft Windows 7%'
					AND (RAM < 2000 OR clockspeed < 1000)
				)
				AS tot7
			
		ELSE 
			SELECT DISTINCT 
			   (
				SELECT COUNT(*) 
				FROM compat
				WHERE OS NOT LIKE '%Microsoft Windows 7%'
					AND (RAM < 2000 OR clockspeed < 1000)
				)
				AS tot7	
END
GO
/****** Object:  StoredProcedure [dbo].[spUpdateUsamitcDesktopEcn]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spUpdateUsamitcDesktopEcn]
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	UPDATE	dbo.UsamitcDesktopStandardizationData
	SET		EcnCheck = '0' + RIGHT(UsamitcName, 5)
	WHERE	(LEFT(UsamitcName, 4) = 'AMED')
		AND	(IsNumeric(RIGHT(UsamitcName, 5)) = 1)
END
GO
/****** Object:  StoredProcedure [dbo].[spUpdateForm3161Items]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 9-11-2010
-- Description:	 Tribute
-- =============================================
CREATE PROCEDURE [dbo].[spUpdateForm3161Items]
   (@InstanceID INT,
	  @ItemNoA INT,
	  @StockNo NVARCHAR(6),
    @ItemDescription NVARCHAR(255) = null,
	  @UnitOfIssue NVARCHAR(255) = null,
    @Quantity INT,
    @Code NVARCHAR(255) = null,
    @SupplyAction NVARCHAR(255) = null,
    @UnitPrice float = null,
    @TotalCost float = null,
    @PostedDate DateTime = null,
    @PostedBy NVARCHAR(255) = null,
    @ItemStatus INT,
    @ItemID INT)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    UPDATE Form3161Items 
    SET InstanceId = @InstanceID, ItemNoA = @ItemNoA, StockNo = @StockNo, ItemDescription = @ItemDescription, UnitOfIssue = @UnitOfIssue, Quantity = @Quantity, 
      Code = @Code, SupplyAction = @SupplyAction, UnitPrice = @UnitPrice, TotalCost = @TotalCost, PostedDate = @PostedDate, PostedBy = @PostedBy, 
      ItemStatus = @ItemStatus 
    WHERE (InstanceID = @InstanceID) AND (ItemID = @ItemID) 
END
GO
/****** Object:  StoredProcedure [dbo].[spResetIdentities]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 07-15-2010
-- Description:	Reseed tables to 0
-- =============================================
CREATE PROCEDURE [dbo].[spResetIdentities]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	
		DELETE FROM Form2062Items
		DBCC CHECKIDENT(Form2062Items, RESEED, 0);
		DELETE FROM Form2062Instances
		DBCC CHECKIDENT(Form2062Instances, RESEED, 0);
		
		DELETE FROM Form3161Items
		DBCC CHECKIDENT(Form3161Items, RESEED, 0);
		DELETE FROM Form3161Instances
		DBCC CHECKIDENT(Form3161Instances, RESEED, 0);		

END
GO
/****** Object:  StoredProcedure [dbo].[spReset3161PermTables]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 04-06-2010
-- Description:	Delete rows and resets identity column to 0
-- =============================================
CREATE PROCEDURE [dbo].[spReset3161PermTables] 

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @SQL NVARCHAR(900);
	
	DELETE FROM Form3161Items;
	DELETE FROM Form3161Instances
	
	DBCC CHECKIDENT(Form3161Items, RESEED, 0);
	DBCC CHECKIDENT(Form3161Instances, RESEED, 0);

END
GO
/****** Object:  StoredProcedure [dbo].[spReset2062PermTables]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 04-06-2010
-- Description:	Delete rows and resets identity column to 0
-- =============================================
CREATE PROCEDURE [dbo].[spReset2062PermTables] 

AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @SQL NVARCHAR(900);
	
	-- Must delete from Items table first	
	
	DELETE FROM Form2062Items;
	DELETE FROM Form2062Instances;
	
	DBCC CHECKIDENT(Form2062Items, RESEED, 0);
	DBCC CHECKIDENT(Form2062Instances, RESEED, 0);

END
GO
/****** Object:  StoredProcedure [dbo].[spRemove3161ByInstanceID]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 2010-12-06
-- Description:	
-- =============================================
CREATE PROCEDURE [dbo].[spRemove3161ByInstanceID]
	-- Add the parameters for the stored procedure here
	@id INT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	DELETE FROM Form3161Items WHERE InstanceID = @id
	DELETE FROM Form3161Instances WHERE InstanceID = @id 
	
END
GO
/****** Object:  StoredProcedure [dbo].[spLifeCycleTot]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spLifeCycleTot] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	
	
	--SELECT COUNT(*) as tot FROM SMSComputer;
	
	DECLARE @outlying int
	DECLARE @nonEamc int
	DECLARE @eamc int
	DECLARE @tot int
	
	SET @outlying = (SELECT	COUNT(*)
					FROM	lcFacility JOIN
								SMSComputer ON lcFacility.facilityID = LEFT(SMSComputer.Name, 8)
					WHERE	lcFacility.facilityName <> 'Eisenhower')
	
	
	SET @nonEamc = (SELECT	COUNT(*)
					FROM	lcGroup INNER JOIN
								DMLSS ON lcGroup.HandReceipt = DMLSS.CustomerId INNER JOIN
									SMSComputer AS SMSComputer_1 ON DMLSS.Ecn5 = SMSComputer_1.Name5)
	
	SET @eamc = (SELECT	COUNT(*) 
				FROM	lcFacility AS lcFacility_1 LEFT JOIN
							SMSComputer AS SMSComputer_2 ON lcFacility_1.facilityID = LEFT(SMSComputer_2.Name, 8) JOIN
								DMLSS AS DMLSS_1 ON SMSComputer_2.Name5 = DMLSS_1.Ecn5
				WHERE	(lcFacility_1.facilityName = 'Eisenhower'  
							AND (DMLSS_1.CustomerId NOT IN (SELECT	HandReceipt 
															FROM	lcGroup AS lcGroup_1) 
								OR DMLSS_1.CustomerId IS NULL)
								)
						)
	
	SET @tot = @outlying + @nonEamc + @eamc
	
	SELECT @tot AS tot
END
GO
/****** Object:  StoredProcedure [dbo].[spLifeCycleFacility]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spLifeCycleFacility] 
	-- Add the parameters for the stored procedure here
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	-- Insert statements for procedure here
	SELECT	loc, COUNT(*) AS tot
	FROM		(SELECT	lcFacility.facilityName AS loc
				FROM	lcFacility INNER JOIN
							SMSComputer ON lcFacility.facilityID = LEFT(SMSComputer.Name, 8)
				WHERE	(lcFacility.facilityName <> 'Eisenhower')) AS A
	GROUP BY loc
	UNION ALL
	SELECT	loc, COUNT(*) AS tot
	FROM		(SELECT	lcGroup.GroupID AS loc
				FROM	lcGroup INNER JOIN
							DMLSS ON lcGroup.HandReceipt = DMLSS.CustomerId INNER JOIN
								SMSComputer AS SMSComputer_1 ON DMLSS.Ecn5 = SMSComputer_1.Name5) AS B
	GROUP BY loc
	UNION ALL
	SELECT	loc, COUNT(*) AS tot
	FROM	(SELECT	lcFacility_1.facilityName AS loc
			FROM	lcFacility AS lcFacility_1 LEFT JOIN
						SMSComputer AS SMSComputer_2 ON lcFacility_1.facilityID = LEFT(SMSComputer_2.Name, 8) JOIN
							DMLSS AS DMLSS_1 ON SMSComputer_2.Name5 = DMLSS_1.Ecn5
			WHERE	(lcFacility_1.facilityName = 'Eisenhower'  
				AND (DMLSS_1.CustomerId NOT IN (SELECT	HandReceipt 
												FROM	lcGroup AS lcGroup_1) 
					OR DMLSS_1.CustomerId IS NULL)
					)
			) AS C
	GROUP BY loc
	ORDER BY loc, tot DESC
END
GO
/****** Object:  StoredProcedure [dbo].[spLifeCycleModelTot]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spLifeCycleModelTot] 
	-- Add the parameters for the stored procedure here
	@criteria varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	DECLARE @group int
    -- Insert statements for procedure here
	SET @group = CHARINDEX('/', @criteria)
	
	IF (@group != 11)
		
		IF (@criteria = 'Eisenhower')
			SELECT	COUNT(*) AS tot
			FROM	(SELECT  ModelAlias.ModelAlias AS modl
						FROM    ModelAlias RIGHT JOIN
							SMSComputer ON ModelAlias.Model = SMSComputer.Model LEFT JOIN
								DMLSS AS DMLSS ON SMSComputer.Name5 = DMLSS.Ecn5 LEFT JOIN
									Alias ON ModelAlias.Manufacturer = Alias.Manufacturer RIGHT JOIN 
										lcFacility ON LEFT(SMSComputer.Name, 8) = lcFacility.facilityID
			WHERE	(lcFacility.facilityName = 'Eisenhower'  
			AND (DMLSS.CustomerId NOT IN
				(SELECT	HandReceipt
				FROM	lcGroup AS lcGroup_1) OR DMLSS.CustomerId IS NULL))) AS C
		ELSE
			SELECT COUNT(*) as tot 
			FROM SMSComputer INNER JOIN
				lcFacility ON LEFT(SMSComputer.Name, 8) = lcFacility.facilityID 
			WHERE		(lcFacility.facilityName = @criteria);	
		
	ELSE
		SELECT COUNT(*) as tot 
		FROM SMSComputer INNER JOIN
			DMLSS ON DMLSS.Ecn5 = SMSComputer.Name5 JOIN
				lcGroup ON lcGroup.HandReceipt = DMLSS.CustomerID
		WHERE		(lcGroup.GroupID = @criteria);
END
GO
/****** Object:  StoredProcedure [dbo].[spLifeCycleModel]    Script Date: 10/05/2018 13:10:05 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spLifeCycleModel]
	-- Add the parameters for the stored procedure here
	@criteria varchar(50)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	DECLARE @group int
	DECLARE @test int
    -- Insert statements for procedure here
	SET @test = CHARINDEX('Eisenhower', @criteria)
	SET @group = CHARINDEX('/', @criteria)
	
	IF (@group != 11)
		IF (@test != 0)
			SELECT	manu + ' ' + modl as model, manu, modl, COUNT(*) AS tot
			FROM	(
					SELECT  Alias.Alias AS manu, ModelAlias.ModelAlias AS modl
					FROM    ModelAlias RIGHT JOIN
							SMSComputer ON ModelAlias.Model = SMSComputer.Model LEFT JOIN
								DMLSS AS DMLSS ON SMSComputer.Name5 = DMLSS.Ecn5 LEFT JOIN
									Alias ON ModelAlias.Manufacturer = Alias.Manufacturer RIGHT JOIN 
										lcFacility ON LEFT(SMSComputer.Name, 8) = lcFacility.facilityID
									WHERE      (lcFacility.facilityName = @criteria)
									AND	(DMLSS.CustomerId NOT IN
											(SELECT	HandReceipt
											FROM	lcGroup AS lcGroup_1
											) 
											OR DMLSS.CustomerId IS NULL
										)
					) 
			AS A
			GROUP BY manu, modl
			ORDER BY model, tot DESC
		
		ELSE
			SELECT     manu + ' ' + modl as model, manu, modl, COUNT(*) AS tot
			FROM         (
							SELECT  Alias.Alias AS manu, ModelAlias.ModelAlias AS modl
							FROM    ModelAlias RIGHT JOIN
										SMSComputer ON ModelAlias.Model = SMSComputer.Model RIGHT JOIN
											Alias ON ModelAlias.Manufacturer = Alias.Manufacturer RIGHT JOIN 
												lcFacility ON LEFT(SMSComputer.Name, 8) = lcFacility.facilityID
							WHERE	(lcFacility.facilityName = @criteria)
							) 
			AS A
			GROUP BY manu, modl
			ORDER BY model, tot DESC

	
	ELSE
		
		SELECT     manu + ' ' + modl as model, manu, modl, COUNT(*) AS tot
		FROM         (
						SELECT  Alias.Alias AS manu, ModelAlias.ModelAlias AS modl
						FROM    ModelAlias INNER JOIN
								SMSComputer ON ModelAlias.Model = SMSComputer.Model LEFT OUTER JOIN
									Alias ON ModelAlias.Manufacturer = Alias.Manufacturer INNER JOIN 
										DMLSS ON DMLSS.Ecn5 = SMSComputer.Name5 RIGHT JOIN
											lcGroup ON lcGroup.HandReceipt = DMLSS.CustomerID
						WHERE     (lcGroup.GroupID = @criteria)
						) 
		AS A
		GROUP BY manu, modl
		ORDER BY model, tot DESC					
END
GO
/****** Object:  StoredProcedure [dbo].[spGet3161Item]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGet3161Item] 
	-- Add the parameters for the stored procedure here
	@instanceID int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT  ItemId, InstanceId, ItemNoA, StockNo, ItemDescription, UnitOfIssue, Quantity, Code, SupplyAction, UnitPrice, TotalCost, PostedDate, PostedBy, ItemStatus, pageCount, pageOfPages
	FROM dbo.Form3161Items
	WHERE InstanceId = @instanceID;
END
GO
/****** Object:  StoredProcedure [dbo].[spGet3161PermItemID]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 3-30-2010
-- Description:	Return a new instance id which
-- is the last one saved plus 1
-- =============================================
CREATE PROCEDURE [dbo].[spGet3161PermItemID]
	@scopeIdentity INT OUTPUT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT COUNT(*) FROM [dbo].[Form3161Items]
	SET @scopeIdentity = (SELECT IDENT_CURRENT('Form3161Items'))
	SELECT @scopeIdentity
END
GO
/****** Object:  StoredProcedure [dbo].[spGet2062PermItemID]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		Keith Lucas
-- Create date: 3-30-2010
-- Description:	Return a new instance id which
-- is the last one saved plus 1
-- =============================================
CREATE PROCEDURE [dbo].[spGet2062PermItemID]
	@scopeIdentity INT OUTPUT
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	SELECT COUNT(*) FROM [dbo].[Form2062Items]
	SET @scopeIdentity = (SELECT IDENT_CURRENT('Form2062Items'))
END
GO
/****** Object:  StoredProcedure [dbo].[spGet2062Items]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGet2062Items] 
	-- Add the parameters for the stored procedure here
	@InstanceID varchar(255)
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT ItemId, InstanceID, stockNo, itemDescription, cColumn, sec, ui, qtyAuth, qtyA, qtyB, qtyC, qtyD, qtyE, qtyF, ItemStatus, PgeCnt, PageOfPages
	FROM dbo.Form2062Items
	WHERE	InstanceID = @InstanceID
END
GO
/****** Object:  StoredProcedure [dbo].[spGet2062Item]    Script Date: 10/05/2018 13:10:04 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[spGet2062Item] 
	-- Add the parameters for the stored procedure here
	@instanceID int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    -- Insert statements for procedure here
	SELECT  ItemId, InstanceID, stockNo, itemDescription, cColumn, sec, ui, qtyAuth, qtyA, qtyB, qtyC, qtyD, qtyE, qtyF, ItemStatus, PgeCnt, PageOfPages
	FROM dbo.Form2062Items
	WHERE InstanceId = @instanceID;
END
GO
/****** Object:  Default [DF_Groups_Active]    Script Date: 10/05/2018 13:10:02 ******/
ALTER TABLE [dbo].[Groups] ADD  CONSTRAINT [DF_Groups_Active]  DEFAULT ((1)) FOR [Active]
GO
/****** Object:  Default [DF_Users_Active]    Script Date: 10/05/2018 13:10:02 ******/
ALTER TABLE [dbo].[Users] ADD  CONSTRAINT [DF_Users_Active]  DEFAULT ((1)) FOR [Active]
GO
/****** Object:  ForeignKey [FK_Form2062Items_Form2062Instances]    Script Date: 10/05/2018 13:10:02 ******/
ALTER TABLE [dbo].[Form2062Items]  WITH CHECK ADD  CONSTRAINT [FK_Form2062Items_Form2062Instances] FOREIGN KEY([InstanceID])
REFERENCES [dbo].[Form2062Instances] ([InstanceId])
GO
ALTER TABLE [dbo].[Form2062Items] CHECK CONSTRAINT [FK_Form2062Items_Form2062Instances]
GO
/****** Object:  ForeignKey [FK_Form3161Items_Form3161Instances]    Script Date: 10/05/2018 13:10:02 ******/
ALTER TABLE [dbo].[Form3161Items]  WITH CHECK ADD  CONSTRAINT [FK_Form3161Items_Form3161Instances] FOREIGN KEY([InstanceId])
REFERENCES [dbo].[Form3161Instances] ([InstanceId])
GO
ALTER TABLE [dbo].[Form3161Items] CHECK CONSTRAINT [FK_Form3161Items_Form3161Instances]
GO
/****** Object:  ForeignKey [FK_lcGroup_lcFacility]    Script Date: 10/05/2018 13:10:02 ******/
ALTER TABLE [dbo].[lcGroup]  WITH CHECK ADD  CONSTRAINT [FK_lcGroup_lcFacility] FOREIGN KEY([facilityID])
REFERENCES [dbo].[lcFacility] ([facilityID])
GO
ALTER TABLE [dbo].[lcGroup] CHECK CONSTRAINT [FK_lcGroup_lcFacility]
GO
